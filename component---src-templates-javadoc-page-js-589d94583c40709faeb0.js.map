{"version":3,"file":"component---src-templates-javadoc-page-js-589d94583c40709faeb0.js","mappings":"mNAyDA,UAlDoBA,IAAyB,IAAxB,KAAEC,EAAI,SAAEC,GAAUF,EACrC,MAAM,mBAAEG,IAAuBC,EAAAA,EAAAA,KACzBC,EAAYJ,EAAKK,eAAeC,MAAM,GAAGC,KAAKC,QACjDC,WAAW,aAAc,KACzBA,WAAW,QAAS,IACpBA,WACC,kBAAkB,WAEsB,MAAtCP,aAAkB,EAAlBA,EAAoBQ,eAChB,IACAR,aAAkB,EAAlBA,EAAoBQ,eAAgB,KAAG,YAG3CC,GAAWC,EAAAA,EAAAA,YAAWC,EAAAA,IAU5B,OARAC,EAAAA,EAAAA,YAAU,KACRH,EAAS,CAAEI,KAAM,8BAA+BC,QAASf,IACzDU,EAAS,CACPI,KAAM,0BACNC,QAAS,CAAEf,SAAUA,IACrB,GACD,CAACA,IAGFgB,EAAAA,cAACC,EAAAA,EAAM,CAACC,YAAanB,EAAKoB,SACxBH,EAAAA,cAACI,EAAAA,GAAG,CAACC,EAAE,OAAOC,wBAAyB,CAAEC,OAAQpB,KAC1C,C","sources":["webpack://radiant-logic-documentation/./src/templates/javadoc-page.js"],"sourcesContent":["import React, { useContext, useEffect } from \"react\"\nimport { graphql } from \"gatsby\"\nimport Layout from \"../components/layout\"\nimport \"../styles/javadoc.css\"\nimport { Box } from \"@chakra-ui/react\"\nimport { GlobalDispatchContext } from \"../context/globalContextProvider\"\nimport useApiVersioning from \"../hooks/useApiVersioning\"\nconst JavadocPage = ({ data, location }) => {\n  const { selectedApiVersion } = useApiVersioning()\n  const generated = data.allHtmlContent.edges[0].node.content\n    .replaceAll(/(\\.\\.\\/)+/g, \"/\")\n    .replaceAll(\".html\", \"\")\n    .replaceAll(\n      /href=\"\\/?(?!#)/g,\n      `href=\"/${\n        selectedApiVersion?.versionPrefix === \"\"\n          ? \"\"\n          : selectedApiVersion?.versionPrefix + \"/\"\n      }javadoc/`\n    )\n  const dispatch = useContext(GlobalDispatchContext)\n\n  useEffect(() => {\n    dispatch({ type: \"UPDATE_SELECTED_API_VERSION\", payload: location })\n    dispatch({\n      type: \"UPDATE_CURRENT_LOCATION\",\n      payload: { location: location },\n    })\n  }, [location])\n\n  return (\n    <Layout tocContents={data.rootToc}>\n      <Box w=\"100%\" dangerouslySetInnerHTML={{ __html: generated }} />\n    </Layout>\n  )\n}\n\nexport const query = graphql`\n  query ($name: String!, $rootTocRegex: String!) {\n    allHtmlContent(filter: { name: { eq: $name } }) {\n      edges {\n        node {\n          name\n          content\n        }\n      }\n    }\n    rootToc: markdownRemark(fileAbsolutePath: { regex: $rootTocRegex }) {\n      fileAbsolutePath\n      frontmatter {\n        title\n      }\n      htmlAst\n    }\n  }\n`\n\nexport default JavadocPage\n"],"names":["_ref","data","location","selectedApiVersion","useApiVersioning","generated","allHtmlContent","edges","node","content","replaceAll","versionPrefix","dispatch","useContext","GlobalDispatchContext","useEffect","type","payload","React","Layout","tocContents","rootToc","Box","w","dangerouslySetInnerHTML","__html"],"sourceRoot":""}