{"version":3,"file":"component---src-templates-javadoc-page-js-589d94583c40709faeb0.js","mappings":"mNAyDA,UAlDoBA,IAAyB,IAAxB,KAAEC,EAAI,SAAEC,GAAUF,EACrC,MAAM,mBAAEG,IAAuBC,EAAAA,EAAAA,KACzBC,EAAYJ,EAAKK,eAAeC,MAAM,GAAGC,KAAKC,QACjDC,WAAW,aAAc,KACzBA,WAAW,QAAS,IACpBA,WACC,kBAAkB,WAEsB,MAAtCP,aAAkB,EAAlBA,EAAoBQ,eAChB,IACAR,aAAkB,EAAlBA,EAAoBQ,eAAgB,KAAG,YAG3CC,GAAWC,EAAAA,EAAAA,YAAWC,EAAAA,IAU5B,OARAC,EAAAA,EAAAA,YAAU,KACRH,EAAS,CAAEI,KAAM,8BAA+BC,QAASf,IACzDU,EAAS,CACPI,KAAM,0BACNC,QAAS,CAAEf,SAAUA,IACrB,GACD,CAACA,IAGFgB,EAAAA,cAACC,EAAAA,EAAM,CAACC,YAAanB,EAAKoB,SACxBH,EAAAA,cAACI,EAAAA,GAAG,CAACC,EAAE,OAAOC,wBAAyB,CAAEC,OAAQpB,KAC1C,C","sources":["webpack://radiant-logic-documentation/./src/templates/javadoc-page.js"],"sourcesContent":["import React, { useContext, useEffect } from \"react\"\r\nimport { graphql } from \"gatsby\"\r\nimport Layout from \"../components/layout\"\r\nimport \"../styles/javadoc.css\"\r\nimport { Box } from \"@chakra-ui/react\"\r\nimport { GlobalDispatchContext } from \"../context/globalContextProvider\"\r\nimport useApiVersioning from \"../hooks/useApiVersioning\"\r\nconst JavadocPage = ({ data, location }) => {\r\n  const { selectedApiVersion } = useApiVersioning()\r\n  const generated = data.allHtmlContent.edges[0].node.content\r\n    .replaceAll(/(\\.\\.\\/)+/g, \"/\")\r\n    .replaceAll(\".html\", \"\")\r\n    .replaceAll(\r\n      /href=\"\\/?(?!#)/g,\r\n      `href=\"/${\r\n        selectedApiVersion?.versionPrefix === \"\"\r\n          ? \"\"\r\n          : selectedApiVersion?.versionPrefix + \"/\"\r\n      }javadoc/`\r\n    )\r\n  const dispatch = useContext(GlobalDispatchContext)\r\n\r\n  useEffect(() => {\r\n    dispatch({ type: \"UPDATE_SELECTED_API_VERSION\", payload: location })\r\n    dispatch({\r\n      type: \"UPDATE_CURRENT_LOCATION\",\r\n      payload: { location: location },\r\n    })\r\n  }, [location])\r\n\r\n  return (\r\n    <Layout tocContents={data.rootToc}>\r\n      <Box w=\"100%\" dangerouslySetInnerHTML={{ __html: generated }} />\r\n    </Layout>\r\n  )\r\n}\r\n\r\nexport const query = graphql`\r\n  query ($name: String!, $rootTocRegex: String!) {\r\n    allHtmlContent(filter: { name: { eq: $name } }) {\r\n      edges {\r\n        node {\r\n          name\r\n          content\r\n        }\r\n      }\r\n    }\r\n    rootToc: markdownRemark(fileAbsolutePath: { regex: $rootTocRegex }) {\r\n      fileAbsolutePath\r\n      frontmatter {\r\n        title\r\n      }\r\n      htmlAst\r\n    }\r\n  }\r\n`\r\n\r\nexport default JavadocPage\r\n"],"names":["_ref","data","location","selectedApiVersion","useApiVersioning","generated","allHtmlContent","edges","node","content","replaceAll","versionPrefix","dispatch","useContext","GlobalDispatchContext","useEffect","type","payload","React","Layout","tocContents","rootToc","Box","w","dangerouslySetInnerHTML","__html"],"sourceRoot":""}