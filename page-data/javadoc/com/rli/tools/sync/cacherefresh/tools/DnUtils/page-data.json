{"componentChunkName":"component---src-templates-javadoc-page-js","path":"/javadoc/com/rli/tools/sync/cacherefresh/tools/DnUtils/","result":{"data":{"allHtmlContent":{"edges":[{"node":{"name":"DnUtils","content":"<!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 4.01 Transitional//EN\" \"http://www.w3.org/TR/html4/loose.dtd\">\r\n<!-- NewPage -->\r\n<html lang=\"en\">\r\n<head>\r\n<!-- Generated by javadoc (1.8.0_202) on Wed Mar 15 01:48:00 PDT 2023 -->\r\n<title>DnUtils (Radiant Logic, Inc.)</title>\r\n<meta name=\"date\" content=\"2023-03-15\">\r\n<link rel=\"stylesheet\" type=\"text/css\" href=\"../../../../../../stylesheet.css\" title=\"Style\">\r\n<script type=\"text/javascript\" src=\"../../../../../../script.js\"></script>\r\n</head>\r\n<body>\r\n<script type=\"text/javascript\"><!--\r\n    try {\r\n        if (location.href.indexOf('is-external=true') == -1) {\r\n            parent.document.title=\"DnUtils (Radiant Logic, Inc.)\";\r\n        }\r\n    }\r\n    catch(err) {\r\n    }\r\n//-->\r\nvar methods = {\"i0\":9,\"i1\":9,\"i2\":9,\"i3\":9,\"i4\":9,\"i5\":9,\"i6\":9,\"i7\":9,\"i8\":9,\"i9\":9,\"i10\":9,\"i11\":9,\"i12\":9,\"i13\":9,\"i14\":9,\"i15\":9,\"i16\":9,\"i17\":9,\"i18\":9,\"i19\":9,\"i20\":9,\"i21\":9,\"i22\":9,\"i23\":9,\"i24\":9,\"i25\":9,\"i26\":9,\"i27\":9,\"i28\":9,\"i29\":9,\"i30\":9,\"i31\":9,\"i32\":9,\"i33\":9,\"i34\":9,\"i35\":9,\"i36\":9,\"i37\":9,\"i38\":9};\r\nvar tabs = {65535:[\"t0\",\"All Methods\"],1:[\"t1\",\"Static Methods\"],8:[\"t4\",\"Concrete Methods\"]};\r\nvar altColor = \"altColor\";\r\nvar rowColor = \"rowColor\";\r\nvar tableTab = \"tableTab\";\r\nvar activeTableTab = \"activeTableTab\";\r\n</script>\r\n<noscript>\r\n<div>JavaScript is disabled on your browser.</div>\r\n</noscript>\r\n<!-- ========= START OF TOP NAVBAR ======= -->\r\n<div class=\"topNav\"><a name=\"navbar.top\">\r\n<!--   -->\r\n</a>\r\n<div class=\"skipNav\"><a href=\"#skip.navbar.top\" title=\"Skip navigation links\">Skip navigation links</a></div>\r\n<a name=\"navbar.top.firstrow\">\r\n<!--   -->\r\n</a>\r\n<ul class=\"navList\" title=\"Navigation\">\r\n<li><a href=\"../../../../../../overview-summary.html\">Overview</a></li>\r\n<li><a href=\"package-summary.html\">Package</a></li>\r\n<li class=\"navBarCell1Rev\">Class</li>\r\n<li><a href=\"package-tree.html\">Tree</a></li>\r\n<li><a href=\"../../../../../../deprecated-list.html\">Deprecated</a></li>\r\n<li><a href=\"../../../../../../index-all.html\">Index</a></li>\r\n<li><a href=\"../../../../../../help-doc.html\">Help</a></li>\r\n</ul>\r\n</div>\r\n<div class=\"subNav\">\r\n<ul class=\"navList\">\r\n<li>Prev&nbsp;Class</li>\r\n<li><a href=\"../../../../../../com/rli/tools/sync/cacherefresh/tools/StringUtils.html\" title=\"class in com.rli.tools.sync.cacherefresh.tools\"><span class=\"typeNameLink\">Next&nbsp;Class</span></a></li>\r\n</ul>\r\n<ul class=\"navList\">\r\n<li><a href=\"../../../../../../index.html?com/rli/tools/sync/cacherefresh/tools/DnUtils.html\" target=\"_top\">Frames</a></li>\r\n<li><a href=\"DnUtils.html\" target=\"_top\">No&nbsp;Frames</a></li>\r\n</ul>\r\n<ul class=\"navList\" id=\"allclasses_navbar_top\">\r\n<li><a href=\"../../../../../../allclasses-noframe.html\">All&nbsp;Classes</a></li>\r\n</ul>\r\n<div>\r\n<script type=\"text/javascript\"><!--\r\n  allClassesLink = document.getElementById(\"allclasses_navbar_top\");\r\n  if(window==top) {\r\n    allClassesLink.style.display = \"block\";\r\n  }\r\n  else {\r\n    allClassesLink.style.display = \"none\";\r\n  }\r\n  //-->\r\n</script>\r\n</div>\r\n<div>\r\n<ul class=\"subNavList\">\r\n<li>Summary:&nbsp;</li>\r\n<li>Nested&nbsp;|&nbsp;</li>\r\n<li><a href=\"#field.summary\">Field</a>&nbsp;|&nbsp;</li>\r\n<li>Constr&nbsp;|&nbsp;</li>\r\n<li><a href=\"#method.summary\">Method</a></li>\r\n</ul>\r\n<ul class=\"subNavList\">\r\n<li>Detail:&nbsp;</li>\r\n<li><a href=\"#field.detail\">Field</a>&nbsp;|&nbsp;</li>\r\n<li>Constr&nbsp;|&nbsp;</li>\r\n<li><a href=\"#method.detail\">Method</a></li>\r\n</ul>\r\n</div>\r\n<a name=\"skip.navbar.top\">\r\n<!--   -->\r\n</a></div>\r\n<!-- ========= END OF TOP NAVBAR ========= -->\r\n<!-- ======== START OF CLASS DATA ======== -->\r\n<div class=\"header\">\r\n<div class=\"subTitle\">com.rli.tools.sync.cacherefresh.tools</div>\r\n<h2 title=\"Class DnUtils\" class=\"title\">Class DnUtils</h2>\r\n</div>\r\n<div class=\"contentContainer\">\r\n<ul class=\"inheritance\">\r\n<li>java.lang.Object</li>\r\n<li>\r\n<ul class=\"inheritance\">\r\n<li>com.rli.tools.sync.cacherefresh.tools.DnUtils</li>\r\n</ul>\r\n</li>\r\n</ul>\r\n<div class=\"description\">\r\n<ul class=\"blockList\">\r\n<li class=\"blockList\">\r\n<hr>\r\n<br>\r\n<pre>public class <span class=\"typeNameLabel\">DnUtils</span>\r\nextends java.lang.Object</pre>\r\n</li>\r\n</ul>\r\n</div>\r\n<div class=\"summary\">\r\n<ul class=\"blockList\">\r\n<li class=\"blockList\">\r\n<!-- =========== FIELD SUMMARY =========== -->\r\n<ul class=\"blockList\">\r\n<li class=\"blockList\"><a name=\"field.summary\">\r\n<!--   -->\r\n</a>\r\n<h3>Field Summary</h3>\r\n<table class=\"memberSummary\" border=\"0\" cellpadding=\"3\" cellspacing=\"0\" summary=\"Field Summary table, listing fields, and an explanation\">\r\n<caption><span>Fields</span><span class=\"tabEnd\">&nbsp;</span></caption>\r\n<tr>\r\n<th class=\"colFirst\" scope=\"col\">Modifier and Type</th>\r\n<th class=\"colLast\" scope=\"col\">Field and Description</th>\r\n</tr>\r\n<tr class=\"altColor\">\r\n<td class=\"colFirst\"><code>static java.lang.String</code></td>\r\n<td class=\"colLast\"><code><span class=\"memberNameLink\"><a href=\"../../../../../../com/rli/tools/sync/cacherefresh/tools/DnUtils.html#VAR_DN\">VAR_DN</a></span></code>\r\n<div class=\"block\">Placeholder used in methods that do value substitution in distinguished\r\n names.</div>\r\n</td>\r\n</tr>\r\n<tr class=\"rowColor\">\r\n<td class=\"colFirst\"><code>static java.lang.String</code></td>\r\n<td class=\"colLast\"><code><span class=\"memberNameLink\"><a href=\"../../../../../../com/rli/tools/sync/cacherefresh/tools/DnUtils.html#VAR_RDN\">VAR_RDN</a></span></code>\r\n<div class=\"block\">Placeholder used in methods that do value substitution in distinguished\r\n names.</div>\r\n</td>\r\n</tr>\r\n</table>\r\n</li>\r\n</ul>\r\n<!-- ========== METHOD SUMMARY =========== -->\r\n<ul class=\"blockList\">\r\n<li class=\"blockList\"><a name=\"method.summary\">\r\n<!--   -->\r\n</a>\r\n<h3>Method Summary</h3>\r\n<table class=\"memberSummary\" border=\"0\" cellpadding=\"3\" cellspacing=\"0\" summary=\"Method Summary table, listing methods, and an explanation\">\r\n<caption><span id=\"t0\" class=\"activeTableTab\"><span>All Methods</span><span class=\"tabEnd\">&nbsp;</span></span><span id=\"t1\" class=\"tableTab\"><span><a href=\"javascript:show(1);\">Static Methods</a></span><span class=\"tabEnd\">&nbsp;</span></span><span id=\"t4\" class=\"tableTab\"><span><a href=\"javascript:show(8);\">Concrete Methods</a></span><span class=\"tabEnd\">&nbsp;</span></span></caption>\r\n<tr>\r\n<th class=\"colFirst\" scope=\"col\">Modifier and Type</th>\r\n<th class=\"colLast\" scope=\"col\">Method and Description</th>\r\n</tr>\r\n<tr id=\"i0\" class=\"altColor\">\r\n<td class=\"colFirst\"><code>static int</code></td>\r\n<td class=\"colLast\"><code><span class=\"memberNameLink\"><a href=\"../../../../../../com/rli/tools/sync/cacherefresh/tools/DnUtils.html#calculateLevelDif-java.lang.String-java.lang.String-\">calculateLevelDif</a></span>(java.lang.String&nbsp;parentDn,\r\n                 java.lang.String&nbsp;childDn)</code>\r\n<div class=\"block\">Given a parent DN and a child DN, returns the difference in depth between\r\n those two DNs.</div>\r\n</td>\r\n</tr>\r\n<tr id=\"i1\" class=\"rowColor\">\r\n<td class=\"colFirst\"><code>static java.lang.String[]</code></td>\r\n<td class=\"colLast\"><code><span class=\"memberNameLink\"><a href=\"../../../../../../com/rli/tools/sync/cacherefresh/tools/DnUtils.html#cutDN-java.lang.String-java.lang.String-\">cutDN</a></span>(java.lang.String&nbsp;dnToCut,\r\n     java.lang.String&nbsp;rdnNameDivision)</code>\r\n<div class=\"block\">Splits a DN into three parts based on a given RDN name.</div>\r\n</td>\r\n</tr>\r\n<tr id=\"i2\" class=\"altColor\">\r\n<td class=\"colFirst\"><code>static boolean</code></td>\r\n<td class=\"colLast\"><code><span class=\"memberNameLink\"><a href=\"../../../../../../com/rli/tools/sync/cacherefresh/tools/DnUtils.html#equalsDN-java.lang.String-java.lang.String-\">equalsDN</a></span>(java.lang.String&nbsp;dn1,\r\n        java.lang.String&nbsp;dn2)</code>\r\n<div class=\"block\">Indicates whether the two given distinguished names are equal (note:\r\n comparison is case-insensitive).</div>\r\n</td>\r\n</tr>\r\n<tr id=\"i3\" class=\"rowColor\">\r\n<td class=\"colFirst\"><code>static boolean</code></td>\r\n<td class=\"colLast\"><code><span class=\"memberNameLink\"><a href=\"../../../../../../com/rli/tools/sync/cacherefresh/tools/DnUtils.html#equalsDN-java.lang.String-java.lang.String-boolean-\">equalsDN</a></span>(java.lang.String&nbsp;dn1,\r\n        java.lang.String&nbsp;dn2,\r\n        boolean&nbsp;isMetaDN)</code>\r\n<div class=\"block\">Indicates whether the two given distinguished names are equal (note:\r\n comparison is case-insensitive).</div>\r\n</td>\r\n</tr>\r\n<tr id=\"i4\" class=\"altColor\">\r\n<td class=\"colFirst\"><code>static java.lang.String[][]</code></td>\r\n<td class=\"colLast\"><code><span class=\"memberNameLink\"><a href=\"../../../../../../com/rli/tools/sync/cacherefresh/tools/DnUtils.html#explodeDN_ArrayNameValue-java.lang.String-\">explodeDN_ArrayNameValue</a></span>(java.lang.String&nbsp;dn)</code>\r\n<div class=\"block\">Given a DN, returns an array where each element is a two-element String\r\n array (first element is the RDN name, second element is the RDN value)\r\n representing the RDN that composes the DN.</div>\r\n</td>\r\n</tr>\r\n<tr id=\"i5\" class=\"rowColor\">\r\n<td class=\"colFirst\"><code>static java.lang.String[]</code></td>\r\n<td class=\"colLast\"><code><span class=\"memberNameLink\"><a href=\"../../../../../../com/rli/tools/sync/cacherefresh/tools/DnUtils.html#explodeDN-java.lang.String-\">explodeDN</a></span>(java.lang.String&nbsp;dn)</code>\r\n<div class=\"block\">Given a DN, returns an array where each element is an RDN that composes\r\n the DN.</div>\r\n</td>\r\n</tr>\r\n<tr id=\"i6\" class=\"altColor\">\r\n<td class=\"colFirst\"><code>static java.lang.String[]</code></td>\r\n<td class=\"colLast\"><code><span class=\"memberNameLink\"><a href=\"../../../../../../com/rli/tools/sync/cacherefresh/tools/DnUtils.html#explodeRDN_fromDN-java.lang.String-\">explodeRDN_fromDN</a></span>(java.lang.String&nbsp;dn)</code>\r\n<div class=\"block\">Returns a two-element String array containing two elements: the name and\r\n the value of the RDN for the given DN.</div>\r\n</td>\r\n</tr>\r\n<tr id=\"i7\" class=\"rowColor\">\r\n<td class=\"colFirst\"><code>static java.lang.String[]</code></td>\r\n<td class=\"colLast\"><code><span class=\"memberNameLink\"><a href=\"../../../../../../com/rli/tools/sync/cacherefresh/tools/DnUtils.html#explodeRDN-java.lang.String-\">explodeRDN</a></span>(java.lang.String&nbsp;rdn)</code>\r\n<div class=\"block\">Returns a two-element String array containing two elements: the name and\r\n the value of the given RDN.</div>\r\n</td>\r\n</tr>\r\n<tr id=\"i8\" class=\"altColor\">\r\n<td class=\"colFirst\"><code>static java.lang.String</code></td>\r\n<td class=\"colLast\"><code><span class=\"memberNameLink\"><a href=\"../../../../../../com/rli/tools/sync/cacherefresh/tools/DnUtils.html#extractNamingContext-java.lang.String-\">extractNamingContext</a></span>(java.lang.String&nbsp;dn)</code>\r\n<div class=\"block\">Given a DN, returns the naming context associated with the DN.</div>\r\n</td>\r\n</tr>\r\n<tr id=\"i9\" class=\"rowColor\">\r\n<td class=\"colFirst\"><code>static java.lang.String</code></td>\r\n<td class=\"colLast\"><code><span class=\"memberNameLink\"><a href=\"../../../../../../com/rli/tools/sync/cacherefresh/tools/DnUtils.html#findValueInDn-java.lang.String-java.lang.String-\">findValueInDn</a></span>(java.lang.String&nbsp;dn,\r\n             java.lang.String&nbsp;attrName)</code>\r\n<div class=\"block\">Returns the value of the given attribute if it is found in the DN.</div>\r\n</td>\r\n</tr>\r\n<tr id=\"i10\" class=\"altColor\">\r\n<td class=\"colFirst\"><code>static java.lang.String</code></td>\r\n<td class=\"colLast\"><code><span class=\"memberNameLink\"><a href=\"../../../../../../com/rli/tools/sync/cacherefresh/tools/DnUtils.html#getDnFromDvxCatalog-java.lang.String-\">getDnFromDvxCatalog</a></span>(java.lang.String&nbsp;externalDn)</code>\r\n<div class=\"block\">For Radiant Logic Internal Use.</div>\r\n</td>\r\n</tr>\r\n<tr id=\"i11\" class=\"rowColor\">\r\n<td class=\"colFirst\"><code>static java.lang.String</code></td>\r\n<td class=\"colLast\"><code><span class=\"memberNameLink\"><a href=\"../../../../../../com/rli/tools/sync/cacherefresh/tools/DnUtils.html#getDNPattern-java.lang.String-\">getDNPattern</a></span>(java.lang.String&nbsp;dn)</code>\r\n<div class=\"block\">Returns the original DN with the value part from each RDN removed.</div>\r\n</td>\r\n</tr>\r\n<tr id=\"i12\" class=\"altColor\">\r\n<td class=\"colFirst\"><code>static java.lang.String</code></td>\r\n<td class=\"colLast\"><code><span class=\"memberNameLink\"><a href=\"../../../../../../com/rli/tools/sync/cacherefresh/tools/DnUtils.html#getFirstValueForComposite-java.lang.String-java.lang.String-\">getFirstValueForComposite</a></span>(java.lang.String&nbsp;compositeName,\r\n                         java.lang.String&nbsp;dn)</code>\r\n<div class=\"block\">For Radiant Logic Internal Use.</div>\r\n</td>\r\n</tr>\r\n<tr id=\"i13\" class=\"rowColor\">\r\n<td class=\"colFirst\"><code>static java.lang.String</code></td>\r\n<td class=\"colLast\"><code><span class=\"memberNameLink\"><a href=\"../../../../../../com/rli/tools/sync/cacherefresh/tools/DnUtils.html#getIdValueFromRdnValue-java.lang.String-\">getIdValueFromRdnValue</a></span>(java.lang.String&nbsp;rdnValue)</code>\r\n<div class=\"block\">Given an RDN value that has format 'value1 {value2}' returns the value\r\n between brackets.</div>\r\n</td>\r\n</tr>\r\n<tr id=\"i14\" class=\"altColor\">\r\n<td class=\"colFirst\"><code>static java.lang.String</code></td>\r\n<td class=\"colLast\"><code><span class=\"memberNameLink\"><a href=\"../../../../../../com/rli/tools/sync/cacherefresh/tools/DnUtils.html#getLabelInBetween-java.lang.String-\">getLabelInBetween</a></span>(java.lang.String&nbsp;dn)</code>\r\n<div class=\"block\">Note: method intended for Radiant internal use.</div>\r\n</td>\r\n</tr>\r\n<tr id=\"i15\" class=\"rowColor\">\r\n<td class=\"colFirst\"><code>static java.lang.String</code></td>\r\n<td class=\"colLast\"><code><span class=\"memberNameLink\"><a href=\"../../../../../../com/rli/tools/sync/cacherefresh/tools/DnUtils.html#getLastRdnValue-java.lang.String-\">getLastRdnValue</a></span>(java.lang.String&nbsp;dn)</code>\r\n<div class=\"block\">Returns the string value of left-most RDN value for the specified DN.</div>\r\n</td>\r\n</tr>\r\n<tr id=\"i16\" class=\"altColor\">\r\n<td class=\"colFirst\"><code>static java.lang.String</code></td>\r\n<td class=\"colLast\"><code><span class=\"memberNameLink\"><a href=\"../../../../../../com/rli/tools/sync/cacherefresh/tools/DnUtils.html#getParentDNstr_UsingDN-java.lang.String-\">getParentDNstr_UsingDN</a></span>(java.lang.String&nbsp;dn)</code>\r\n<div class=\"block\">Returns the parent DN of the given DN.</div>\r\n</td>\r\n</tr>\r\n<tr id=\"i17\" class=\"rowColor\">\r\n<td class=\"colFirst\"><code>static java.lang.String</code></td>\r\n<td class=\"colLast\"><code><span class=\"memberNameLink\"><a href=\"../../../../../../com/rli/tools/sync/cacherefresh/tools/DnUtils.html#getParentDNstr-java.lang.String-\">getParentDNstr</a></span>(java.lang.String&nbsp;dn)</code>\r\n<div class=\"block\">Returns the parent DN of the given DN.</div>\r\n</td>\r\n</tr>\r\n<tr id=\"i18\" class=\"altColor\">\r\n<td class=\"colFirst\"><code>static java.lang.String</code></td>\r\n<td class=\"colLast\"><code><span class=\"memberNameLink\"><a href=\"../../../../../../com/rli/tools/sync/cacherefresh/tools/DnUtils.html#getRdnAttrAndValueStr_UnJndi-java.lang.String-\">getRdnAttrAndValueStr_UnJndi</a></span>(java.lang.String&nbsp;dn)</code>\r\n<div class=\"block\">Returns the RDN for the given DN.</div>\r\n</td>\r\n</tr>\r\n<tr id=\"i19\" class=\"rowColor\">\r\n<td class=\"colFirst\"><code>static java.lang.String</code></td>\r\n<td class=\"colLast\"><code><span class=\"memberNameLink\"><a href=\"../../../../../../com/rli/tools/sync/cacherefresh/tools/DnUtils.html#getRdnAttrAndValueStr-java.lang.String-\">getRdnAttrAndValueStr</a></span>(java.lang.String&nbsp;dn)</code>\r\n<div class=\"block\">Returns the RDN for the given DN.</div>\r\n</td>\r\n</tr>\r\n<tr id=\"i20\" class=\"altColor\">\r\n<td class=\"colFirst\"><code>static java.lang.String[]</code></td>\r\n<td class=\"colLast\"><code><span class=\"memberNameLink\"><a href=\"../../../../../../com/rli/tools/sync/cacherefresh/tools/DnUtils.html#getRdnAttributesFromRdnValue-java.lang.String-\">getRdnAttributesFromRdnValue</a></span>(java.lang.String&nbsp;rdnValue)</code>\r\n<div class=\"block\">This method splits the values found in the given RDN value based on\r\n whitespace and removes any value found between brackets.<BR>\r\n Given an RDN value that has format 'value1 value2 value3 {value4}'\r\n returns an array of strings containing [\"value1\", \"value2\", value3\"].</div>\r\n</td>\r\n</tr>\r\n<tr id=\"i21\" class=\"rowColor\">\r\n<td class=\"colFirst\"><code>static java.lang.String</code></td>\r\n<td class=\"colLast\"><code><span class=\"memberNameLink\"><a href=\"../../../../../../com/rli/tools/sync/cacherefresh/tools/DnUtils.html#getRdnIdValue-java.lang.String-\">getRdnIdValue</a></span>(java.lang.String&nbsp;dn)</code>\r\n<div class=\"block\">Returns the value of the RDN (after the '=' sign) for the given DN.</div>\r\n</td>\r\n</tr>\r\n<tr id=\"i22\" class=\"altColor\">\r\n<td class=\"colFirst\"><code>static java.lang.String</code></td>\r\n<td class=\"colLast\"><code><span class=\"memberNameLink\"><a href=\"../../../../../../com/rli/tools/sync/cacherefresh/tools/DnUtils.html#getRdnIdValue-java.lang.String-boolean-\">getRdnIdValue</a></span>(java.lang.String&nbsp;dn,\r\n             boolean&nbsp;isDNJndiEncoded)</code>\r\n<div class=\"block\">Returns the value of the RDN (after the '=' sign) for the given DN.</div>\r\n</td>\r\n</tr>\r\n<tr id=\"i23\" class=\"rowColor\">\r\n<td class=\"colFirst\"><code>static java.lang.String</code></td>\r\n<td class=\"colLast\"><code><span class=\"memberNameLink\"><a href=\"../../../../../../com/rli/tools/sync/cacherefresh/tools/DnUtils.html#getRdnName-java.lang.String-\">getRdnName</a></span>(java.lang.String&nbsp;dn)</code>\r\n<div class=\"block\">Returns the the attribute portion (before the '=' sign) of the RDN for\r\n the specified DN.</div>\r\n</td>\r\n</tr>\r\n<tr id=\"i24\" class=\"altColor\">\r\n<td class=\"colFirst\"><code>static java.lang.String</code></td>\r\n<td class=\"colLast\"><code><span class=\"memberNameLink\"><a href=\"../../../../../../com/rli/tools/sync/cacherefresh/tools/DnUtils.html#getRdnValue-java.lang.String-\">getRdnValue</a></span>(java.lang.String&nbsp;dn)</code>\r\n<div class=\"block\">Returns the value of the RDN (after the '=' sign) for the given DN.</div>\r\n</td>\r\n</tr>\r\n<tr id=\"i25\" class=\"rowColor\">\r\n<td class=\"colFirst\"><code>static java.lang.String</code></td>\r\n<td class=\"colLast\"><code><span class=\"memberNameLink\"><a href=\"../../../../../../com/rli/tools/sync/cacherefresh/tools/DnUtils.html#getRdnValue-java.lang.String-boolean-\">getRdnValue</a></span>(java.lang.String&nbsp;dn,\r\n           boolean&nbsp;isDnJndiEncoded)</code>\r\n<div class=\"block\">Returns the value of the RDN (after the '=' sign) for the given DN.</div>\r\n</td>\r\n</tr>\r\n<tr id=\"i26\" class=\"altColor\">\r\n<td class=\"colFirst\"><code>static boolean</code></td>\r\n<td class=\"colLast\"><code><span class=\"memberNameLink\"><a href=\"../../../../../../com/rli/tools/sync/cacherefresh/tools/DnUtils.html#hasParent-java.lang.String-java.lang.String-\">hasParent</a></span>(java.lang.String&nbsp;dnChild,\r\n         java.lang.String&nbsp;dnParent)</code>\r\n<div class=\"block\">Indicates if the DN given in the second parameter is a parent of the DN\r\n given in the first parameter.</div>\r\n</td>\r\n</tr>\r\n<tr id=\"i27\" class=\"rowColor\">\r\n<td class=\"colFirst\"><code>static boolean</code></td>\r\n<td class=\"colLast\"><code><span class=\"memberNameLink\"><a href=\"../../../../../../com/rli/tools/sync/cacherefresh/tools/DnUtils.html#hasSameRdnIdValue-java.lang.String-java.lang.String-\">hasSameRdnIdValue</a></span>(java.lang.String&nbsp;dn1,\r\n                 java.lang.String&nbsp;dn2)</code>\r\n<div class=\"block\">Given two DNs that have the format \"attribute=value1 {value2},...\"\r\n returns <code>true</code> if both DNs have the same bracketed value.</div>\r\n</td>\r\n</tr>\r\n<tr id=\"i28\" class=\"altColor\">\r\n<td class=\"colFirst\"><code>static boolean</code></td>\r\n<td class=\"colLast\"><code><span class=\"memberNameLink\"><a href=\"../../../../../../com/rli/tools/sync/cacherefresh/tools/DnUtils.html#isDescendantOf-java.lang.String-java.lang.String-\">isDescendantOf</a></span>(java.lang.String&nbsp;dnDown,\r\n              java.lang.String&nbsp;dnTop)</code>\r\n<div class=\"block\">Returns <code>true</code> if the DN specified in the first argument is a\r\n descendant of the DN specified in second argument.</div>\r\n</td>\r\n</tr>\r\n<tr id=\"i29\" class=\"rowColor\">\r\n<td class=\"colFirst\"><code>static boolean</code></td>\r\n<td class=\"colLast\"><code><span class=\"memberNameLink\"><a href=\"../../../../../../com/rli/tools/sync/cacherefresh/tools/DnUtils.html#isDN-java.lang.String-\">isDN</a></span>(java.lang.String&nbsp;s)</code>\r\n<div class=\"block\">Indicates if the given String is a distinguished name.</div>\r\n</td>\r\n</tr>\r\n<tr id=\"i30\" class=\"altColor\">\r\n<td class=\"colFirst\"><code>static void</code></td>\r\n<td class=\"colLast\"><code><span class=\"memberNameLink\"><a href=\"../../../../../../com/rli/tools/sync/cacherefresh/tools/DnUtils.html#main-java.lang.String:A-\">main</a></span>(java.lang.String[]&nbsp;args)</code>&nbsp;</td>\r\n</tr>\r\n<tr id=\"i31\" class=\"rowColor\">\r\n<td class=\"colFirst\"><code>static java.lang.String</code></td>\r\n<td class=\"colLast\"><code><span class=\"memberNameLink\"><a href=\"../../../../../../com/rli/tools/sync/cacherefresh/tools/DnUtils.html#normalizeDN-java.lang.String-\">normalizeDN</a></span>(java.lang.String&nbsp;dn)</code>\r\n<div class=\"block\">Returns the specified DN with the characters '=', ' ', '\\', '/' replaced\r\n by an underscore '_'.</div>\r\n</td>\r\n</tr>\r\n<tr id=\"i32\" class=\"altColor\">\r\n<td class=\"colFirst\"><code>static java.lang.String</code></td>\r\n<td class=\"colLast\"><code><span class=\"memberNameLink\"><a href=\"../../../../../../com/rli/tools/sync/cacherefresh/tools/DnUtils.html#removeIdValueFromRdnValue-java.lang.String-\">removeIdValueFromRdnValue</a></span>(java.lang.String&nbsp;rdnValue)</code>\r\n<div class=\"block\">Given an RDN value that has format 'value1 {value2}' returns 'value1'.</div>\r\n</td>\r\n</tr>\r\n<tr id=\"i33\" class=\"rowColor\">\r\n<td class=\"colFirst\"><code>static java.lang.String</code></td>\r\n<td class=\"colLast\"><code><span class=\"memberNameLink\"><a href=\"../../../../../../com/rli/tools/sync/cacherefresh/tools/DnUtils.html#removeSuffix-java.lang.String-java.lang.String-\">removeSuffix</a></span>(java.lang.String&nbsp;dn,\r\n            java.lang.String&nbsp;suffixToRemove)</code>\r\n<div class=\"block\">Returns the DN with the given suffix removed from the original DN (if it\r\n is found).</div>\r\n</td>\r\n</tr>\r\n<tr id=\"i34\" class=\"altColor\">\r\n<td class=\"colFirst\"><code>static java.lang.String</code></td>\r\n<td class=\"colLast\"><code><span class=\"memberNameLink\"><a href=\"../../../../../../com/rli/tools/sync/cacherefresh/tools/DnUtils.html#replaceDNWithAttributesValue-java.lang.String-AttributesEnumeration-\">replaceDNWithAttributesValue</a></span>(java.lang.String&nbsp;dnWithAttributesToReplace,\r\n                            AttributesEnumeration&nbsp;attrsEnu)</code>\r\n<div class=\"block\">This method is used to populate parts of a DN based on variables\r\n specified in a Map.</div>\r\n</td>\r\n</tr>\r\n<tr id=\"i35\" class=\"rowColor\">\r\n<td class=\"colFirst\"><code>static java.lang.String</code></td>\r\n<td class=\"colLast\"><code><span class=\"memberNameLink\"><a href=\"../../../../../../com/rli/tools/sync/cacherefresh/tools/DnUtils.html#updateBaseDNSuffix-java.lang.String-java.lang.String-\">updateBaseDNSuffix</a></span>(java.lang.String&nbsp;value,\r\n                  java.lang.String&nbsp;dnTemplate)</code>\r\n<div class=\"block\">Returns a DN with the placeholders %rdn and %dn found in the DN template\r\n given in the second parameter, replaced by the value given in the first\r\n parameter.</div>\r\n</td>\r\n</tr>\r\n<tr id=\"i36\" class=\"altColor\">\r\n<td class=\"colFirst\"><code>static java.lang.String</code></td>\r\n<td class=\"colLast\"><code><span class=\"memberNameLink\"><a href=\"../../../../../../com/rli/tools/sync/cacherefresh/tools/DnUtils.html#updateStringWithRdnDnTag-java.lang.String-java.lang.String-\">updateStringWithRdnDnTag</a></span>(java.lang.String&nbsp;str,\r\n                        java.lang.String&nbsp;value)</code>\r\n<div class=\"block\">Updates the given string with the given value where certain placeholders\r\n are found.</div>\r\n</td>\r\n</tr>\r\n<tr id=\"i37\" class=\"rowColor\">\r\n<td class=\"colFirst\"><code>static java.lang.String</code></td>\r\n<td class=\"colLast\"><code><span class=\"memberNameLink\"><a href=\"../../../../../../com/rli/tools/sync/cacherefresh/tools/DnUtils.html#updateSuffix-java.lang.String-java.lang.String-java.lang.String-\">updateSuffix</a></span>(java.lang.String&nbsp;dn,\r\n            java.lang.String&nbsp;dnSuffixToUpdate,\r\n            java.lang.String&nbsp;dnSuffixNewValue)</code>\r\n<div class=\"block\">Returns the DN with the given suffix updated with a new value.</div>\r\n</td>\r\n</tr>\r\n<tr id=\"i38\" class=\"altColor\">\r\n<td class=\"colFirst\"><code>static java.lang.String</code></td>\r\n<td class=\"colLast\"><code><span class=\"memberNameLink\"><a href=\"../../../../../../com/rli/tools/sync/cacherefresh/tools/DnUtils.html#updateSuffix-java.lang.String-java.lang.String-java.lang.String-java.lang.String-\">updateSuffix</a></span>(java.lang.String&nbsp;dn,\r\n            java.lang.String&nbsp;dnSuffixToUpdate,\r\n            java.lang.String&nbsp;dnSuffixNewValue,\r\n            java.lang.String&nbsp;rules)</code>&nbsp;</td>\r\n</tr>\r\n</table>\r\n<ul class=\"blockList\">\r\n<li class=\"blockList\"><a name=\"methods.inherited.from.class.java.lang.Object\">\r\n<!--   -->\r\n</a>\r\n<h3>Methods inherited from class&nbsp;java.lang.Object</h3>\r\n<code>clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait</code></li>\r\n</ul>\r\n</li>\r\n</ul>\r\n</li>\r\n</ul>\r\n</div>\r\n<div class=\"details\">\r\n<ul class=\"blockList\">\r\n<li class=\"blockList\">\r\n<!-- ============ FIELD DETAIL =========== -->\r\n<ul class=\"blockList\">\r\n<li class=\"blockList\"><a name=\"field.detail\">\r\n<!--   -->\r\n</a>\r\n<h3>Field Detail</h3>\r\n<a name=\"VAR_RDN\">\r\n<!--   -->\r\n</a>\r\n<ul class=\"blockList\">\r\n<li class=\"blockList\">\r\n<h4>VAR_RDN</h4>\r\n<pre>public static final&nbsp;java.lang.String VAR_RDN</pre>\r\n<div class=\"block\">Placeholder used in methods that do value substitution in distinguished\r\n names.</div>\r\n<dl>\r\n<dt><span class=\"seeLabel\">See Also:</span></dt>\r\n<dd><a href=\"../../../../../../constant-values.html#com.rli.tools.sync.cacherefresh.tools.DnUtils.VAR_RDN\">Constant Field Values</a></dd>\r\n</dl>\r\n</li>\r\n</ul>\r\n<a name=\"VAR_DN\">\r\n<!--   -->\r\n</a>\r\n<ul class=\"blockListLast\">\r\n<li class=\"blockList\">\r\n<h4>VAR_DN</h4>\r\n<pre>public static final&nbsp;java.lang.String VAR_DN</pre>\r\n<div class=\"block\">Placeholder used in methods that do value substitution in distinguished\r\n names.</div>\r\n<dl>\r\n<dt><span class=\"seeLabel\">See Also:</span></dt>\r\n<dd><a href=\"../../../../../../constant-values.html#com.rli.tools.sync.cacherefresh.tools.DnUtils.VAR_DN\">Constant Field Values</a></dd>\r\n</dl>\r\n</li>\r\n</ul>\r\n</li>\r\n</ul>\r\n<!-- ============ METHOD DETAIL ========== -->\r\n<ul class=\"blockList\">\r\n<li class=\"blockList\"><a name=\"method.detail\">\r\n<!--   -->\r\n</a>\r\n<h3>Method Detail</h3>\r\n<a name=\"getLastRdnValue-java.lang.String-\">\r\n<!--   -->\r\n</a>\r\n<ul class=\"blockList\">\r\n<li class=\"blockList\">\r\n<h4>getLastRdnValue</h4>\r\n<pre>public static&nbsp;java.lang.String&nbsp;getLastRdnValue(java.lang.String&nbsp;dn)</pre>\r\n<div class=\"block\">Returns the string value of left-most RDN value for the specified DN. <BR>\r\n <BR>\r\n Example: getLastRdnValue(\"o=vds,dc=radiantlogic,dc=com\") will return\r\n \"vds\".</div>\r\n<dl>\r\n<dt><span class=\"paramLabel\">Parameters:</span></dt>\r\n<dd><code>dn</code> - a distinguished name</dd>\r\n<dt><span class=\"returnLabel\">Returns:</span></dt>\r\n<dd>the string value of left-most RDN value for the specified DN.</dd>\r\n</dl>\r\n</li>\r\n</ul>\r\n<a name=\"getFirstValueForComposite-java.lang.String-java.lang.String-\">\r\n<!--   -->\r\n</a>\r\n<ul class=\"blockList\">\r\n<li class=\"blockList\">\r\n<h4>getFirstValueForComposite</h4>\r\n<pre>public static final&nbsp;java.lang.String&nbsp;getFirstValueForComposite(java.lang.String&nbsp;compositeName,\r\n                                                               java.lang.String&nbsp;dn)</pre>\r\n<div class=\"block\">For Radiant Logic Internal Use.</div>\r\n<dl>\r\n<dt><span class=\"paramLabel\">Parameters:</span></dt>\r\n<dd><code>compositeName</code> - </dd>\r\n<dd><code>dn</code> - </dd>\r\n<dt><span class=\"returnLabel\">Returns:</span></dt>\r\n</dl>\r\n</li>\r\n</ul>\r\n<a name=\"getDnFromDvxCatalog-java.lang.String-\">\r\n<!--   -->\r\n</a>\r\n<ul class=\"blockList\">\r\n<li class=\"blockList\">\r\n<h4>getDnFromDvxCatalog</h4>\r\n<pre>public static&nbsp;java.lang.String&nbsp;getDnFromDvxCatalog(java.lang.String&nbsp;externalDn)</pre>\r\n<div class=\"block\">For Radiant Logic Internal Use.</div>\r\n<dl>\r\n<dt><span class=\"paramLabel\">Parameters:</span></dt>\r\n<dd><code>externalDn</code> - </dd>\r\n<dt><span class=\"returnLabel\">Returns:</span></dt>\r\n</dl>\r\n</li>\r\n</ul>\r\n<a name=\"normalizeDN-java.lang.String-\">\r\n<!--   -->\r\n</a>\r\n<ul class=\"blockList\">\r\n<li class=\"blockList\">\r\n<h4>normalizeDN</h4>\r\n<pre>public static&nbsp;java.lang.String&nbsp;normalizeDN(java.lang.String&nbsp;dn)</pre>\r\n<div class=\"block\">Returns the specified DN with the characters '=', ' ', '\\', '/' replaced\r\n by an underscore '_'. <BR>\r\n <BR>\r\n Example: normalizeDN(\"cn=John Doe,ou=Sales/Marketing\") returns\r\n \"cn_John_Doe_ou_Sales_Marketing\"</div>\r\n<dl>\r\n<dt><span class=\"paramLabel\">Parameters:</span></dt>\r\n<dd><code>dn</code> - a distinguished name.</dd>\r\n<dt><span class=\"returnLabel\">Returns:</span></dt>\r\n<dd>the specified DN with the characters '=', ' ', '\\', '/' replaced\r\n         by an underscore '_'.</dd>\r\n</dl>\r\n</li>\r\n</ul>\r\n<a name=\"main-java.lang.String:A-\">\r\n<!--   -->\r\n</a>\r\n<ul class=\"blockList\">\r\n<li class=\"blockList\">\r\n<h4>main</h4>\r\n<pre>public static&nbsp;void&nbsp;main(java.lang.String[]&nbsp;args)</pre>\r\n</li>\r\n</ul>\r\n<a name=\"equalsDN-java.lang.String-java.lang.String-\">\r\n<!--   -->\r\n</a>\r\n<ul class=\"blockList\">\r\n<li class=\"blockList\">\r\n<h4>equalsDN</h4>\r\n<pre>public static&nbsp;boolean&nbsp;equalsDN(java.lang.String&nbsp;dn1,\r\n                               java.lang.String&nbsp;dn2)</pre>\r\n<div class=\"block\">Indicates whether the two given distinguished names are equal (note:\r\n comparison is case-insensitive).</div>\r\n<dl>\r\n<dt><span class=\"paramLabel\">Parameters:</span></dt>\r\n<dd><code>dn1</code> - a distinguished name.</dd>\r\n<dd><code>dn2</code> - a distinguished name.</dd>\r\n<dt><span class=\"returnLabel\">Returns:</span></dt>\r\n<dd><code>true<code> if the two distinguished names are equal, <code>false</code>\r\n         otherwise.</dd>\r\n</dl>\r\n</li>\r\n</ul>\r\n<a name=\"equalsDN-java.lang.String-java.lang.String-boolean-\">\r\n<!--   -->\r\n</a>\r\n<ul class=\"blockList\">\r\n<li class=\"blockList\">\r\n<h4>equalsDN</h4>\r\n<pre>public static&nbsp;boolean&nbsp;equalsDN(java.lang.String&nbsp;dn1,\r\n                               java.lang.String&nbsp;dn2,\r\n                               boolean&nbsp;isMetaDN)</pre>\r\n<div class=\"block\">Indicates whether the two given distinguished names are equal (note:\r\n comparison is case-insensitive).</div>\r\n<dl>\r\n<dt><span class=\"paramLabel\">Parameters:</span></dt>\r\n<dd><code>dn1</code> - a distinguished name.</dd>\r\n<dd><code>dn2</code> - a distinguished name.</dd>\r\n<dd><code>isMetaDN</code> - if <code>true</code>, uses a comparison algorithm specific to\r\n            meta DNs, should be set to <code>false</code> otherwise.</dd>\r\n<dt><span class=\"returnLabel\">Returns:</span></dt>\r\n<dd><code>true</code> if the two given distinguished names are equal,\r\n         <code>false</code> otherwise.</dd>\r\n</dl>\r\n</li>\r\n</ul>\r\n<a name=\"calculateLevelDif-java.lang.String-java.lang.String-\">\r\n<!--   -->\r\n</a>\r\n<ul class=\"blockList\">\r\n<li class=\"blockList\">\r\n<h4>calculateLevelDif</h4>\r\n<pre>public static&nbsp;int&nbsp;calculateLevelDif(java.lang.String&nbsp;parentDn,\r\n                                    java.lang.String&nbsp;childDn)</pre>\r\n<div class=\"block\">Given a parent DN and a child DN, returns the difference in depth between\r\n those two DNs. <BR>\r\n If the two DNs are equal, returns 0. <BR>\r\n If the specified child DN is not a child (descendant) of the parent DN,\r\n returns -1. <BR>\r\n <BR>\r\n Example: calculateLevelDif(\"dc=radiantlogic,dc=com\",\r\n \"ou=test,dc=dev,dc=radiantlogic,dc=com\") returns 2. <BR>\r\n <BR>\r\n calculateLevelDif(\"ou=Sales,o=vds\", \"dc=test,dc=com\") returns -1.</div>\r\n<dl>\r\n<dt><span class=\"paramLabel\">Parameters:</span></dt>\r\n<dd><code>parentDn</code> - the parent DN.</dd>\r\n<dd><code>childDn</code> - the child DN, a descendant of the given parent DN.</dd>\r\n<dt><span class=\"returnLabel\">Returns:</span></dt>\r\n<dd>the difference in depth between the parent DN and the child DN. <BR>\r\n         Returns 0 if both DNs are equal.<BR>\r\n         Returns -1 if the child DN is not a child (descendant) of the\r\n         parent DN.</dd>\r\n</dl>\r\n</li>\r\n</ul>\r\n<a name=\"getParentDNstr-java.lang.String-\">\r\n<!--   -->\r\n</a>\r\n<ul class=\"blockList\">\r\n<li class=\"blockList\">\r\n<h4>getParentDNstr</h4>\r\n<pre>public static&nbsp;java.lang.String&nbsp;getParentDNstr(java.lang.String&nbsp;dn)</pre>\r\n<div class=\"block\">Returns the parent DN of the given DN. Returns <code>null</code> if it\r\n does not exist. <BR>\r\n Note: this method uses StringOperations in its implementation. <BR>\r\n <BR>\r\n Example: getParentDNstr(\"dc=web,dc=radiantlogic,dc=com\") returns\r\n \"dc=radiantlogic,dc=com\".</div>\r\n<dl>\r\n<dt><span class=\"paramLabel\">Parameters:</span></dt>\r\n<dd><code>dn</code> - a distinguished name.</dd>\r\n<dt><span class=\"returnLabel\">Returns:</span></dt>\r\n<dd>the parent DN of the given DN.<BR>\r\n         Returns <code>null</code> if it does not exist.</dd>\r\n</dl>\r\n</li>\r\n</ul>\r\n<a name=\"getParentDNstr_UsingDN-java.lang.String-\">\r\n<!--   -->\r\n</a>\r\n<ul class=\"blockList\">\r\n<li class=\"blockList\">\r\n<h4>getParentDNstr_UsingDN</h4>\r\n<pre>public static&nbsp;java.lang.String&nbsp;getParentDNstr_UsingDN(java.lang.String&nbsp;dn)</pre>\r\n<div class=\"block\">Returns the parent DN of the given DN. Returns <code>null</code> if it\r\n does not exist. <BR>\r\n Note: this method uses a pool of DN objects in its implementation. <BR>\r\n <BR>\r\n Example: getParentDNstr_UsingDN(\"dc=web,dc=radiantlogic,dc=com\") returns\r\n \"dc=radiantlogic,dc=com\".</div>\r\n<dl>\r\n<dt><span class=\"paramLabel\">Parameters:</span></dt>\r\n<dd><code>dn</code> - a distinguished name.</dd>\r\n<dt><span class=\"returnLabel\">Returns:</span></dt>\r\n<dd>the parent DN of the given DN. <BR>\r\n         Returns <code>null</code> if it does not exist.</dd>\r\n</dl>\r\n</li>\r\n</ul>\r\n<a name=\"getRdnName-java.lang.String-\">\r\n<!--   -->\r\n</a>\r\n<ul class=\"blockList\">\r\n<li class=\"blockList\">\r\n<h4>getRdnName</h4>\r\n<pre>public static&nbsp;java.lang.String&nbsp;getRdnName(java.lang.String&nbsp;dn)</pre>\r\n<div class=\"block\">Returns the the attribute portion (before the '=' sign) of the RDN for\r\n the specified DN. <BR>\r\n <BR>\r\n Example: getRdnName(\"ou=test,dc=radiantlogic,dc=com\") returns \"ou\".</div>\r\n<dl>\r\n<dt><span class=\"paramLabel\">Parameters:</span></dt>\r\n<dd><code>dn</code> - a distinguished name.</dd>\r\n<dt><span class=\"returnLabel\">Returns:</span></dt>\r\n<dd>the attribute portion (before the '=' sign) of the RDN for the\r\n         specified DN.</dd>\r\n</dl>\r\n</li>\r\n</ul>\r\n<a name=\"getRdnAttrAndValueStr_UnJndi-java.lang.String-\">\r\n<!--   -->\r\n</a>\r\n<ul class=\"blockList\">\r\n<li class=\"blockList\">\r\n<h4>getRdnAttrAndValueStr_UnJndi</h4>\r\n<pre>public static&nbsp;java.lang.String&nbsp;getRdnAttrAndValueStr_UnJndi(java.lang.String&nbsp;dn)</pre>\r\n<div class=\"block\">Returns the RDN for the given DN. <BR>\r\n Note: DN must follow JNDI formatting rules.</div>\r\n<dl>\r\n<dt><span class=\"paramLabel\">Parameters:</span></dt>\r\n<dd><code>dn</code> - a distinguished name.</dd>\r\n<dt><span class=\"returnLabel\">Returns:</span></dt>\r\n<dd>the RDN for the given DN.</dd>\r\n</dl>\r\n</li>\r\n</ul>\r\n<a name=\"getRdnAttrAndValueStr-java.lang.String-\">\r\n<!--   -->\r\n</a>\r\n<ul class=\"blockList\">\r\n<li class=\"blockList\">\r\n<h4>getRdnAttrAndValueStr</h4>\r\n<pre>public static&nbsp;java.lang.String&nbsp;getRdnAttrAndValueStr(java.lang.String&nbsp;dn)</pre>\r\n<div class=\"block\">Returns the RDN for the given DN. <BR>\r\n Note: DN must <b>NOT</b> follow JNDI formatting rules.</div>\r\n<dl>\r\n<dt><span class=\"paramLabel\">Parameters:</span></dt>\r\n<dd><code>dn</code> - a distinguished name.</dd>\r\n<dt><span class=\"returnLabel\">Returns:</span></dt>\r\n<dd>the RDN for the given DN.</dd>\r\n</dl>\r\n</li>\r\n</ul>\r\n<a name=\"getRdnValue-java.lang.String-\">\r\n<!--   -->\r\n</a>\r\n<ul class=\"blockList\">\r\n<li class=\"blockList\">\r\n<h4>getRdnValue</h4>\r\n<pre>public static&nbsp;java.lang.String&nbsp;getRdnValue(java.lang.String&nbsp;dn)</pre>\r\n<div class=\"block\">Returns the value of the RDN (after the '=' sign) for the given DN.</div>\r\n<dl>\r\n<dt><span class=\"paramLabel\">Parameters:</span></dt>\r\n<dd><code>dn</code> - a distinguished name.</dd>\r\n<dt><span class=\"returnLabel\">Returns:</span></dt>\r\n<dd>the value of the RDN (after the '=' sign) for the given DN.</dd>\r\n</dl>\r\n</li>\r\n</ul>\r\n<a name=\"getRdnIdValue-java.lang.String-\">\r\n<!--   -->\r\n</a>\r\n<ul class=\"blockList\">\r\n<li class=\"blockList\">\r\n<h4>getRdnIdValue</h4>\r\n<pre>public static&nbsp;java.lang.String&nbsp;getRdnIdValue(java.lang.String&nbsp;dn)</pre>\r\n<div class=\"block\">Returns the value of the RDN (after the '=' sign) for the given DN. <BR>\r\n If the RDN is of the format \"attribute=value {value2}\" returns the value\r\n found between brackets.</div>\r\n<dl>\r\n<dt><span class=\"paramLabel\">Parameters:</span></dt>\r\n<dd><code>dn</code> - a distinguished name.</dd>\r\n<dt><span class=\"returnLabel\">Returns:</span></dt>\r\n<dd>the value of the RDN (after the '=' sign) for the given DN, or\r\n         the value found between brackets if the RDN has format\r\n         \"attribute=value {value2}\".</dd>\r\n</dl>\r\n</li>\r\n</ul>\r\n<a name=\"getRdnValue-java.lang.String-boolean-\">\r\n<!--   -->\r\n</a>\r\n<ul class=\"blockList\">\r\n<li class=\"blockList\">\r\n<h4>getRdnValue</h4>\r\n<pre>public static&nbsp;java.lang.String&nbsp;getRdnValue(java.lang.String&nbsp;dn,\r\n                                           boolean&nbsp;isDnJndiEncoded)</pre>\r\n<div class=\"block\">Returns the value of the RDN (after the '=' sign) for the given DN.</div>\r\n<dl>\r\n<dt><span class=\"paramLabel\">Parameters:</span></dt>\r\n<dd><code>dn</code> - a distinguished name.</dd>\r\n<dd><code>isDnJndiEncoded</code> - set to <code>true</code> to indicate that the DN is JNDI\r\n            encoded, <code>false</code> otherwise.</dd>\r\n<dt><span class=\"returnLabel\">Returns:</span></dt>\r\n<dd>the value of the RDN (after the '=' sign) for the given DN.</dd>\r\n</dl>\r\n</li>\r\n</ul>\r\n<a name=\"getRdnIdValue-java.lang.String-boolean-\">\r\n<!--   -->\r\n</a>\r\n<ul class=\"blockList\">\r\n<li class=\"blockList\">\r\n<h4>getRdnIdValue</h4>\r\n<pre>public static&nbsp;java.lang.String&nbsp;getRdnIdValue(java.lang.String&nbsp;dn,\r\n                                             boolean&nbsp;isDNJndiEncoded)</pre>\r\n<div class=\"block\">Returns the value of the RDN (after the '=' sign) for the given DN. <BR>\r\n If the RDN is of the format \"attribute=value {value2}\" returns the value\r\n found between brackets.</div>\r\n<dl>\r\n<dt><span class=\"paramLabel\">Parameters:</span></dt>\r\n<dd><code>dn</code> - a distinguished name.</dd>\r\n<dd><code>isDNJndiEncoded</code> - set to <code>true</code> to indicate that the DN is JNDI\r\n            encoded, <code>false</code> otherwise.</dd>\r\n<dt><span class=\"returnLabel\">Returns:</span></dt>\r\n<dd>the value of the RDN (after the '=' sign) for the given DN, <BR>\r\n         or the value found between brackets if the RDN has format\r\n         \"attribute=value {value2}\".</dd>\r\n</dl>\r\n</li>\r\n</ul>\r\n<a name=\"getIdValueFromRdnValue-java.lang.String-\">\r\n<!--   -->\r\n</a>\r\n<ul class=\"blockList\">\r\n<li class=\"blockList\">\r\n<h4>getIdValueFromRdnValue</h4>\r\n<pre>public static&nbsp;java.lang.String&nbsp;getIdValueFromRdnValue(java.lang.String&nbsp;rdnValue)</pre>\r\n<div class=\"block\">Given an RDN value that has format 'value1 {value2}' returns the value\r\n between brackets. <BR>\r\n If no bracketed value is found, returns the original RDN value.</div>\r\n<dl>\r\n<dt><span class=\"paramLabel\">Parameters:</span></dt>\r\n<dd><code>rdnValue</code> - the value of an RDN (after the '=' sign).</dd>\r\n<dt><span class=\"returnLabel\">Returns:</span></dt>\r\n<dd>the value found between brackets given an RDN value that has\r\n         format 'value1 {value2}'.<BR>\r\n         If no bracketed value is found, returns the original RDN value.</dd>\r\n</dl>\r\n</li>\r\n</ul>\r\n<a name=\"removeIdValueFromRdnValue-java.lang.String-\">\r\n<!--   -->\r\n</a>\r\n<ul class=\"blockList\">\r\n<li class=\"blockList\">\r\n<h4>removeIdValueFromRdnValue</h4>\r\n<pre>public static&nbsp;java.lang.String&nbsp;removeIdValueFromRdnValue(java.lang.String&nbsp;rdnValue)</pre>\r\n<div class=\"block\">Given an RDN value that has format 'value1 {value2}' returns 'value1'. <BR>\r\n If no bracketed value is found, returns the original RDN value.</div>\r\n<dl>\r\n<dt><span class=\"paramLabel\">Parameters:</span></dt>\r\n<dd><code>rdnValue</code> - the value of an RDN (after the '=' sign).</dd>\r\n<dt><span class=\"returnLabel\">Returns:</span></dt>\r\n<dd>the RDN value minus the brackets and whatever is between the\r\n         brackets. <BR>\r\n         If no brackets/bracketed value are found, returns the original\r\n         RDN value.</dd>\r\n</dl>\r\n</li>\r\n</ul>\r\n<a name=\"getRdnAttributesFromRdnValue-java.lang.String-\">\r\n<!--   -->\r\n</a>\r\n<ul class=\"blockList\">\r\n<li class=\"blockList\">\r\n<h4>getRdnAttributesFromRdnValue</h4>\r\n<pre>public static&nbsp;java.lang.String[]&nbsp;getRdnAttributesFromRdnValue(java.lang.String&nbsp;rdnValue)</pre>\r\n<div class=\"block\">This method splits the values found in the given RDN value based on\r\n whitespace and removes any value found between brackets.<BR>\r\n Given an RDN value that has format 'value1 value2 value3 {value4}'\r\n returns an array of strings containing [\"value1\", \"value2\", value3\"].</div>\r\n<dl>\r\n<dt><span class=\"paramLabel\">Parameters:</span></dt>\r\n<dd><code>rdnValue</code> - an RDN value.</dd>\r\n<dt><span class=\"returnLabel\">Returns:</span></dt>\r\n<dd>an array of strings containing parts of the given RDN value split\r\n         by whitespace.</dd>\r\n</dl>\r\n</li>\r\n</ul>\r\n<a name=\"hasSameRdnIdValue-java.lang.String-java.lang.String-\">\r\n<!--   -->\r\n</a>\r\n<ul class=\"blockList\">\r\n<li class=\"blockList\">\r\n<h4>hasSameRdnIdValue</h4>\r\n<pre>public static&nbsp;boolean&nbsp;hasSameRdnIdValue(java.lang.String&nbsp;dn1,\r\n                                        java.lang.String&nbsp;dn2)</pre>\r\n<div class=\"block\">Given two DNs that have the format \"attribute=value1 {value2},...\"\r\n returns <code>true</code> if both DNs have the same bracketed value.</div>\r\n<dl>\r\n<dt><span class=\"paramLabel\">Parameters:</span></dt>\r\n<dd><code>dn1</code> - a distinguished name with a bracketed value.</dd>\r\n<dd><code>dn2</code> - a distinguished name with a bracketed value.</dd>\r\n<dt><span class=\"returnLabel\">Returns:</span></dt>\r\n<dd>returns <code>true</code> if both DNs have the same bracketed\r\n         value, <code>false</code> otherwise.</dd>\r\n</dl>\r\n</li>\r\n</ul>\r\n<a name=\"isDescendantOf-java.lang.String-java.lang.String-\">\r\n<!--   -->\r\n</a>\r\n<ul class=\"blockList\">\r\n<li class=\"blockList\">\r\n<h4>isDescendantOf</h4>\r\n<pre>public static&nbsp;boolean&nbsp;isDescendantOf(java.lang.String&nbsp;dnDown,\r\n                                     java.lang.String&nbsp;dnTop)</pre>\r\n<div class=\"block\">Returns <code>true</code> if the DN specified in the first argument is a\r\n descendant of the DN specified in second argument.</div>\r\n<dl>\r\n<dt><span class=\"paramLabel\">Parameters:</span></dt>\r\n<dd><code>dnDown</code> - a distinguished name.</dd>\r\n<dd><code>dnTop</code> - a distinguished name.</dd>\r\n<dt><span class=\"returnLabel\">Returns:</span></dt>\r\n<dd><code>true</code> if the DN specified in the first argument is a\r\n         descendant of the DN specified in second argument,\r\n         <code>false</code> otherwise.</dd>\r\n</dl>\r\n</li>\r\n</ul>\r\n<a name=\"replaceDNWithAttributesValue-java.lang.String-AttributesEnumeration-\">\r\n<!--   -->\r\n</a>\r\n<ul class=\"blockList\">\r\n<li class=\"blockList\">\r\n<h4>replaceDNWithAttributesValue</h4>\r\n<pre>public static&nbsp;java.lang.String&nbsp;replaceDNWithAttributesValue(java.lang.String&nbsp;dnWithAttributesToReplace,\r\n                                                            AttributesEnumeration&nbsp;attrsEnu)</pre>\r\n<div class=\"block\">This method is used to populate parts of a DN based on variables\r\n specified in a Map. <BR>\r\n The values from the Map are used to populate the parts of the DN that\r\n have an '@' sign. <BR>\r\n <BR>\r\n Example: replaceDNWithAttributesValue with\r\n \"cn=@,ou=@,dc=radiantlogic,dc=com\" and a Map [ cn -> John Doe, ou ->\r\n People ] will return \"cn=John Doe,ou=People,dc=radiantlogic,dc=com\".</div>\r\n<dl>\r\n<dt><span class=\"paramLabel\">Parameters:</span></dt>\r\n<dd><code>dnWithAttributesToReplace</code> - a distinguished name with '@' signs where values will be\r\n            inserted.</dd>\r\n<dd><code>mapAttributes</code> - a map of attributes (keys) and their values.</dd>\r\n<dt><span class=\"returnLabel\">Returns:</span></dt>\r\n<dd>the distinguished name populated with values from the Map.</dd>\r\n</dl>\r\n</li>\r\n</ul>\r\n<a name=\"cutDN-java.lang.String-java.lang.String-\">\r\n<!--   -->\r\n</a>\r\n<ul class=\"blockList\">\r\n<li class=\"blockList\">\r\n<h4>cutDN</h4>\r\n<pre>public static&nbsp;java.lang.String[]&nbsp;cutDN(java.lang.String&nbsp;dnToCut,\r\n                                       java.lang.String&nbsp;rdnNameDivision)</pre>\r\n<div class=\"block\">Splits a DN into three parts based on a given RDN name. <BR>The first element\r\n is the part of the DN up to the point where the RDN name is found.<BR>The\r\n second element is the RDN name and value.<BR>The third element contains the\r\n rest of the DN. <BR>\r\n <BR>\r\n Example: cutDN(\"uid=1,dv=test,ou=beta,o=vds\", \"ou) returns [ \"uid=1,dv=test\",\r\n \"ou=beta\", \"o=vds\"].</div>\r\n<dl>\r\n<dt><span class=\"paramLabel\">Parameters:</span></dt>\r\n<dd><code>dnToCut</code> - the distinguished name that we are splitting.</dd>\r\n<dd><code>rdnNameDivision</code> - the RDN name used to determine where the DN is split.</dd>\r\n<dt><span class=\"returnLabel\">Returns:</span></dt>\r\n<dd>a string array containing the three split elements.</dd>\r\n</dl>\r\n</li>\r\n</ul>\r\n<a name=\"isDN-java.lang.String-\">\r\n<!--   -->\r\n</a>\r\n<ul class=\"blockList\">\r\n<li class=\"blockList\">\r\n<h4>isDN</h4>\r\n<pre>public static&nbsp;boolean&nbsp;isDN(java.lang.String&nbsp;s)</pre>\r\n<div class=\"block\">Indicates if the given String is a distinguished name.</div>\r\n<dl>\r\n<dt><span class=\"paramLabel\">Parameters:</span></dt>\r\n<dd><code>s</code> - a String</dd>\r\n<dt><span class=\"returnLabel\">Returns:</span></dt>\r\n<dd><code>true</code> if the given String is a distinguished name,\r\n         <code>false</code> otherwise.</dd>\r\n</dl>\r\n</li>\r\n</ul>\r\n<a name=\"extractNamingContext-java.lang.String-\">\r\n<!--   -->\r\n</a>\r\n<ul class=\"blockList\">\r\n<li class=\"blockList\">\r\n<h4>extractNamingContext</h4>\r\n<pre>public static&nbsp;java.lang.String&nbsp;extractNamingContext(java.lang.String&nbsp;dn)</pre>\r\n<div class=\"block\">Given a DN, returns the naming context associated with the DN. <BR>\r\n <BR>\r\n Example: extractNamingContext(\"uid=jdoe,ou=people,o=vds\") returns \"o=vds\".</div>\r\n<dl>\r\n<dt><span class=\"paramLabel\">Parameters:</span></dt>\r\n<dd><code>dn</code> - a distinguished name.</dd>\r\n<dt><span class=\"returnLabel\">Returns:</span></dt>\r\n<dd>the naming context associated with the dn.</dd>\r\n</dl>\r\n</li>\r\n</ul>\r\n<a name=\"explodeDN-java.lang.String-\">\r\n<!--   -->\r\n</a>\r\n<ul class=\"blockList\">\r\n<li class=\"blockList\">\r\n<h4>explodeDN</h4>\r\n<pre>public static&nbsp;java.lang.String[]&nbsp;explodeDN(java.lang.String&nbsp;dn)</pre>\r\n<div class=\"block\">Given a DN, returns an array where each element is an RDN that composes\r\n the DN. <BR>\r\n <BR>\r\n Example: explodeDN(\"uid=jdoe,ou=people,o=vds\") returns the array [\"uid=jdoe\",\r\n \"ou=people\", \"o=vds\"].</div>\r\n<dl>\r\n<dt><span class=\"paramLabel\">Parameters:</span></dt>\r\n<dd><code>dn</code> - a distinguished name.</dd>\r\n<dt><span class=\"returnLabel\">Returns:</span></dt>\r\n<dd>an array of RDN elements that compose the DN.</dd>\r\n</dl>\r\n</li>\r\n</ul>\r\n<a name=\"explodeDN_ArrayNameValue-java.lang.String-\">\r\n<!--   -->\r\n</a>\r\n<ul class=\"blockList\">\r\n<li class=\"blockList\">\r\n<h4>explodeDN_ArrayNameValue</h4>\r\n<pre>public static&nbsp;java.lang.String[][]&nbsp;explodeDN_ArrayNameValue(java.lang.String&nbsp;dn)</pre>\r\n<div class=\"block\">Given a DN, returns an array where each element is a two-element String\r\n array (first element is the RDN name, second element is the RDN value)\r\n representing the RDN that composes the DN. <BR>\r\n <BR>\r\n Example: explodeDN_ArrayNameValue(\"uid=jdoe,ou=people,o=vds\") returns the array: [ [\"uid\", \"jdoe\"],\r\n [\"ou\",\"people\"], [\"o\",\"vds\"] ]</div>\r\n<dl>\r\n<dt><span class=\"paramLabel\">Parameters:</span></dt>\r\n<dd><code>dn</code> - a distinguished name.</dd>\r\n<dt><span class=\"returnLabel\">Returns:</span></dt>\r\n<dd>an array of RDN elements (each RDN is represented by a\r\n         two-element String array) that compose the DN.</dd>\r\n</dl>\r\n</li>\r\n</ul>\r\n<a name=\"explodeRDN_fromDN-java.lang.String-\">\r\n<!--   -->\r\n</a>\r\n<ul class=\"blockList\">\r\n<li class=\"blockList\">\r\n<h4>explodeRDN_fromDN</h4>\r\n<pre>public static&nbsp;java.lang.String[]&nbsp;explodeRDN_fromDN(java.lang.String&nbsp;dn)</pre>\r\n<div class=\"block\">Returns a two-element String array containing two elements: the name and\r\n the value of the RDN for the given DN. <BR>\r\n <BR>\r\n Example: explodeRDN_fromDN(\"uid=jdoe,ou=people,o=vds\") returns [\"uid\", \"jdoe\"].</div>\r\n<dl>\r\n<dt><span class=\"paramLabel\">Parameters:</span></dt>\r\n<dd><code>dn</code> - a distinguished name.</dd>\r\n<dt><span class=\"returnLabel\">Returns:</span></dt>\r\n<dd>a two element String array containing two elements: the name and\r\n         the value of the RDN for the given DN.</dd>\r\n</dl>\r\n</li>\r\n</ul>\r\n<a name=\"explodeRDN-java.lang.String-\">\r\n<!--   -->\r\n</a>\r\n<ul class=\"blockList\">\r\n<li class=\"blockList\">\r\n<h4>explodeRDN</h4>\r\n<pre>public static&nbsp;java.lang.String[]&nbsp;explodeRDN(java.lang.String&nbsp;rdn)</pre>\r\n<div class=\"block\">Returns a two-element String array containing two elements: the name and\r\n the value of the given RDN.</div>\r\n<dl>\r\n<dt><span class=\"paramLabel\">Parameters:</span></dt>\r\n<dd><code>rdn</code> - a relative distinguished name.</dd>\r\n<dt><span class=\"returnLabel\">Returns:</span></dt>\r\n<dd>a two-element String array containing two elements: the name and\r\n         the value of the given RDN.</dd>\r\n</dl>\r\n</li>\r\n</ul>\r\n<a name=\"getLabelInBetween-java.lang.String-\">\r\n<!--   -->\r\n</a>\r\n<ul class=\"blockList\">\r\n<li class=\"blockList\">\r\n<h4>getLabelInBetween</h4>\r\n<pre>public static&nbsp;java.lang.String&nbsp;getLabelInBetween(java.lang.String&nbsp;dn)</pre>\r\n<div class=\"block\">Note: method intended for Radiant internal use. Returns the label between\r\n the current node and its next parent. <BR>\r\n <BR>\r\n Example: getLabelInBetween(\"product=@,category=cars,company=*,...\") returns \"category=cars\".</div>\r\n<dl>\r\n<dt><span class=\"paramLabel\">Parameters:</span></dt>\r\n<dd><code>dn</code> - a meta DN.</dd>\r\n<dt><span class=\"returnLabel\">Returns:</span></dt>\r\n<dd>the label between the current node and its next parent.</dd>\r\n</dl>\r\n</li>\r\n</ul>\r\n<a name=\"updateSuffix-java.lang.String-java.lang.String-java.lang.String-\">\r\n<!--   -->\r\n</a>\r\n<ul class=\"blockList\">\r\n<li class=\"blockList\">\r\n<h4>updateSuffix</h4>\r\n<pre>public static&nbsp;java.lang.String&nbsp;updateSuffix(java.lang.String&nbsp;dn,\r\n                                            java.lang.String&nbsp;dnSuffixToUpdate,\r\n                                            java.lang.String&nbsp;dnSuffixNewValue)</pre>\r\n<div class=\"block\">Returns the DN with the given suffix updated with a new value. If the\r\n suffix is not found, returns the original DN. <BR>\r\n <BR>\r\n Example:\r\n updateSuffix(\"uid=jdoe,ou=people,o=vds\",\"ou=people,o=vds\",\"dc=test\")\r\n returns \"uid=jdoe,dc=test\".</div>\r\n<dl>\r\n<dt><span class=\"paramLabel\">Parameters:</span></dt>\r\n<dd><code>dn</code> - a distinguished name.</dd>\r\n<dd><code>dnSuffixToUpdate</code> - a suffix to update.</dd>\r\n<dd><code>dnSuffixNewValue</code> - a value to replace the suffix.</dd>\r\n<dt><span class=\"returnLabel\">Returns:</span></dt>\r\n<dd>the DN with the given suffix updated with a new value. If the\r\n         suffix is not found, returns the original DN.</dd>\r\n</dl>\r\n</li>\r\n</ul>\r\n<a name=\"updateSuffix-java.lang.String-java.lang.String-java.lang.String-java.lang.String-\">\r\n<!--   -->\r\n</a>\r\n<ul class=\"blockList\">\r\n<li class=\"blockList\">\r\n<h4>updateSuffix</h4>\r\n<pre>public static&nbsp;java.lang.String&nbsp;updateSuffix(java.lang.String&nbsp;dn,\r\n                                            java.lang.String&nbsp;dnSuffixToUpdate,\r\n                                            java.lang.String&nbsp;dnSuffixNewValue,\r\n                                            java.lang.String&nbsp;rules)</pre>\r\n</li>\r\n</ul>\r\n<a name=\"removeSuffix-java.lang.String-java.lang.String-\">\r\n<!--   -->\r\n</a>\r\n<ul class=\"blockList\">\r\n<li class=\"blockList\">\r\n<h4>removeSuffix</h4>\r\n<pre>public static&nbsp;java.lang.String&nbsp;removeSuffix(java.lang.String&nbsp;dn,\r\n                                            java.lang.String&nbsp;suffixToRemove)</pre>\r\n<div class=\"block\">Returns the DN with the given suffix removed from the original DN (if it\r\n is found). <BR>\r\n <BR>\r\n Example: removeSuffix(\"uid=jdoe,ou=People,o=vds\", \"o=vds\") returns\r\n \"uid=jdoe,ou=People\".</div>\r\n<dl>\r\n<dt><span class=\"paramLabel\">Parameters:</span></dt>\r\n<dd><code>dn</code> - a distinguished name.</dd>\r\n<dd><code>suffixToRemove</code> - the suffix to remove from the DN.</dd>\r\n<dt><span class=\"returnLabel\">Returns:</span></dt>\r\n<dd>the DN with the given suffix removed from the original DN (if it\r\n         is found).</dd>\r\n</dl>\r\n</li>\r\n</ul>\r\n<a name=\"updateBaseDNSuffix-java.lang.String-java.lang.String-\">\r\n<!--   -->\r\n</a>\r\n<ul class=\"blockList\">\r\n<li class=\"blockList\">\r\n<h4>updateBaseDNSuffix</h4>\r\n<pre>public static&nbsp;java.lang.String&nbsp;updateBaseDNSuffix(java.lang.String&nbsp;value,\r\n                                                  java.lang.String&nbsp;dnTemplate)</pre>\r\n<div class=\"block\">Returns a DN with the placeholders %rdn and %dn found in the DN template\r\n given in the second parameter, replaced by the value given in the first\r\n parameter. <BR>\r\n <BR>\r\n Note: if you use the %rdn format, the value parameter must be an RDN of\r\n the form (attribute=value). If you use the %dn format, any value can be\r\n used for the value parameter.</div>\r\n<dl>\r\n<dt><span class=\"paramLabel\">Parameters:</span></dt>\r\n<dd><code>value</code> - a value that will be used to replace the placeholders.</dd>\r\n<dd><code>dnTemplate</code> - a distinguished name template (a DN that can contain %rdn or\r\n            %dn as placeholders).</dd>\r\n<dt><span class=\"returnLabel\">Returns:</span></dt>\r\n<dd>a DN with the placeholders %rdn and %dn in the DN template\r\n         replaced by the value in the first parameter.</dd>\r\n</dl>\r\n</li>\r\n</ul>\r\n<a name=\"updateStringWithRdnDnTag-java.lang.String-java.lang.String-\">\r\n<!--   -->\r\n</a>\r\n<ul class=\"blockList\">\r\n<li class=\"blockList\">\r\n<h4>updateStringWithRdnDnTag</h4>\r\n<pre>public static&nbsp;java.lang.String&nbsp;updateStringWithRdnDnTag(java.lang.String&nbsp;str,\r\n                                                        java.lang.String&nbsp;value)</pre>\r\n<div class=\"block\">Updates the given string with the given value where certain placeholders\r\n are found. The string will be updated in the places where it contains %dn\r\n and %rdn. <BR>\r\n <BR>\r\n Note: if you use the %rdn format, the value parameter must be an RDN of\r\n the form (attribute=value). If you use the %dn format, any value can be\r\n used for the value parameter. <BR>\r\n <BR>\r\n Examples: updateStringWithRdnDnTag(\"uid=%rdn,o=vds\",\"uid=jdoe\") return\r\n \"uid=jdoe,o=vds\". <BR>\r\n <BR>\r\n updateStringWithRdnDnTag(\"uid=jdoe,%dn\", \"dc=radiantlogic,dc=com\")\r\n returns \"uid=jdoe,dc=radiantlogic,dc=com\".</div>\r\n<dl>\r\n<dt><span class=\"paramLabel\">Parameters:</span></dt>\r\n<dd><code>str</code> - a string containing %rdn or %dn where values will be\r\n            substituted.</dd>\r\n<dd><code>value</code> - the value that will be inserted anywhere %rdn or %dn are found\r\n            in the string.</dd>\r\n<dt><span class=\"returnLabel\">Returns:</span></dt>\r\n<dd>the given string updated with the given value where %rdn and %dn\r\n         were found.</dd>\r\n</dl>\r\n</li>\r\n</ul>\r\n<a name=\"getDNPattern-java.lang.String-\">\r\n<!--   -->\r\n</a>\r\n<ul class=\"blockList\">\r\n<li class=\"blockList\">\r\n<h4>getDNPattern</h4>\r\n<pre>public static&nbsp;java.lang.String&nbsp;getDNPattern(java.lang.String&nbsp;dn)</pre>\r\n<div class=\"block\">Returns the original DN with the value part from each RDN removed. <BR>\r\n <BR>\r\n Example: getDNPattern(\"uid=jdoe,ou=people,o=vds\") returns \"uid=,ou=,o=\".</div>\r\n<dl>\r\n<dt><span class=\"paramLabel\">Parameters:</span></dt>\r\n<dd><code>dn</code> - a distinguished name.</dd>\r\n<dt><span class=\"returnLabel\">Returns:</span></dt>\r\n<dd>the original DN with the value part from each RDN removed.</dd>\r\n</dl>\r\n</li>\r\n</ul>\r\n<a name=\"hasParent-java.lang.String-java.lang.String-\">\r\n<!--   -->\r\n</a>\r\n<ul class=\"blockList\">\r\n<li class=\"blockList\">\r\n<h4>hasParent</h4>\r\n<pre>public static&nbsp;boolean&nbsp;hasParent(java.lang.String&nbsp;dnChild,\r\n                                java.lang.String&nbsp;dnParent)</pre>\r\n<div class=\"block\">Indicates if the DN given in the second parameter is a parent of the DN\r\n given in the first parameter. <BR>\r\n <BR>\r\n Example: hasParent(\"uid=jdoe,ou=people,o=vds\", \"o=vds\") returns true.</div>\r\n<dl>\r\n<dt><span class=\"paramLabel\">Parameters:</span></dt>\r\n<dd><code>dnChild</code> - a distinguished name.</dd>\r\n<dd><code>dnParent</code> - a distinguished name.</dd>\r\n<dt><span class=\"returnLabel\">Returns:</span></dt>\r\n<dd><code>true</code> if the DN given in the second parameter is a\r\n         parent of the DN given in the first parameter, <code>false</code>\r\n         otherwise.</dd>\r\n</dl>\r\n</li>\r\n</ul>\r\n<a name=\"findValueInDn-java.lang.String-java.lang.String-\">\r\n<!--   -->\r\n</a>\r\n<ul class=\"blockListLast\">\r\n<li class=\"blockList\">\r\n<h4>findValueInDn</h4>\r\n<pre>public static&nbsp;java.lang.String&nbsp;findValueInDn(java.lang.String&nbsp;dn,\r\n                                             java.lang.String&nbsp;attrName)</pre>\r\n<div class=\"block\">Returns the value of the given attribute if it is found in the DN. <BR>If the\r\n attribute appears more than once in the DN, only the left-most value is\r\n returned. <BR>\r\n <BR>\r\n Example: findValueInDn(\"uid=jdoe,ou=sales,ou=people,o=vds\", \"ou\") returns\r\n \"sales\".</div>\r\n<dl>\r\n<dt><span class=\"paramLabel\">Parameters:</span></dt>\r\n<dd><code>dn</code> - a distinguished name.</dd>\r\n<dd><code>attrName</code> - the name of an attribute to search for in the DN.</dd>\r\n<dt><span class=\"returnLabel\">Returns:</span></dt>\r\n<dd>the value of the given attribute if it is found in the DN,\r\n         <code>null</code> otherwise.</dd>\r\n</dl>\r\n</li>\r\n</ul>\r\n</li>\r\n</ul>\r\n</li>\r\n</ul>\r\n</div>\r\n</div>\r\n<!-- ========= END OF CLASS DATA ========= -->\r\n<!-- ======= START OF BOTTOM NAVBAR ====== -->\r\n<div class=\"bottomNav\"><a name=\"navbar.bottom\">\r\n<!--   -->\r\n</a>\r\n<div class=\"skipNav\"><a href=\"#skip.navbar.bottom\" title=\"Skip navigation links\">Skip navigation links</a></div>\r\n<a name=\"navbar.bottom.firstrow\">\r\n<!--   -->\r\n</a>\r\n<ul class=\"navList\" title=\"Navigation\">\r\n<li><a href=\"../../../../../../overview-summary.html\">Overview</a></li>\r\n<li><a href=\"package-summary.html\">Package</a></li>\r\n<li class=\"navBarCell1Rev\">Class</li>\r\n<li><a href=\"package-tree.html\">Tree</a></li>\r\n<li><a href=\"../../../../../../deprecated-list.html\">Deprecated</a></li>\r\n<li><a href=\"../../../../../../index-all.html\">Index</a></li>\r\n<li><a href=\"../../../../../../help-doc.html\">Help</a></li>\r\n</ul>\r\n</div>\r\n<div class=\"subNav\">\r\n<ul class=\"navList\">\r\n<li>Prev&nbsp;Class</li>\r\n<li><a href=\"../../../../../../com/rli/tools/sync/cacherefresh/tools/StringUtils.html\" title=\"class in com.rli.tools.sync.cacherefresh.tools\"><span class=\"typeNameLink\">Next&nbsp;Class</span></a></li>\r\n</ul>\r\n<ul class=\"navList\">\r\n<li><a href=\"../../../../../../index.html?com/rli/tools/sync/cacherefresh/tools/DnUtils.html\" target=\"_top\">Frames</a></li>\r\n<li><a href=\"DnUtils.html\" target=\"_top\">No&nbsp;Frames</a></li>\r\n</ul>\r\n<ul class=\"navList\" id=\"allclasses_navbar_bottom\">\r\n<li><a href=\"../../../../../../allclasses-noframe.html\">All&nbsp;Classes</a></li>\r\n</ul>\r\n<div>\r\n<script type=\"text/javascript\"><!--\r\n  allClassesLink = document.getElementById(\"allclasses_navbar_bottom\");\r\n  if(window==top) {\r\n    allClassesLink.style.display = \"block\";\r\n  }\r\n  else {\r\n    allClassesLink.style.display = \"none\";\r\n  }\r\n  //-->\r\n</script>\r\n</div>\r\n<div>\r\n<ul class=\"subNavList\">\r\n<li>Summary:&nbsp;</li>\r\n<li>Nested&nbsp;|&nbsp;</li>\r\n<li><a href=\"#field.summary\">Field</a>&nbsp;|&nbsp;</li>\r\n<li>Constr&nbsp;|&nbsp;</li>\r\n<li><a href=\"#method.summary\">Method</a></li>\r\n</ul>\r\n<ul class=\"subNavList\">\r\n<li>Detail:&nbsp;</li>\r\n<li><a href=\"#field.detail\">Field</a>&nbsp;|&nbsp;</li>\r\n<li>Constr&nbsp;|&nbsp;</li>\r\n<li><a href=\"#method.detail\">Method</a></li>\r\n</ul>\r\n</div>\r\n<a name=\"skip.navbar.bottom\">\r\n<!--   -->\r\n</a></div>\r\n<!-- ======== END OF BOTTOM NAVBAR ======= -->\r\n</body>\r\n</html>\r\n"}}]},"rootToc":{"fileAbsolutePath":"C:/Ensemble/Projects/RadiantLogic/radiantlogic-v8-developer-site-ssh-2/developer-site/.cache/gatsby-source-git/r1-saas/home-pages/TOC.md","frontmatter":{"title":"Homepages TOC"},"htmlAst":{"type":"root","children":[{"type":"element","tagName":"ul","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"element","tagName":"a","properties":{"href":""},"children":[{"type":"text","value":"Knowledge"}]}]},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"element","tagName":"a","properties":{"href":"developer.md"},"children":[{"type":"text","value":"Developer"}]}]},{"type":"text","value":"\n"}]}],"data":{"quirksMode":false}}}},"pageContext":{"name":"DnUtils","rootTocRegex":".*/(gatsby-source-git)\\/(r1-saas)\\/(home-pages)\\/(TOC.md)/ig"}},"staticQueryHashes":["2295405308","63159454","808649686"],"slicesMap":{}}