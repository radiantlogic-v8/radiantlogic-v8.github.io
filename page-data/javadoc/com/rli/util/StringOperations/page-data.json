{"componentChunkName":"component---src-templates-javadoc-page-js","path":"/javadoc/com/rli/util/StringOperations/","result":{"data":{"allHtmlContent":{"edges":[{"node":{"name":"StringOperations","content":"<!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 4.01 Transitional//EN\" \"http://www.w3.org/TR/html4/loose.dtd\">\n<!-- NewPage -->\n<html lang=\"en\">\n<head>\n<!-- Generated by javadoc (1.8.0_202) on Wed Mar 15 01:48:00 PDT 2023 -->\n<title>StringOperations (Radiant Logic, Inc.)</title>\n<meta name=\"date\" content=\"2023-03-15\">\n<link rel=\"stylesheet\" type=\"text/css\" href=\"../../../stylesheet.css\" title=\"Style\">\n<script type=\"text/javascript\" src=\"../../../script.js\"></script>\n</head>\n<body>\n<script type=\"text/javascript\"><!--\n    try {\n        if (location.href.indexOf('is-external=true') == -1) {\n            parent.document.title=\"StringOperations (Radiant Logic, Inc.)\";\n        }\n    }\n    catch(err) {\n    }\n//-->\nvar methods = {\"i0\":9,\"i1\":9,\"i2\":9,\"i3\":9,\"i4\":9,\"i5\":9,\"i6\":9,\"i7\":9,\"i8\":9,\"i9\":9,\"i10\":9,\"i11\":9,\"i12\":9,\"i13\":9,\"i14\":9,\"i15\":9,\"i16\":9,\"i17\":9,\"i18\":9,\"i19\":9,\"i20\":9,\"i21\":9,\"i22\":9,\"i23\":9,\"i24\":9,\"i25\":9,\"i26\":9,\"i27\":9,\"i28\":9,\"i29\":9,\"i30\":9,\"i31\":9,\"i32\":9,\"i33\":9,\"i34\":9,\"i35\":9,\"i36\":9,\"i37\":9,\"i38\":9,\"i39\":9,\"i40\":9,\"i41\":9,\"i42\":9,\"i43\":9,\"i44\":9,\"i45\":9,\"i46\":9,\"i47\":9,\"i48\":9,\"i49\":9,\"i50\":9,\"i51\":9,\"i52\":9,\"i53\":9,\"i54\":9,\"i55\":9,\"i56\":9,\"i57\":9,\"i58\":9,\"i59\":9,\"i60\":9,\"i61\":9,\"i62\":9,\"i63\":9,\"i64\":9,\"i65\":9,\"i66\":9,\"i67\":9,\"i68\":9,\"i69\":9,\"i70\":9,\"i71\":9,\"i72\":41,\"i73\":9,\"i74\":9,\"i75\":9,\"i76\":9,\"i77\":9,\"i78\":9,\"i79\":9,\"i80\":9,\"i81\":9,\"i82\":9,\"i83\":9,\"i84\":9,\"i85\":9,\"i86\":9,\"i87\":9,\"i88\":9,\"i89\":9,\"i90\":9,\"i91\":9,\"i92\":9,\"i93\":9,\"i94\":9,\"i95\":9,\"i96\":9,\"i97\":9,\"i98\":9,\"i99\":9,\"i100\":9};\nvar tabs = {65535:[\"t0\",\"All Methods\"],1:[\"t1\",\"Static Methods\"],8:[\"t4\",\"Concrete Methods\"],32:[\"t6\",\"Deprecated Methods\"]};\nvar altColor = \"altColor\";\nvar rowColor = \"rowColor\";\nvar tableTab = \"tableTab\";\nvar activeTableTab = \"activeTableTab\";\n</script>\n<noscript>\n<div>JavaScript is disabled on your browser.</div>\n</noscript>\n<!-- ========= START OF TOP NAVBAR ======= -->\n<div class=\"topNav\"><a name=\"navbar.top\">\n<!--   -->\n</a>\n<div class=\"skipNav\"><a href=\"#skip.navbar.top\" title=\"Skip navigation links\">Skip navigation links</a></div>\n<a name=\"navbar.top.firstrow\">\n<!--   -->\n</a>\n<ul class=\"navList\" title=\"Navigation\">\n<li><a href=\"../../../overview-summary.html\">Overview</a></li>\n<li><a href=\"package-summary.html\">Package</a></li>\n<li class=\"navBarCell1Rev\">Class</li>\n<li><a href=\"package-tree.html\">Tree</a></li>\n<li><a href=\"../../../deprecated-list.html\">Deprecated</a></li>\n<li><a href=\"../../../index-all.html\">Index</a></li>\n<li><a href=\"../../../help-doc.html\">Help</a></li>\n</ul>\n</div>\n<div class=\"subNav\">\n<ul class=\"navList\">\n<li><a href=\"../../../com/rli/util/RLIConstants.html\" title=\"class in com.rli.util\"><span class=\"typeNameLink\">Prev&nbsp;Class</span></a></li>\n<li>Next&nbsp;Class</li>\n</ul>\n<ul class=\"navList\">\n<li><a href=\"../../../index.html?com/rli/util/StringOperations.html\" target=\"_top\">Frames</a></li>\n<li><a href=\"StringOperations.html\" target=\"_top\">No&nbsp;Frames</a></li>\n</ul>\n<ul class=\"navList\" id=\"allclasses_navbar_top\">\n<li><a href=\"../../../allclasses-noframe.html\">All&nbsp;Classes</a></li>\n</ul>\n<div>\n<script type=\"text/javascript\"><!--\n  allClassesLink = document.getElementById(\"allclasses_navbar_top\");\n  if(window==top) {\n    allClassesLink.style.display = \"block\";\n  }\n  else {\n    allClassesLink.style.display = \"none\";\n  }\n  //-->\n</script>\n</div>\n<div>\n<ul class=\"subNavList\">\n<li>Summary:&nbsp;</li>\n<li>Nested&nbsp;|&nbsp;</li>\n<li><a href=\"#field.summary\">Field</a>&nbsp;|&nbsp;</li>\n<li>Constr&nbsp;|&nbsp;</li>\n<li><a href=\"#method.summary\">Method</a></li>\n</ul>\n<ul class=\"subNavList\">\n<li>Detail:&nbsp;</li>\n<li><a href=\"#field.detail\">Field</a>&nbsp;|&nbsp;</li>\n<li>Constr&nbsp;|&nbsp;</li>\n<li><a href=\"#method.detail\">Method</a></li>\n</ul>\n</div>\n<a name=\"skip.navbar.top\">\n<!--   -->\n</a></div>\n<!-- ========= END OF TOP NAVBAR ========= -->\n<!-- ======== START OF CLASS DATA ======== -->\n<div class=\"header\">\n<div class=\"subTitle\">com.rli.util</div>\n<h2 title=\"Class StringOperations\" class=\"title\">Class StringOperations</h2>\n</div>\n<div class=\"contentContainer\">\n<ul class=\"inheritance\">\n<li>java.lang.Object</li>\n<li>\n<ul class=\"inheritance\">\n<li>com.rli.util.StringOperations</li>\n</ul>\n</li>\n</ul>\n<div class=\"description\">\n<ul class=\"blockList\">\n<li class=\"blockList\">\n<hr>\n<br>\n<pre>public class <span class=\"typeNameLabel\">StringOperations</span>\nextends java.lang.Object</pre>\n</li>\n</ul>\n</div>\n<div class=\"summary\">\n<ul class=\"blockList\">\n<li class=\"blockList\">\n<!-- =========== FIELD SUMMARY =========== -->\n<ul class=\"blockList\">\n<li class=\"blockList\"><a name=\"field.summary\">\n<!--   -->\n</a>\n<h3>Field Summary</h3>\n<table class=\"memberSummary\" border=\"0\" cellpadding=\"3\" cellspacing=\"0\" summary=\"Field Summary table, listing fields, and an explanation\">\n<caption><span>Fields</span><span class=\"tabEnd\">&nbsp;</span></caption>\n<tr>\n<th class=\"colFirst\" scope=\"col\">Modifier and Type</th>\n<th class=\"colLast\" scope=\"col\">Field and Description</th>\n</tr>\n<tr class=\"altColor\">\n<td class=\"colFirst\"><code>static int</code></td>\n<td class=\"colLast\"><code><span class=\"memberNameLink\"><a href=\"../../../com/rli/util/StringOperations.html#IGNORE_CASE\">IGNORE_CASE</a></span></code>&nbsp;</td>\n</tr>\n<tr class=\"rowColor\">\n<td class=\"colFirst\"><code>static int</code></td>\n<td class=\"colLast\"><code><span class=\"memberNameLink\"><a href=\"../../../com/rli/util/StringOperations.html#IGNORE_CASE_NONE\">IGNORE_CASE_NONE</a></span></code>&nbsp;</td>\n</tr>\n<tr class=\"altColor\">\n<td class=\"colFirst\"><code>static boolean</code></td>\n<td class=\"colLast\"><code><span class=\"memberNameLink\"><a href=\"../../../com/rli/util/StringOperations.html#NO_QUOTE_AROUND\">NO_QUOTE_AROUND</a></span></code>&nbsp;</td>\n</tr>\n<tr class=\"rowColor\">\n<td class=\"colFirst\"><code>static boolean</code></td>\n<td class=\"colLast\"><code><span class=\"memberNameLink\"><a href=\"../../../com/rli/util/StringOperations.html#QUOTE_AROUND\">QUOTE_AROUND</a></span></code>&nbsp;</td>\n</tr>\n<tr class=\"altColor\">\n<td class=\"colFirst\"><code>static java.lang.String</code></td>\n<td class=\"colLast\"><code><span class=\"memberNameLink\"><a href=\"../../../com/rli/util/StringOperations.html#TRAILING_SPACE\">TRAILING_SPACE</a></span></code>&nbsp;</td>\n</tr>\n</table>\n</li>\n</ul>\n<!-- ========== METHOD SUMMARY =========== -->\n<ul class=\"blockList\">\n<li class=\"blockList\"><a name=\"method.summary\">\n<!--   -->\n</a>\n<h3>Method Summary</h3>\n<table class=\"memberSummary\" border=\"0\" cellpadding=\"3\" cellspacing=\"0\" summary=\"Method Summary table, listing methods, and an explanation\">\n<caption><span id=\"t0\" class=\"activeTableTab\"><span>All Methods</span><span class=\"tabEnd\">&nbsp;</span></span><span id=\"t1\" class=\"tableTab\"><span><a href=\"javascript:show(1);\">Static Methods</a></span><span class=\"tabEnd\">&nbsp;</span></span><span id=\"t4\" class=\"tableTab\"><span><a href=\"javascript:show(8);\">Concrete Methods</a></span><span class=\"tabEnd\">&nbsp;</span></span><span id=\"t6\" class=\"tableTab\"><span><a href=\"javascript:show(32);\">Deprecated Methods</a></span><span class=\"tabEnd\">&nbsp;</span></span></caption>\n<tr>\n<th class=\"colFirst\" scope=\"col\">Modifier and Type</th>\n<th class=\"colLast\" scope=\"col\">Method and Description</th>\n</tr>\n<tr id=\"i0\" class=\"altColor\">\n<td class=\"colFirst\"><code>static java.lang.String</code></td>\n<td class=\"colLast\"><code><span class=\"memberNameLink\"><a href=\"../../../com/rli/util/StringOperations.html#cleanBracket-java.lang.String-\">cleanBracket</a></span>(java.lang.String&nbsp;s)</code>\n<div class=\"block\">remove bracket () around string</div>\n</td>\n</tr>\n<tr id=\"i1\" class=\"rowColor\">\n<td class=\"colFirst\"><code>static java.lang.String</code></td>\n<td class=\"colLast\"><code><span class=\"memberNameLink\"><a href=\"../../../com/rli/util/StringOperations.html#cleanSquareBracket-java.lang.String-\">cleanSquareBracket</a></span>(java.lang.String&nbsp;s)</code>\n<div class=\"block\">remove bracket [] around string</div>\n</td>\n</tr>\n<tr id=\"i2\" class=\"altColor\">\n<td class=\"colFirst\"><code>static java.lang.String</code></td>\n<td class=\"colLast\"><code><span class=\"memberNameLink\"><a href=\"../../../com/rli/util/StringOperations.html#cleanString-java.lang.String-char-char-\">cleanString</a></span>(java.lang.String&nbsp;s,\n           char&nbsp;startCharToRemove,\n           char&nbsp;endCharToRemove)</code>\n<div class=\"block\">clean char at beginning and end of str.</div>\n</td>\n</tr>\n<tr id=\"i3\" class=\"rowColor\">\n<td class=\"colFirst\"><code>static boolean</code></td>\n<td class=\"colLast\"><code><span class=\"memberNameLink\"><a href=\"../../../com/rli/util/StringOperations.html#contains-java.lang.String-java.lang.String-\">contains</a></span>(java.lang.String&nbsp;sourceStr,\n        java.lang.String&nbsp;targetStr)</code>&nbsp;</td>\n</tr>\n<tr id=\"i4\" class=\"altColor\">\n<td class=\"colFirst\"><code>static boolean</code></td>\n<td class=\"colLast\"><code><span class=\"memberNameLink\"><a href=\"../../../com/rli/util/StringOperations.html#containsSpecialCharacter-java.lang.String-\">containsSpecialCharacter</a></span>(java.lang.String&nbsp;ldapName)</code>&nbsp;</td>\n</tr>\n<tr id=\"i5\" class=\"rowColor\">\n<td class=\"colFirst\"><code>static java.lang.String</code></td>\n<td class=\"colLast\"><code><span class=\"memberNameLink\"><a href=\"../../../com/rli/util/StringOperations.html#convert2HTMLQuotes-java.lang.String-\">convert2HTMLQuotes</a></span>(java.lang.String&nbsp;toQuote)</code>&nbsp;</td>\n</tr>\n<tr id=\"i6\" class=\"altColor\">\n<td class=\"colFirst\"><code>static java.lang.String</code></td>\n<td class=\"colLast\"><code><span class=\"memberNameLink\"><a href=\"../../../com/rli/util/StringOperations.html#createAlias-java.lang.String-\">createAlias</a></span>(java.lang.String&nbsp;ldapName)</code>&nbsp;</td>\n</tr>\n<tr id=\"i7\" class=\"rowColor\">\n<td class=\"colFirst\"><code>static java.lang.String</code></td>\n<td class=\"colLast\"><code><span class=\"memberNameLink\"><a href=\"../../../com/rli/util/StringOperations.html#destabilizeName-java.lang.String-\">destabilizeName</a></span>(java.lang.String&nbsp;name)</code>&nbsp;</td>\n</tr>\n<tr id=\"i8\" class=\"altColor\">\n<td class=\"colFirst\"><code>static java.lang.String</code></td>\n<td class=\"colLast\"><code><span class=\"memberNameLink\"><a href=\"../../../com/rli/util/StringOperations.html#encloseWithQuotes-java.lang.String-\">encloseWithQuotes</a></span>(java.lang.String&nbsp;text)</code>\n<div class=\"block\">Replaces all single quotes(') with double quotes (\").</div>\n</td>\n</tr>\n<tr id=\"i9\" class=\"rowColor\">\n<td class=\"colFirst\"><code>static boolean</code></td>\n<td class=\"colLast\"><code><span class=\"memberNameLink\"><a href=\"../../../com/rli/util/StringOperations.html#equals-java.lang.String-java.lang.String-\">equals</a></span>(java.lang.String&nbsp;source,\n      java.lang.String&nbsp;target)</code>&nbsp;</td>\n</tr>\n<tr id=\"i10\" class=\"altColor\">\n<td class=\"colFirst\"><code>static boolean</code></td>\n<td class=\"colLast\"><code><span class=\"memberNameLink\"><a href=\"../../../com/rli/util/StringOperations.html#equals-java.lang.String-java.lang.String-boolean-\">equals</a></span>(java.lang.String&nbsp;source,\n      java.lang.String&nbsp;target,\n      boolean&nbsp;caseSensitive)</code>&nbsp;</td>\n</tr>\n<tr id=\"i11\" class=\"rowColor\">\n<td class=\"colFirst\"><code>static boolean</code></td>\n<td class=\"colLast\"><code><span class=\"memberNameLink\"><a href=\"../../../com/rli/util/StringOperations.html#equalsIgnoreCaseStartSupport-java.lang.String-java.lang.String-\">equalsIgnoreCaseStartSupport</a></span>(java.lang.String&nbsp;strWstar,\n                            java.lang.String&nbsp;str)</code>\n<div class=\"block\">return true if str matches strWstar containing '*' as wild card.</div>\n</td>\n</tr>\n<tr id=\"i12\" class=\"altColor\">\n<td class=\"colFirst\"><code>static java.lang.String</code></td>\n<td class=\"colLast\"><code><span class=\"memberNameLink\"><a href=\"../../../com/rli/util/StringOperations.html#escape-java.lang.String-java.lang.String-\">escape</a></span>(java.lang.String&nbsp;sourceStr,\n      java.lang.String&nbsp;escapeChar)</code>\n<div class=\"block\">Returns the String after escaping.</div>\n</td>\n</tr>\n<tr id=\"i13\" class=\"rowColor\">\n<td class=\"colFirst\"><code>static java.lang.String</code></td>\n<td class=\"colLast\"><code><span class=\"memberNameLink\"><a href=\"../../../com/rli/util/StringOperations.html#extractFileName-java.lang.String-boolean-\">extractFileName</a></span>(java.lang.String&nbsp;path,\n               boolean&nbsp;removeExt)</code>&nbsp;</td>\n</tr>\n<tr id=\"i14\" class=\"altColor\">\n<td class=\"colFirst\"><code>static java.lang.String</code></td>\n<td class=\"colLast\"><code><span class=\"memberNameLink\"><a href=\"../../../com/rli/util/StringOperations.html#extractFileName-java.lang.String-java.lang.String-boolean-\">extractFileName</a></span>(java.lang.String&nbsp;path,\n               java.lang.String&nbsp;fileSep,\n               boolean&nbsp;removeExt)</code>&nbsp;</td>\n</tr>\n<tr id=\"i15\" class=\"rowColor\">\n<td class=\"colFirst\"><code>static java.lang.String</code></td>\n<td class=\"colLast\"><code><span class=\"memberNameLink\"><a href=\"../../../com/rli/util/StringOperations.html#extractTableName-java.lang.String-\">extractTableName</a></span>(java.lang.String&nbsp;absTableName)</code>&nbsp;</td>\n</tr>\n<tr id=\"i16\" class=\"altColor\">\n<td class=\"colFirst\"><code>static java.lang.String</code></td>\n<td class=\"colLast\"><code><span class=\"memberNameLink\"><a href=\"../../../com/rli/util/StringOperations.html#findStringIgnoreTrim-java.lang.String-java.lang.String-\">findStringIgnoreTrim</a></span>(java.lang.String&nbsp;originalString,\n                    java.lang.String&nbsp;stringToFind)</code>\n<div class=\"block\">find stringToFind in the originalString returning the respective subset of originalString\n that matches with stringToFind under the rules of isIsolatedOrSpaceBeforeAndAfter\n isolated referring to being a single word in a string and/or having no other character(s)\n attached to it (before and after)</div>\n</td>\n</tr>\n<tr id=\"i17\" class=\"rowColor\">\n<td class=\"colFirst\"><code>static java.lang.String</code></td>\n<td class=\"colLast\"><code><span class=\"memberNameLink\"><a href=\"../../../com/rli/util/StringOperations.html#findStringIgnoreTrim-java.lang.String-java.lang.String-boolean-\">findStringIgnoreTrim</a></span>(java.lang.String&nbsp;originalString,\n                    java.lang.String&nbsp;stringToFind,\n                    boolean&nbsp;isIsolatedOrSpaceBeforeAndAfter)</code>&nbsp;</td>\n</tr>\n<tr id=\"i18\" class=\"altColor\">\n<td class=\"colFirst\"><code>static java.lang.String</code></td>\n<td class=\"colLast\"><code><span class=\"memberNameLink\"><a href=\"../../../com/rli/util/StringOperations.html#formatAsSqlValueContent-java.lang.String-\">formatAsSqlValueContent</a></span>(java.lang.String&nbsp;value)</code>\n<div class=\"block\">double quotes.</div>\n</td>\n</tr>\n<tr id=\"i19\" class=\"rowColor\">\n<td class=\"colFirst\"><code>static byte[]</code></td>\n<td class=\"colLast\"><code><span class=\"memberNameLink\"><a href=\"../../../com/rli/util/StringOperations.html#getBytesUtf16LE-java.lang.String-\">getBytesUtf16LE</a></span>(java.lang.String&nbsp;s)</code>\n<div class=\"block\">Get byte[] representation of string using UTF-16LE encoding, and if it fails\n (and it should never fail because UTF-16LE is supported charset), use default\n encoding.</div>\n</td>\n</tr>\n<tr id=\"i20\" class=\"altColor\">\n<td class=\"colFirst\"><code>static byte[]</code></td>\n<td class=\"colLast\"><code><span class=\"memberNameLink\"><a href=\"../../../com/rli/util/StringOperations.html#getBytesUtf8-java.lang.String-\">getBytesUtf8</a></span>(java.lang.String&nbsp;s)</code>\n<div class=\"block\">Get byte[] representation of string using UTF-8 encoding, and if it fails\n (and it should never fail because UTF-8 is supported charset), use default\n encoding.</div>\n</td>\n</tr>\n<tr id=\"i21\" class=\"rowColor\">\n<td class=\"colFirst\"><code>static java.lang.String</code></td>\n<td class=\"colLast\"><code><span class=\"memberNameLink\"><a href=\"../../../com/rli/util/StringOperations.html#getExtension-java.io.File-\">getExtension</a></span>(java.io.File&nbsp;f)</code>&nbsp;</td>\n</tr>\n<tr id=\"i22\" class=\"altColor\">\n<td class=\"colFirst\"><code>static java.lang.String</code></td>\n<td class=\"colLast\"><code><span class=\"memberNameLink\"><a href=\"../../../com/rli/util/StringOperations.html#hidingString-java.lang.String-\">hidingString</a></span>(java.lang.String&nbsp;s)</code>&nbsp;</td>\n</tr>\n<tr id=\"i23\" class=\"rowColor\">\n<td class=\"colFirst\"><code>static java.lang.String</code></td>\n<td class=\"colLast\"><code><span class=\"memberNameLink\"><a href=\"../../../com/rli/util/StringOperations.html#humanReadableByteCount-long-\">humanReadableByteCount</a></span>(long&nbsp;bytes)</code>&nbsp;</td>\n</tr>\n<tr id=\"i24\" class=\"altColor\">\n<td class=\"colFirst\"><code>static int</code></td>\n<td class=\"colLast\"><code><span class=\"memberNameLink\"><a href=\"../../../com/rli/util/StringOperations.html#indexOf-java.lang.String-java.lang.String-\">indexOf</a></span>(java.lang.String&nbsp;baseStr,\n       java.lang.String&nbsp;searchStr)</code>\n<div class=\"block\">ignore case indexof</div>\n</td>\n</tr>\n<tr id=\"i25\" class=\"rowColor\">\n<td class=\"colFirst\"><code>static int</code></td>\n<td class=\"colLast\"><code><span class=\"memberNameLink\"><a href=\"../../../com/rli/util/StringOperations.html#indexOf-java.lang.String-java.lang.String-int-\">indexOf</a></span>(java.lang.String&nbsp;baseStr,\n       java.lang.String&nbsp;searchStr,\n       int&nbsp;index)</code>\n<div class=\"block\">ignore case indexof</div>\n</td>\n</tr>\n<tr id=\"i26\" class=\"altColor\">\n<td class=\"colFirst\"><code>static int</code></td>\n<td class=\"colLast\"><code><span class=\"memberNameLink\"><a href=\"../../../com/rli/util/StringOperations.html#indexOfNotEscaped-java.lang.String-char-\">indexOfNotEscaped</a></span>(java.lang.String&nbsp;s,\n                 char&nbsp;c)</code>\n<div class=\"block\">return index of char not escaped</div>\n</td>\n</tr>\n<tr id=\"i27\" class=\"rowColor\">\n<td class=\"colFirst\"><code>static int</code></td>\n<td class=\"colLast\"><code><span class=\"memberNameLink\"><a href=\"../../../com/rli/util/StringOperations.html#indexOfNotEscaped-java.lang.String-char-int-\">indexOfNotEscaped</a></span>(java.lang.String&nbsp;s,\n                 char&nbsp;c,\n                 int&nbsp;fromIndex)</code>\n<div class=\"block\">return index of char not escaped</div>\n</td>\n</tr>\n<tr id=\"i28\" class=\"altColor\">\n<td class=\"colFirst\"><code>static int</code></td>\n<td class=\"colLast\"><code><span class=\"memberNameLink\"><a href=\"../../../com/rli/util/StringOperations.html#indexOfNotQuoted-java.lang.String-java.lang.String-char-int-boolean-\">indexOfNotQuoted</a></span>(java.lang.String&nbsp;s,\n                java.lang.String&nbsp;toFind,\n                char&nbsp;quote,\n                int&nbsp;fromIndex,\n                boolean&nbsp;ignoreCase)</code>\n<div class=\"block\">return index of string not quoted</div>\n</td>\n</tr>\n<tr id=\"i29\" class=\"rowColor\">\n<td class=\"colFirst\"><code>static int</code></td>\n<td class=\"colLast\"><code><span class=\"memberNameLink\"><a href=\"../../../com/rli/util/StringOperations.html#indexOfRedo-java.lang.String-java.lang.String-int-\">indexOfRedo</a></span>(java.lang.String&nbsp;s,\n           java.lang.String&nbsp;searched,\n           int&nbsp;nbOccurs)</code>\n<div class=\"block\">return index of searched string after doing nb Occurs</div>\n</td>\n</tr>\n<tr id=\"i30\" class=\"altColor\">\n<td class=\"colFirst\"><code>static int</code></td>\n<td class=\"colLast\"><code><span class=\"memberNameLink\"><a href=\"../../../com/rli/util/StringOperations.html#indexOfRedo-java.lang.String-java.lang.String-int-int-\">indexOfRedo</a></span>(java.lang.String&nbsp;s,\n           java.lang.String&nbsp;searched,\n           int&nbsp;startInt,\n           int&nbsp;nbOccurs)</code>\n<div class=\"block\">return index of searched string after doing nb Occurs</div>\n</td>\n</tr>\n<tr id=\"i31\" class=\"rowColor\">\n<td class=\"colFirst\"><code>static boolean</code></td>\n<td class=\"colLast\"><code><span class=\"memberNameLink\"><a href=\"../../../com/rli/util/StringOperations.html#inStr-java.lang.String-java.lang.String-int-\">inStr</a></span>(java.lang.String&nbsp;baseStr,\n     java.lang.String&nbsp;searchStr,\n     int&nbsp;startIndex)</code>&nbsp;</td>\n</tr>\n<tr id=\"i32\" class=\"altColor\">\n<td class=\"colFirst\"><code>static boolean</code></td>\n<td class=\"colLast\"><code><span class=\"memberNameLink\"><a href=\"../../../com/rli/util/StringOperations.html#isAsciiPrintable-java.lang.String-\">isAsciiPrintable</a></span>(java.lang.String&nbsp;s)</code>&nbsp;</td>\n</tr>\n<tr id=\"i33\" class=\"rowColor\">\n<td class=\"colFirst\"><code>static boolean</code></td>\n<td class=\"colLast\"><code><span class=\"memberNameLink\"><a href=\"../../../com/rli/util/StringOperations.html#isDigit-java.lang.String-\">isDigit</a></span>(java.lang.String&nbsp;value)</code>&nbsp;</td>\n</tr>\n<tr id=\"i34\" class=\"altColor\">\n<td class=\"colFirst\"><code>static boolean</code></td>\n<td class=\"colLast\"><code><span class=\"memberNameLink\"><a href=\"../../../com/rli/util/StringOperations.html#isLeter-java.lang.String-\">isLeter</a></span>(java.lang.String&nbsp;value)</code>&nbsp;</td>\n</tr>\n<tr id=\"i35\" class=\"rowColor\">\n<td class=\"colFirst\"><code>static boolean</code></td>\n<td class=\"colLast\"><code><span class=\"memberNameLink\"><a href=\"../../../com/rli/util/StringOperations.html#isLeterOrDigit-char-\">isLeterOrDigit</a></span>(char&nbsp;c)</code>&nbsp;</td>\n</tr>\n<tr id=\"i36\" class=\"altColor\">\n<td class=\"colFirst\"><code>static boolean</code></td>\n<td class=\"colLast\"><code><span class=\"memberNameLink\"><a href=\"../../../com/rli/util/StringOperations.html#isLeterOrDigit-java.lang.String-\">isLeterOrDigit</a></span>(java.lang.String&nbsp;value)</code>&nbsp;</td>\n</tr>\n<tr id=\"i37\" class=\"rowColor\">\n<td class=\"colFirst\"><code>static boolean</code></td>\n<td class=\"colLast\"><code><span class=\"memberNameLink\"><a href=\"../../../com/rli/util/StringOperations.html#isPrintableChar-char-\">isPrintableChar</a></span>(char&nbsp;c)</code>&nbsp;</td>\n</tr>\n<tr id=\"i38\" class=\"altColor\">\n<td class=\"colFirst\"><code>static boolean</code></td>\n<td class=\"colLast\"><code><span class=\"memberNameLink\"><a href=\"../../../com/rli/util/StringOperations.html#isPrintableString-java.lang.String-\">isPrintableString</a></span>(java.lang.String&nbsp;s)</code>&nbsp;</td>\n</tr>\n<tr id=\"i39\" class=\"rowColor\">\n<td class=\"colFirst\"><code>static boolean</code></td>\n<td class=\"colLast\"><code><span class=\"memberNameLink\"><a href=\"../../../com/rli/util/StringOperations.html#isQuoteRequired-java.lang.String-\">isQuoteRequired</a></span>(java.lang.String&nbsp;name)</code>&nbsp;</td>\n</tr>\n<tr id=\"i40\" class=\"altColor\">\n<td class=\"colFirst\"><code>static boolean</code></td>\n<td class=\"colLast\"><code><span class=\"memberNameLink\"><a href=\"../../../com/rli/util/StringOperations.html#isQuoteRequired-java.lang.String-int-\">isQuoteRequired</a></span>(java.lang.String&nbsp;name,\n               int&nbsp;databaseType)</code>&nbsp;</td>\n</tr>\n<tr id=\"i41\" class=\"rowColor\">\n<td class=\"colFirst\"><code>static int</code></td>\n<td class=\"colLast\"><code><span class=\"memberNameLink\"><a href=\"../../../com/rli/util/StringOperations.html#lastIndexOfNotEscaped-java.lang.String-char-\">lastIndexOfNotEscaped</a></span>(java.lang.String&nbsp;s,\n                     char&nbsp;c)</code>\n<div class=\"block\">return last index of char not escaped</div>\n</td>\n</tr>\n<tr id=\"i42\" class=\"altColor\">\n<td class=\"colFirst\"><code>static int</code></td>\n<td class=\"colLast\"><code><span class=\"memberNameLink\"><a href=\"../../../com/rli/util/StringOperations.html#lastIndexOfNotEscaped-java.lang.String-char-int-\">lastIndexOfNotEscaped</a></span>(java.lang.String&nbsp;s,\n                     char&nbsp;c,\n                     int&nbsp;fromIndex)</code>\n<div class=\"block\">return last index of char not escaped</div>\n</td>\n</tr>\n<tr id=\"i43\" class=\"rowColor\">\n<td class=\"colFirst\"><code>static java.lang.String</code></td>\n<td class=\"colLast\"><code><span class=\"memberNameLink\"><a href=\"../../../com/rli/util/StringOperations.html#leftTrim-java.lang.String-\">leftTrim</a></span>(java.lang.String&nbsp;value)</code>&nbsp;</td>\n</tr>\n<tr id=\"i44\" class=\"altColor\">\n<td class=\"colFirst\"><code>static void</code></td>\n<td class=\"colLast\"><code><span class=\"memberNameLink\"><a href=\"../../../com/rli/util/StringOperations.html#main-java.lang.String:A-\">main</a></span>(java.lang.String[]&nbsp;argv)</code>&nbsp;</td>\n</tr>\n<tr id=\"i45\" class=\"rowColor\">\n<td class=\"colFirst\"><code>static java.lang.String</code></td>\n<td class=\"colLast\"><code><span class=\"memberNameLink\"><a href=\"../../../com/rli/util/StringOperations.html#normalizeName-java.lang.String-\">normalizeName</a></span>(java.lang.String&nbsp;name)</code>&nbsp;</td>\n</tr>\n<tr id=\"i46\" class=\"altColor\">\n<td class=\"colFirst\"><code>static java.lang.String</code></td>\n<td class=\"colLast\"><code><span class=\"memberNameLink\"><a href=\"../../../com/rli/util/StringOperations.html#normalizeName-java.lang.String-boolean-\">normalizeName</a></span>(java.lang.String&nbsp;name,\n             boolean&nbsp;forceNormalize)</code>&nbsp;</td>\n</tr>\n<tr id=\"i47\" class=\"rowColor\">\n<td class=\"colFirst\"><code>static java.lang.String</code></td>\n<td class=\"colLast\"><code><span class=\"memberNameLink\"><a href=\"../../../com/rli/util/StringOperations.html#normalizeNameWithoutChecking-java.lang.String-\">normalizeNameWithoutChecking</a></span>(java.lang.String&nbsp;name)</code>&nbsp;</td>\n</tr>\n<tr id=\"i48\" class=\"altColor\">\n<td class=\"colFirst\"><code>static boolean</code></td>\n<td class=\"colLast\"><code><span class=\"memberNameLink\"><a href=\"../../../com/rli/util/StringOperations.html#notNull-java.lang.String-\">notNull</a></span>(java.lang.String&nbsp;str)</code>&nbsp;</td>\n</tr>\n<tr id=\"i49\" class=\"rowColor\">\n<td class=\"colFirst\"><code>static int</code></td>\n<td class=\"colLast\"><code><span class=\"memberNameLink\"><a href=\"../../../com/rli/util/StringOperations.html#occurenceOf-java.lang.String-java.lang.String-\">occurenceOf</a></span>(java.lang.String&nbsp;sourceStr,\n           java.lang.String&nbsp;targetStr)</code>&nbsp;</td>\n</tr>\n<tr id=\"i50\" class=\"altColor\">\n<td class=\"colFirst\"><code>static java.lang.String</code></td>\n<td class=\"colLast\"><code><span class=\"memberNameLink\"><a href=\"../../../com/rli/util/StringOperations.html#optimizeBracket-java.lang.String-\">optimizeBracket</a></span>(java.lang.String&nbsp;s)</code>\n<div class=\"block\">trim space and bracket extra bracket for string</div>\n</td>\n</tr>\n<tr id=\"i51\" class=\"rowColor\">\n<td class=\"colFirst\"><code>static java.lang.String</code></td>\n<td class=\"colLast\"><code><span class=\"memberNameLink\"><a href=\"../../../com/rli/util/StringOperations.html#prepareBinary-java.lang.String-java.lang.String-\">prepareBinary</a></span>(java.lang.String&nbsp;attrType,\n             java.lang.String&nbsp;attrValue)</code>&nbsp;</td>\n</tr>\n<tr id=\"i52\" class=\"altColor\">\n<td class=\"colFirst\"><code>static java.lang.String</code></td>\n<td class=\"colLast\"><code><span class=\"memberNameLink\"><a href=\"../../../com/rli/util/StringOperations.html#prependTableName-java.lang.String-java.lang.String-\">prependTableName</a></span>(java.lang.String&nbsp;columnName,\n                java.lang.String&nbsp;tableName)</code>&nbsp;</td>\n</tr>\n<tr id=\"i53\" class=\"rowColor\">\n<td class=\"colFirst\"><code>static java.lang.String</code></td>\n<td class=\"colLast\"><code><span class=\"memberNameLink\"><a href=\"../../../com/rli/util/StringOperations.html#processSpecialChars-java.lang.String-\">processSpecialChars</a></span>(java.lang.String&nbsp;fValue)</code>\n<div class=\"block\">Returns the String after replacing special characters(in hex) with\n corresponding ascii characters.</div>\n</td>\n</tr>\n<tr id=\"i54\" class=\"altColor\">\n<td class=\"colFirst\"><code>static java.lang.String</code></td>\n<td class=\"colLast\"><code><span class=\"memberNameLink\"><a href=\"../../../com/rli/util/StringOperations.html#protectWithBracketIfNeeded-java.lang.String-\">protectWithBracketIfNeeded</a></span>(java.lang.String&nbsp;s)</code>\n<div class=\"block\">protect string with bracket if needed.</div>\n</td>\n</tr>\n<tr id=\"i55\" class=\"rowColor\">\n<td class=\"colFirst\"><code>static java.lang.String</code></td>\n<td class=\"colLast\"><code><span class=\"memberNameLink\"><a href=\"../../../com/rli/util/StringOperations.html#putAround-java.lang.String-java.lang.String-\">putAround</a></span>(java.lang.String&nbsp;value,\n         java.lang.String&nbsp;addChar)</code>&nbsp;</td>\n</tr>\n<tr id=\"i56\" class=\"altColor\">\n<td class=\"colFirst\"><code>static java.lang.String</code></td>\n<td class=\"colLast\"><code><span class=\"memberNameLink\"><a href=\"../../../com/rli/util/StringOperations.html#putAround-java.lang.String-java.lang.String-java.lang.String-\">putAround</a></span>(java.lang.String&nbsp;value,\n         java.lang.String&nbsp;startChar,\n         java.lang.String&nbsp;endChar)</code>&nbsp;</td>\n</tr>\n<tr id=\"i57\" class=\"rowColor\">\n<td class=\"colFirst\"><code>static java.lang.String</code></td>\n<td class=\"colLast\"><code><span class=\"memberNameLink\"><a href=\"../../../com/rli/util/StringOperations.html#quote-java.lang.String-int-\">quote</a></span>(java.lang.String&nbsp;name,\n     int&nbsp;databaseType)</code>&nbsp;</td>\n</tr>\n<tr id=\"i58\" class=\"altColor\">\n<td class=\"colFirst\"><code>static java.lang.String</code></td>\n<td class=\"colLast\"><code><span class=\"memberNameLink\"><a href=\"../../../com/rli/util/StringOperations.html#quoteName-java.lang.String-int-\">quoteName</a></span>(java.lang.String&nbsp;name,\n         int&nbsp;databaseType)</code>&nbsp;</td>\n</tr>\n<tr id=\"i59\" class=\"rowColor\">\n<td class=\"colFirst\"><code>static java.lang.String</code></td>\n<td class=\"colLast\"><code><span class=\"memberNameLink\"><a href=\"../../../com/rli/util/StringOperations.html#quoteNameWithoutSchema-java.lang.String-int-\">quoteNameWithoutSchema</a></span>(java.lang.String&nbsp;name,\n                      int&nbsp;databaseType)</code>&nbsp;</td>\n</tr>\n<tr id=\"i60\" class=\"altColor\">\n<td class=\"colFirst\"><code>static java.lang.String</code></td>\n<td class=\"colLast\"><code><span class=\"memberNameLink\"><a href=\"../../../com/rli/util/StringOperations.html#quoteStr-java.lang.String-java.lang.String-boolean-\">quoteStr</a></span>(java.lang.String&nbsp;toQuote,\n        java.lang.String&nbsp;quote,\n        boolean&nbsp;quoteAround)</code>&nbsp;</td>\n</tr>\n<tr id=\"i61\" class=\"rowColor\">\n<td class=\"colFirst\"><code>static java.lang.String</code></td>\n<td class=\"colLast\"><code><span class=\"memberNameLink\"><a href=\"../../../com/rli/util/StringOperations.html#rdnValueTrim-java.lang.String-\">rdnValueTrim</a></span>(java.lang.String&nbsp;rdnValue)</code>\n<div class=\"block\">Added[ZENG@12-23-2010]: to trim the value of rdn \" ABC \" --> \"ABC\" \"\\\\ ABC\"\n --> \"\\\\ ABC\" \" \\\\ ABC\" --> \"\\\\ ABC\" \"ABC\\\\ \" --> \"ABC\\\\ \" \"ABC\\\\ \" --> \"ABC\\\\\n \" \" \\\\ ABC\\\\ \\\\ \" --> \"\\\\ ABC \\\\ \\\\ \" To trim unprotected (based on LDAP)\n leading and trailing spaces</div>\n</td>\n</tr>\n<tr id=\"i62\" class=\"altColor\">\n<td class=\"colFirst\"><code>static java.lang.String</code></td>\n<td class=\"colLast\"><code><span class=\"memberNameLink\"><a href=\"../../../com/rli/util/StringOperations.html#removeAround-java.lang.String-java.lang.String-\">removeAround</a></span>(java.lang.String&nbsp;value,\n            java.lang.String&nbsp;removeChar)</code>&nbsp;</td>\n</tr>\n<tr id=\"i63\" class=\"rowColor\">\n<td class=\"colFirst\"><code>static java.lang.String</code></td>\n<td class=\"colLast\"><code><span class=\"memberNameLink\"><a href=\"../../../com/rli/util/StringOperations.html#removeAround-java.lang.String-java.lang.String-java.lang.String-\">removeAround</a></span>(java.lang.String&nbsp;value,\n            java.lang.String&nbsp;begChar,\n            java.lang.String&nbsp;endChar)</code>&nbsp;</td>\n</tr>\n<tr id=\"i64\" class=\"altColor\">\n<td class=\"colFirst\"><code>static java.lang.String</code></td>\n<td class=\"colLast\"><code><span class=\"memberNameLink\"><a href=\"../../../com/rli/util/StringOperations.html#removeAroundStr-java.lang.String-java.lang.String-java.lang.String-\">removeAroundStr</a></span>(java.lang.String&nbsp;value,\n               java.lang.String&nbsp;begstr,\n               java.lang.String&nbsp;endstr)</code>&nbsp;</td>\n</tr>\n<tr id=\"i65\" class=\"rowColor\">\n<td class=\"colFirst\"><code>static java.lang.String</code></td>\n<td class=\"colLast\"><code><span class=\"memberNameLink\"><a href=\"../../../com/rli/util/StringOperations.html#removeBracketArround-java.lang.String-\">removeBracketArround</a></span>(java.lang.String&nbsp;s)</code>\n<div class=\"block\">remove bracket arround and trim() check that bracket could be removed before\n removing.</div>\n</td>\n</tr>\n<tr id=\"i66\" class=\"altColor\">\n<td class=\"colFirst\"><code>static java.lang.String</code></td>\n<td class=\"colLast\"><code><span class=\"memberNameLink\"><a href=\"../../../com/rli/util/StringOperations.html#removeBracketsArroundWithException-java.lang.String-\">removeBracketsArroundWithException</a></span>(java.lang.String&nbsp;s)</code>\n<div class=\"block\">remove bracket arround and trim() check that bracket could be removed before\n removing.</div>\n</td>\n</tr>\n<tr id=\"i67\" class=\"rowColor\">\n<td class=\"colFirst\"><code>static java.lang.String</code></td>\n<td class=\"colLast\"><code><span class=\"memberNameLink\"><a href=\"../../../com/rli/util/StringOperations.html#removeChar-java.lang.String-char-\">removeChar</a></span>(java.lang.String&nbsp;s,\n          char&nbsp;c)</code>&nbsp;</td>\n</tr>\n<tr id=\"i68\" class=\"altColor\">\n<td class=\"colFirst\"><code>static java.lang.String</code></td>\n<td class=\"colLast\"><code><span class=\"memberNameLink\"><a href=\"../../../com/rli/util/StringOperations.html#removeCharAfter-java.lang.String-char-\">removeCharAfter</a></span>(java.lang.String&nbsp;s,\n               char&nbsp;c)</code>\n<div class=\"block\">return String after removing chars after last index of c To remove extension,\n call removeCharAfter(s,'.');</div>\n</td>\n</tr>\n<tr id=\"i69\" class=\"rowColor\">\n<td class=\"colFirst\"><code>static java.lang.String</code></td>\n<td class=\"colLast\"><code><span class=\"memberNameLink\"><a href=\"../../../com/rli/util/StringOperations.html#removeExtraBraces-java.lang.String-\">removeExtraBraces</a></span>(java.lang.String&nbsp;rdnValue)</code>\n<div class=\"block\">Removes extra braces from a string value.</div>\n</td>\n</tr>\n<tr id=\"i70\" class=\"altColor\">\n<td class=\"colFirst\"><code>static java.lang.String</code></td>\n<td class=\"colLast\"><code><span class=\"memberNameLink\"><a href=\"../../../com/rli/util/StringOperations.html#removeSpacesFrom-java.lang.String-\">removeSpacesFrom</a></span>(java.lang.String&nbsp;opColumn)</code>&nbsp;</td>\n</tr>\n<tr id=\"i71\" class=\"rowColor\">\n<td class=\"colFirst\"><code>static java.lang.String</code></td>\n<td class=\"colLast\"><code><span class=\"memberNameLink\"><a href=\"../../../com/rli/util/StringOperations.html#replace-java.lang.String-int-int-java.lang.String-\">replace</a></span>(java.lang.String&nbsp;base,\n       int&nbsp;start,\n       int&nbsp;end,\n       java.lang.String&nbsp;with)</code>&nbsp;</td>\n</tr>\n<tr id=\"i72\" class=\"altColor\">\n<td class=\"colFirst\"><code>static java.lang.String</code></td>\n<td class=\"colLast\"><code><span class=\"memberNameLink\"><a href=\"../../../com/rli/util/StringOperations.html#replace-java.lang.String-java.lang.String-java.lang.String-\">replace</a></span>(java.lang.String&nbsp;base,\n       java.lang.String&nbsp;what,\n       java.lang.String&nbsp;with)</code>\n<div class=\"block\"><span class=\"deprecatedLabel\">Deprecated.</span>&nbsp;\n<div class=\"block\"><span class=\"deprecationComment\">use replaceAll</span></div>\n</div>\n</td>\n</tr>\n<tr id=\"i73\" class=\"rowColor\">\n<td class=\"colFirst\"><code>static java.lang.String</code></td>\n<td class=\"colLast\"><code><span class=\"memberNameLink\"><a href=\"../../../com/rli/util/StringOperations.html#replace-java.lang.String-java.lang.String-java.lang.String-int-\">replace</a></span>(java.lang.String&nbsp;base,\n       java.lang.String&nbsp;what,\n       java.lang.String&nbsp;with,\n       int&nbsp;ignoreCase)</code>&nbsp;</td>\n</tr>\n<tr id=\"i74\" class=\"altColor\">\n<td class=\"colFirst\"><code>static java.lang.String</code></td>\n<td class=\"colLast\"><code><span class=\"memberNameLink\"><a href=\"../../../com/rli/util/StringOperations.html#replaceAll-java.lang.String-java.util.Map-\">replaceAll</a></span>(java.lang.String&nbsp;str,\n          java.util.Map&nbsp;mapKToFindVToReplace)</code>\n<div class=\"block\">faster than String.replace(...)</div>\n</td>\n</tr>\n<tr id=\"i75\" class=\"rowColor\">\n<td class=\"colFirst\"><code>static java.lang.String</code></td>\n<td class=\"colLast\"><code><span class=\"memberNameLink\"><a href=\"../../../com/rli/util/StringOperations.html#replaceAll-java.lang.String-java.lang.String-java.lang.String-\">replaceAll</a></span>(java.lang.String&nbsp;str,\n          java.lang.String&nbsp;toFind,\n          java.lang.String&nbsp;toReplaceWith)</code>\n<div class=\"block\">faster than String.replace(...)</div>\n</td>\n</tr>\n<tr id=\"i76\" class=\"altColor\">\n<td class=\"colFirst\"><code>static java.lang.String</code></td>\n<td class=\"colLast\"><code><span class=\"memberNameLink\"><a href=\"../../../com/rli/util/StringOperations.html#replaceAll-java.lang.String-java.lang.String-java.lang.String-boolean-\">replaceAll</a></span>(java.lang.String&nbsp;str,\n          java.lang.String&nbsp;toFind,\n          java.lang.String&nbsp;toReplaceWith,\n          boolean&nbsp;ignorecase)</code>\n<div class=\"block\">faster than String.replace(...)</div>\n</td>\n</tr>\n<tr id=\"i77\" class=\"rowColor\">\n<td class=\"colFirst\"><code>static java.lang.String</code></td>\n<td class=\"colLast\"><code><span class=\"memberNameLink\"><a href=\"../../../com/rli/util/StringOperations.html#replaceColumnsByCount-java.lang.String-\">replaceColumnsByCount</a></span>(java.lang.String&nbsp;sqlCommand)</code>&nbsp;</td>\n</tr>\n<tr id=\"i78\" class=\"altColor\">\n<td class=\"colFirst\"><code>static java.lang.String</code></td>\n<td class=\"colLast\"><code><span class=\"memberNameLink\"><a href=\"../../../com/rli/util/StringOperations.html#replaceFirstOccurenceListWithValue-java.lang.String-java.util.List-java.lang.String-\">replaceFirstOccurenceListWithValue</a></span>(java.lang.String&nbsp;str,\n                                  java.util.List&nbsp;listOfValueToReplace,\n                                  java.lang.String&nbsp;newValue)</code>\n<div class=\"block\">relace each value in the list for</div>\n</td>\n</tr>\n<tr id=\"i79\" class=\"rowColor\">\n<td class=\"colFirst\"><code>static java.lang.String</code></td>\n<td class=\"colLast\"><code><span class=\"memberNameLink\"><a href=\"../../../com/rli/util/StringOperations.html#replaceLast-java.lang.String-java.lang.String-java.lang.String-\">replaceLast</a></span>(java.lang.String&nbsp;input,\n           java.lang.String&nbsp;search,\n           java.lang.String&nbsp;replacement)</code>\n<div class=\"block\">Replaces the last match in a String.</div>\n</td>\n</tr>\n<tr id=\"i80\" class=\"altColor\">\n<td class=\"colFirst\"><code>static java.lang.String</code></td>\n<td class=\"colLast\"><code><span class=\"memberNameLink\"><a href=\"../../../com/rli/util/StringOperations.html#replaceRecursively-java.lang.String-java.lang.String-java.lang.String-\">replaceRecursively</a></span>(java.lang.String&nbsp;s,\n                  java.lang.String&nbsp;old,\n                  java.lang.String&nbsp;replacement)</code>&nbsp;</td>\n</tr>\n<tr id=\"i81\" class=\"rowColor\">\n<td class=\"colFirst\"><code>static java.lang.String</code></td>\n<td class=\"colLast\"><code><span class=\"memberNameLink\"><a href=\"../../../com/rli/util/StringOperations.html#replaceSpaceWith-java.lang.String-java.lang.String-\">replaceSpaceWith</a></span>(java.lang.String&nbsp;original,\n                java.lang.String&nbsp;replaceWith)</code>&nbsp;</td>\n</tr>\n<tr id=\"i82\" class=\"altColor\">\n<td class=\"colFirst\"><code>static java.lang.String</code></td>\n<td class=\"colLast\"><code><span class=\"memberNameLink\"><a href=\"../../../com/rli/util/StringOperations.html#reverseString-java.lang.String-\">reverseString</a></span>(java.lang.String&nbsp;value)</code>&nbsp;</td>\n</tr>\n<tr id=\"i83\" class=\"rowColor\">\n<td class=\"colFirst\"><code>static java.lang.String</code></td>\n<td class=\"colLast\"><code><span class=\"memberNameLink\"><a href=\"../../../com/rli/util/StringOperations.html#rightTrim-java.lang.String-\">rightTrim</a></span>(java.lang.String&nbsp;value)</code>&nbsp;</td>\n</tr>\n<tr id=\"i84\" class=\"altColor\">\n<td class=\"colFirst\"><code>static java.lang.String</code></td>\n<td class=\"colLast\"><code><span class=\"memberNameLink\"><a href=\"../../../com/rli/util/StringOperations.html#robustQuote-java.lang.String-int-\">robustQuote</a></span>(java.lang.String&nbsp;s,\n           int&nbsp;databaseType)</code>\n<div class=\"block\">Quote s if :\n \n s contains at least one \"not word character\" ( word char = [a-zA-Z0-9_]),\n \n or s has both lower and upper letters,\n \n or if there a special DB case (see isRobustQuoteRequired()).</div>\n</td>\n</tr>\n<tr id=\"i85\" class=\"rowColor\">\n<td class=\"colFirst\"><code>static java.lang.String</code></td>\n<td class=\"colLast\"><code><span class=\"memberNameLink\"><a href=\"../../../com/rli/util/StringOperations.html#SpecialCharsToHex-java.lang.String-\">SpecialCharsToHex</a></span>(java.lang.String&nbsp;filter)</code>\n<div class=\"block\">Returns the String after replacing special characters(in hex) with\n corresponding ascii characters (for search filter).</div>\n</td>\n</tr>\n<tr id=\"i86\" class=\"altColor\">\n<td class=\"colFirst\"><code>static java.lang.String[]</code></td>\n<td class=\"colLast\"><code><span class=\"memberNameLink\"><a href=\"../../../com/rli/util/StringOperations.html#split-java.lang.String-char-\">split</a></span>(java.lang.String&nbsp;str,\n     char&nbsp;delim)</code>\n<div class=\"block\">explode str in a array using delim str provided.</div>\n</td>\n</tr>\n<tr id=\"i87\" class=\"rowColor\">\n<td class=\"colFirst\"><code>static java.lang.String[]</code></td>\n<td class=\"colLast\"><code><span class=\"memberNameLink\"><a href=\"../../../com/rli/util/StringOperations.html#split-java.lang.String-java.lang.String-\">split</a></span>(java.lang.String&nbsp;str,\n     java.lang.String&nbsp;delim)</code>\n<div class=\"block\">explode str in a array using delim str provided.</div>\n</td>\n</tr>\n<tr id=\"i88\" class=\"altColor\">\n<td class=\"colFirst\"><code>static java.lang.String[]</code></td>\n<td class=\"colLast\"><code><span class=\"memberNameLink\"><a href=\"../../../com/rli/util/StringOperations.html#split-java.lang.String-java.lang.String-boolean-\">split</a></span>(java.lang.String&nbsp;str,\n     java.lang.String&nbsp;delim,\n     boolean&nbsp;doNotSplitIfEscaped)</code>\n<div class=\"block\">explode str in a array using delim str provided.</div>\n</td>\n</tr>\n<tr id=\"i89\" class=\"rowColor\">\n<td class=\"colFirst\"><code>static java.lang.String[]</code></td>\n<td class=\"colLast\"><code><span class=\"memberNameLink\"><a href=\"../../../com/rli/util/StringOperations.html#splitEscaped-java.lang.String-char-\">splitEscaped</a></span>(java.lang.String&nbsp;str,\n            char&nbsp;delim)</code>\n<div class=\"block\">explode str in a array using delim str provided.</div>\n</td>\n</tr>\n<tr id=\"i90\" class=\"altColor\">\n<td class=\"colFirst\"><code>static java.lang.String</code></td>\n<td class=\"colLast\"><code><span class=\"memberNameLink\"><a href=\"../../../com/rli/util/StringOperations.html#stringNormalizer-java.lang.String-java.lang.String-\">stringNormalizer</a></span>(java.lang.String&nbsp;s,\n                java.lang.String&nbsp;delimit)</code>&nbsp;</td>\n</tr>\n<tr id=\"i91\" class=\"rowColor\">\n<td class=\"colFirst\"><code>static java.lang.String</code></td>\n<td class=\"colLast\"><code><span class=\"memberNameLink\"><a href=\"../../../com/rli/util/StringOperations.html#stringNormalizer-java.lang.String-java.lang.String-java.lang.String-\">stringNormalizer</a></span>(java.lang.String&nbsp;s,\n                java.lang.String&nbsp;delimit,\n                java.lang.String&nbsp;separator)</code>&nbsp;</td>\n</tr>\n<tr id=\"i92\" class=\"altColor\">\n<td class=\"colFirst\"><code>static java.lang.String</code></td>\n<td class=\"colLast\"><code><span class=\"memberNameLink\"><a href=\"../../../com/rli/util/StringOperations.html#toAscii-byte:A-\">toAscii</a></span>(byte[]&nbsp;data)</code>&nbsp;</td>\n</tr>\n<tr id=\"i93\" class=\"rowColor\">\n<td class=\"colFirst\"><code>static java.lang.String</code></td>\n<td class=\"colLast\"><code><span class=\"memberNameLink\"><a href=\"../../../com/rli/util/StringOperations.html#toBase64-byte:A-\">toBase64</a></span>(byte[]&nbsp;data)</code>&nbsp;</td>\n</tr>\n<tr id=\"i94\" class=\"altColor\">\n<td class=\"colFirst\"><code>static java.util.Collection&lt;java.lang.String&gt;</code></td>\n<td class=\"colLast\"><code><span class=\"memberNameLink\"><a href=\"../../../com/rli/util/StringOperations.html#toCollection-java.lang.String-java.lang.String-\">toCollection</a></span>(java.lang.String&nbsp;strToParse,\n            java.lang.String&nbsp;separators)</code>&nbsp;</td>\n</tr>\n<tr id=\"i95\" class=\"rowColor\">\n<td class=\"colFirst\"><code>static java.lang.String</code></td>\n<td class=\"colLast\"><code><span class=\"memberNameLink\"><a href=\"../../../com/rli/util/StringOperations.html#toFullLengthString-java.lang.String-\">toFullLengthString</a></span>(java.lang.String&nbsp;numericalString)</code>&nbsp;</td>\n</tr>\n<tr id=\"i96\" class=\"altColor\">\n<td class=\"colFirst\"><code>static java.lang.String</code></td>\n<td class=\"colLast\"><code><span class=\"memberNameLink\"><a href=\"../../../com/rli/util/StringOperations.html#toHex-byte:A-\">toHex</a></span>(byte[]&nbsp;data)</code>&nbsp;</td>\n</tr>\n<tr id=\"i97\" class=\"rowColor\">\n<td class=\"colFirst\"><code>static java.lang.String</code></td>\n<td class=\"colLast\"><code><span class=\"memberNameLink\"><a href=\"../../../com/rli/util/StringOperations.html#toString-java.util.Collection-java.lang.String-\">toString</a></span>(java.util.Collection&lt;java.lang.String&gt;&nbsp;listToSerialize,\n        java.lang.String&nbsp;separators)</code>&nbsp;</td>\n</tr>\n<tr id=\"i98\" class=\"altColor\">\n<td class=\"colFirst\"><code>static java.lang.String</code></td>\n<td class=\"colLast\"><code><span class=\"memberNameLink\"><a href=\"../../../com/rli/util/StringOperations.html#unEscape-java.lang.String-\">unEscape</a></span>(java.lang.String&nbsp;sourceStr)</code>\n<div class=\"block\">Returns the String after unescaping any escaped characters.</div>\n</td>\n</tr>\n<tr id=\"i99\" class=\"rowColor\">\n<td class=\"colFirst\"><code>static java.lang.String</code></td>\n<td class=\"colLast\"><code><span class=\"memberNameLink\"><a href=\"../../../com/rli/util/StringOperations.html#unEscape-java.lang.String-char-\">unEscape</a></span>(java.lang.String&nbsp;sourceStr,\n        char&nbsp;char2Unescape)</code>&nbsp;</td>\n</tr>\n<tr id=\"i100\" class=\"altColor\">\n<td class=\"colFirst\"><code>static int</code></td>\n<td class=\"colLast\"><code><span class=\"memberNameLink\"><a href=\"../../../com/rli/util/StringOperations.html#utf8Length-java.lang.String-\">utf8Length</a></span>(java.lang.String&nbsp;string)</code>\n<div class=\"block\">For the given string, returns the number of UTF-8 bytes required to encode\n the string.</div>\n</td>\n</tr>\n</table>\n<ul class=\"blockList\">\n<li class=\"blockList\"><a name=\"methods.inherited.from.class.java.lang.Object\">\n<!--   -->\n</a>\n<h3>Methods inherited from class&nbsp;java.lang.Object</h3>\n<code>clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait</code></li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n</div>\n<div class=\"details\">\n<ul class=\"blockList\">\n<li class=\"blockList\">\n<!-- ============ FIELD DETAIL =========== -->\n<ul class=\"blockList\">\n<li class=\"blockList\"><a name=\"field.detail\">\n<!--   -->\n</a>\n<h3>Field Detail</h3>\n<a name=\"QUOTE_AROUND\">\n<!--   -->\n</a>\n<ul class=\"blockList\">\n<li class=\"blockList\">\n<h4>QUOTE_AROUND</h4>\n<pre>public static final&nbsp;boolean QUOTE_AROUND</pre>\n<dl>\n<dt><span class=\"seeLabel\">See Also:</span></dt>\n<dd><a href=\"../../../constant-values.html#com.rli.util.StringOperations.QUOTE_AROUND\">Constant Field Values</a></dd>\n</dl>\n</li>\n</ul>\n<a name=\"NO_QUOTE_AROUND\">\n<!--   -->\n</a>\n<ul class=\"blockList\">\n<li class=\"blockList\">\n<h4>NO_QUOTE_AROUND</h4>\n<pre>public static final&nbsp;boolean NO_QUOTE_AROUND</pre>\n<dl>\n<dt><span class=\"seeLabel\">See Also:</span></dt>\n<dd><a href=\"../../../constant-values.html#com.rli.util.StringOperations.NO_QUOTE_AROUND\">Constant Field Values</a></dd>\n</dl>\n</li>\n</ul>\n<a name=\"IGNORE_CASE\">\n<!--   -->\n</a>\n<ul class=\"blockList\">\n<li class=\"blockList\">\n<h4>IGNORE_CASE</h4>\n<pre>public static final&nbsp;int IGNORE_CASE</pre>\n<dl>\n<dt><span class=\"seeLabel\">See Also:</span></dt>\n<dd><a href=\"../../../constant-values.html#com.rli.util.StringOperations.IGNORE_CASE\">Constant Field Values</a></dd>\n</dl>\n</li>\n</ul>\n<a name=\"IGNORE_CASE_NONE\">\n<!--   -->\n</a>\n<ul class=\"blockList\">\n<li class=\"blockList\">\n<h4>IGNORE_CASE_NONE</h4>\n<pre>public static final&nbsp;int IGNORE_CASE_NONE</pre>\n<dl>\n<dt><span class=\"seeLabel\">See Also:</span></dt>\n<dd><a href=\"../../../constant-values.html#com.rli.util.StringOperations.IGNORE_CASE_NONE\">Constant Field Values</a></dd>\n</dl>\n</li>\n</ul>\n<a name=\"TRAILING_SPACE\">\n<!--   -->\n</a>\n<ul class=\"blockListLast\">\n<li class=\"blockList\">\n<h4>TRAILING_SPACE</h4>\n<pre>public static final&nbsp;java.lang.String TRAILING_SPACE</pre>\n<dl>\n<dt><span class=\"seeLabel\">See Also:</span></dt>\n<dd><a href=\"../../../constant-values.html#com.rli.util.StringOperations.TRAILING_SPACE\">Constant Field Values</a></dd>\n</dl>\n</li>\n</ul>\n</li>\n</ul>\n<!-- ============ METHOD DETAIL ========== -->\n<ul class=\"blockList\">\n<li class=\"blockList\"><a name=\"method.detail\">\n<!--   -->\n</a>\n<h3>Method Detail</h3>\n<a name=\"quoteStr-java.lang.String-java.lang.String-boolean-\">\n<!--   -->\n</a>\n<ul class=\"blockList\">\n<li class=\"blockList\">\n<h4>quoteStr</h4>\n<pre>public static&nbsp;java.lang.String&nbsp;quoteStr(java.lang.String&nbsp;toQuote,\n                                        java.lang.String&nbsp;quote,\n                                        boolean&nbsp;quoteAround)</pre>\n</li>\n</ul>\n<a name=\"putAround-java.lang.String-java.lang.String-\">\n<!--   -->\n</a>\n<ul class=\"blockList\">\n<li class=\"blockList\">\n<h4>putAround</h4>\n<pre>public static&nbsp;java.lang.String&nbsp;putAround(java.lang.String&nbsp;value,\n                                         java.lang.String&nbsp;addChar)</pre>\n</li>\n</ul>\n<a name=\"putAround-java.lang.String-java.lang.String-java.lang.String-\">\n<!--   -->\n</a>\n<ul class=\"blockList\">\n<li class=\"blockList\">\n<h4>putAround</h4>\n<pre>public static&nbsp;java.lang.String&nbsp;putAround(java.lang.String&nbsp;value,\n                                         java.lang.String&nbsp;startChar,\n                                         java.lang.String&nbsp;endChar)</pre>\n</li>\n</ul>\n<a name=\"removeAround-java.lang.String-java.lang.String-\">\n<!--   -->\n</a>\n<ul class=\"blockList\">\n<li class=\"blockList\">\n<h4>removeAround</h4>\n<pre>public static&nbsp;java.lang.String&nbsp;removeAround(java.lang.String&nbsp;value,\n                                            java.lang.String&nbsp;removeChar)</pre>\n</li>\n</ul>\n<a name=\"removeAround-java.lang.String-java.lang.String-java.lang.String-\">\n<!--   -->\n</a>\n<ul class=\"blockList\">\n<li class=\"blockList\">\n<h4>removeAround</h4>\n<pre>public static&nbsp;java.lang.String&nbsp;removeAround(java.lang.String&nbsp;value,\n                                            java.lang.String&nbsp;begChar,\n                                            java.lang.String&nbsp;endChar)</pre>\n</li>\n</ul>\n<a name=\"removeAroundStr-java.lang.String-java.lang.String-java.lang.String-\">\n<!--   -->\n</a>\n<ul class=\"blockList\">\n<li class=\"blockList\">\n<h4>removeAroundStr</h4>\n<pre>public static&nbsp;java.lang.String&nbsp;removeAroundStr(java.lang.String&nbsp;value,\n                                               java.lang.String&nbsp;begstr,\n                                               java.lang.String&nbsp;endstr)</pre>\n</li>\n</ul>\n<a name=\"removeSpacesFrom-java.lang.String-\">\n<!--   -->\n</a>\n<ul class=\"blockList\">\n<li class=\"blockList\">\n<h4>removeSpacesFrom</h4>\n<pre>public static&nbsp;java.lang.String&nbsp;removeSpacesFrom(java.lang.String&nbsp;opColumn)</pre>\n</li>\n</ul>\n<a name=\"replaceSpaceWith-java.lang.String-java.lang.String-\">\n<!--   -->\n</a>\n<ul class=\"blockList\">\n<li class=\"blockList\">\n<h4>replaceSpaceWith</h4>\n<pre>public static&nbsp;java.lang.String&nbsp;replaceSpaceWith(java.lang.String&nbsp;original,\n                                                java.lang.String&nbsp;replaceWith)</pre>\n</li>\n</ul>\n<a name=\"convert2HTMLQuotes-java.lang.String-\">\n<!--   -->\n</a>\n<ul class=\"blockList\">\n<li class=\"blockList\">\n<h4>convert2HTMLQuotes</h4>\n<pre>public static&nbsp;java.lang.String&nbsp;convert2HTMLQuotes(java.lang.String&nbsp;toQuote)</pre>\n</li>\n</ul>\n<a name=\"replace-java.lang.String-java.lang.String-java.lang.String-\">\n<!--   -->\n</a>\n<ul class=\"blockList\">\n<li class=\"blockList\">\n<h4>replace</h4>\n<pre>@Deprecated\npublic static&nbsp;java.lang.String&nbsp;replace(java.lang.String&nbsp;base,\n                                                   java.lang.String&nbsp;what,\n                                                   java.lang.String&nbsp;with)</pre>\n<div class=\"block\"><span class=\"deprecatedLabel\">Deprecated.</span>&nbsp;<span class=\"deprecationComment\">use replaceAll</span></div>\n<dl>\n<dt><span class=\"paramLabel\">Parameters:</span></dt>\n<dd><code>base</code> - </dd>\n<dd><code>what</code> - </dd>\n<dd><code>with</code> - </dd>\n<dt><span class=\"returnLabel\">Returns:</span></dt>\n</dl>\n</li>\n</ul>\n<a name=\"replaceLast-java.lang.String-java.lang.String-java.lang.String-\">\n<!--   -->\n</a>\n<ul class=\"blockList\">\n<li class=\"blockList\">\n<h4>replaceLast</h4>\n<pre>public static&nbsp;java.lang.String&nbsp;replaceLast(java.lang.String&nbsp;input,\n                                           java.lang.String&nbsp;search,\n                                           java.lang.String&nbsp;replacement)</pre>\n<div class=\"block\">Replaces the last match in a String.</div>\n<dl>\n<dt><span class=\"paramLabel\">Parameters:</span></dt>\n<dd><code>input</code> - the input string</dd>\n<dd><code>search</code> - the string that should be replaced</dd>\n<dd><code>replacement</code> - the replacement</dd>\n<dt><span class=\"returnLabel\">Returns:</span></dt>\n<dd>the input string where the last match of the search string has been\n         replaced</dd>\n<dt><span class=\"throwsLabel\">Throws:</span></dt>\n<dd><code>java.lang.NullPointerException</code> - when one of the specified strings is null</dd>\n</dl>\n</li>\n</ul>\n<a name=\"replace-java.lang.String-java.lang.String-java.lang.String-int-\">\n<!--   -->\n</a>\n<ul class=\"blockList\">\n<li class=\"blockList\">\n<h4>replace</h4>\n<pre>public static&nbsp;java.lang.String&nbsp;replace(java.lang.String&nbsp;base,\n                                       java.lang.String&nbsp;what,\n                                       java.lang.String&nbsp;with,\n                                       int&nbsp;ignoreCase)</pre>\n</li>\n</ul>\n<a name=\"inStr-java.lang.String-java.lang.String-int-\">\n<!--   -->\n</a>\n<ul class=\"blockList\">\n<li class=\"blockList\">\n<h4>inStr</h4>\n<pre>public static&nbsp;boolean&nbsp;inStr(java.lang.String&nbsp;baseStr,\n                            java.lang.String&nbsp;searchStr,\n                            int&nbsp;startIndex)</pre>\n</li>\n</ul>\n<a name=\"indexOf-java.lang.String-java.lang.String-\">\n<!--   -->\n</a>\n<ul class=\"blockList\">\n<li class=\"blockList\">\n<h4>indexOf</h4>\n<pre>public static&nbsp;int&nbsp;indexOf(java.lang.String&nbsp;baseStr,\n                          java.lang.String&nbsp;searchStr)</pre>\n<div class=\"block\">ignore case indexof</div>\n<dl>\n<dt><span class=\"paramLabel\">Parameters:</span></dt>\n<dd><code>baseStr</code> - </dd>\n<dd><code>searchStr</code> - </dd>\n<dt><span class=\"returnLabel\">Returns:</span></dt>\n</dl>\n</li>\n</ul>\n<a name=\"indexOf-java.lang.String-java.lang.String-int-\">\n<!--   -->\n</a>\n<ul class=\"blockList\">\n<li class=\"blockList\">\n<h4>indexOf</h4>\n<pre>public static&nbsp;int&nbsp;indexOf(java.lang.String&nbsp;baseStr,\n                          java.lang.String&nbsp;searchStr,\n                          int&nbsp;index)</pre>\n<div class=\"block\">ignore case indexof</div>\n<dl>\n<dt><span class=\"paramLabel\">Parameters:</span></dt>\n<dd><code>baseStr</code> - </dd>\n<dd><code>searchStr</code> - </dd>\n<dt><span class=\"returnLabel\">Returns:</span></dt>\n</dl>\n</li>\n</ul>\n<a name=\"replace-java.lang.String-int-int-java.lang.String-\">\n<!--   -->\n</a>\n<ul class=\"blockList\">\n<li class=\"blockList\">\n<h4>replace</h4>\n<pre>public static&nbsp;java.lang.String&nbsp;replace(java.lang.String&nbsp;base,\n                                       int&nbsp;start,\n                                       int&nbsp;end,\n                                       java.lang.String&nbsp;with)</pre>\n</li>\n</ul>\n<a name=\"replaceColumnsByCount-java.lang.String-\">\n<!--   -->\n</a>\n<ul class=\"blockList\">\n<li class=\"blockList\">\n<h4>replaceColumnsByCount</h4>\n<pre>public static&nbsp;java.lang.String&nbsp;replaceColumnsByCount(java.lang.String&nbsp;sqlCommand)</pre>\n</li>\n</ul>\n<a name=\"reverseString-java.lang.String-\">\n<!--   -->\n</a>\n<ul class=\"blockList\">\n<li class=\"blockList\">\n<h4>reverseString</h4>\n<pre>public static&nbsp;java.lang.String&nbsp;reverseString(java.lang.String&nbsp;value)</pre>\n</li>\n</ul>\n<a name=\"destabilizeName-java.lang.String-\">\n<!--   -->\n</a>\n<ul class=\"blockList\">\n<li class=\"blockList\">\n<h4>destabilizeName</h4>\n<pre>public static&nbsp;java.lang.String&nbsp;destabilizeName(java.lang.String&nbsp;name)</pre>\n</li>\n</ul>\n<a name=\"normalizeNameWithoutChecking-java.lang.String-\">\n<!--   -->\n</a>\n<ul class=\"blockList\">\n<li class=\"blockList\">\n<h4>normalizeNameWithoutChecking</h4>\n<pre>public static&nbsp;java.lang.String&nbsp;normalizeNameWithoutChecking(java.lang.String&nbsp;name)</pre>\n</li>\n</ul>\n<a name=\"normalizeName-java.lang.String-boolean-\">\n<!--   -->\n</a>\n<ul class=\"blockList\">\n<li class=\"blockList\">\n<h4>normalizeName</h4>\n<pre>public static&nbsp;java.lang.String&nbsp;normalizeName(java.lang.String&nbsp;name,\n                                             boolean&nbsp;forceNormalize)</pre>\n</li>\n</ul>\n<a name=\"normalizeName-java.lang.String-\">\n<!--   -->\n</a>\n<ul class=\"blockList\">\n<li class=\"blockList\">\n<h4>normalizeName</h4>\n<pre>public static&nbsp;java.lang.String&nbsp;normalizeName(java.lang.String&nbsp;name)</pre>\n</li>\n</ul>\n<a name=\"stringNormalizer-java.lang.String-java.lang.String-\">\n<!--   -->\n</a>\n<ul class=\"blockList\">\n<li class=\"blockList\">\n<h4>stringNormalizer</h4>\n<pre>public static&nbsp;java.lang.String&nbsp;stringNormalizer(java.lang.String&nbsp;s,\n                                                java.lang.String&nbsp;delimit)</pre>\n</li>\n</ul>\n<a name=\"stringNormalizer-java.lang.String-java.lang.String-java.lang.String-\">\n<!--   -->\n</a>\n<ul class=\"blockList\">\n<li class=\"blockList\">\n<h4>stringNormalizer</h4>\n<pre>public static&nbsp;java.lang.String&nbsp;stringNormalizer(java.lang.String&nbsp;s,\n                                                java.lang.String&nbsp;delimit,\n                                                java.lang.String&nbsp;separator)</pre>\n</li>\n</ul>\n<a name=\"extractFileName-java.lang.String-boolean-\">\n<!--   -->\n</a>\n<ul class=\"blockList\">\n<li class=\"blockList\">\n<h4>extractFileName</h4>\n<pre>public static&nbsp;java.lang.String&nbsp;extractFileName(java.lang.String&nbsp;path,\n                                               boolean&nbsp;removeExt)</pre>\n</li>\n</ul>\n<a name=\"extractFileName-java.lang.String-java.lang.String-boolean-\">\n<!--   -->\n</a>\n<ul class=\"blockList\">\n<li class=\"blockList\">\n<h4>extractFileName</h4>\n<pre>public static&nbsp;java.lang.String&nbsp;extractFileName(java.lang.String&nbsp;path,\n                                               java.lang.String&nbsp;fileSep,\n                                               boolean&nbsp;removeExt)</pre>\n</li>\n</ul>\n<a name=\"notNull-java.lang.String-\">\n<!--   -->\n</a>\n<ul class=\"blockList\">\n<li class=\"blockList\">\n<h4>notNull</h4>\n<pre>public static&nbsp;boolean&nbsp;notNull(java.lang.String&nbsp;str)</pre>\n</li>\n</ul>\n<a name=\"extractTableName-java.lang.String-\">\n<!--   -->\n</a>\n<ul class=\"blockList\">\n<li class=\"blockList\">\n<h4>extractTableName</h4>\n<pre>public static&nbsp;java.lang.String&nbsp;extractTableName(java.lang.String&nbsp;absTableName)</pre>\n</li>\n</ul>\n<a name=\"prependTableName-java.lang.String-java.lang.String-\">\n<!--   -->\n</a>\n<ul class=\"blockList\">\n<li class=\"blockList\">\n<h4>prependTableName</h4>\n<pre>public static&nbsp;java.lang.String&nbsp;prependTableName(java.lang.String&nbsp;columnName,\n                                                java.lang.String&nbsp;tableName)</pre>\n</li>\n</ul>\n<a name=\"toBase64-byte:A-\">\n<!--   -->\n</a>\n<ul class=\"blockList\">\n<li class=\"blockList\">\n<h4>toBase64</h4>\n<pre>public static&nbsp;java.lang.String&nbsp;toBase64(byte[]&nbsp;data)</pre>\n</li>\n</ul>\n<a name=\"toAscii-byte:A-\">\n<!--   -->\n</a>\n<ul class=\"blockList\">\n<li class=\"blockList\">\n<h4>toAscii</h4>\n<pre>public static&nbsp;java.lang.String&nbsp;toAscii(byte[]&nbsp;data)</pre>\n</li>\n</ul>\n<a name=\"toHex-byte:A-\">\n<!--   -->\n</a>\n<ul class=\"blockList\">\n<li class=\"blockList\">\n<h4>toHex</h4>\n<pre>public static&nbsp;java.lang.String&nbsp;toHex(byte[]&nbsp;data)</pre>\n</li>\n</ul>\n<a name=\"getExtension-java.io.File-\">\n<!--   -->\n</a>\n<ul class=\"blockList\">\n<li class=\"blockList\">\n<h4>getExtension</h4>\n<pre>public static&nbsp;java.lang.String&nbsp;getExtension(java.io.File&nbsp;f)</pre>\n</li>\n</ul>\n<a name=\"equals-java.lang.String-java.lang.String-\">\n<!--   -->\n</a>\n<ul class=\"blockList\">\n<li class=\"blockList\">\n<h4>equals</h4>\n<pre>public static&nbsp;boolean&nbsp;equals(java.lang.String&nbsp;source,\n                             java.lang.String&nbsp;target)</pre>\n</li>\n</ul>\n<a name=\"equals-java.lang.String-java.lang.String-boolean-\">\n<!--   -->\n</a>\n<ul class=\"blockList\">\n<li class=\"blockList\">\n<h4>equals</h4>\n<pre>public static&nbsp;boolean&nbsp;equals(java.lang.String&nbsp;source,\n                             java.lang.String&nbsp;target,\n                             boolean&nbsp;caseSensitive)</pre>\n</li>\n</ul>\n<a name=\"containsSpecialCharacter-java.lang.String-\">\n<!--   -->\n</a>\n<ul class=\"blockList\">\n<li class=\"blockList\">\n<h4>containsSpecialCharacter</h4>\n<pre>public static&nbsp;boolean&nbsp;containsSpecialCharacter(java.lang.String&nbsp;ldapName)</pre>\n</li>\n</ul>\n<a name=\"createAlias-java.lang.String-\">\n<!--   -->\n</a>\n<ul class=\"blockList\">\n<li class=\"blockList\">\n<h4>createAlias</h4>\n<pre>public static&nbsp;java.lang.String&nbsp;createAlias(java.lang.String&nbsp;ldapName)</pre>\n</li>\n</ul>\n<a name=\"escape-java.lang.String-java.lang.String-\">\n<!--   -->\n</a>\n<ul class=\"blockList\">\n<li class=\"blockList\">\n<h4>escape</h4>\n<pre>public static&nbsp;java.lang.String&nbsp;escape(java.lang.String&nbsp;sourceStr,\n                                      java.lang.String&nbsp;escapeChar)</pre>\n<div class=\"block\">Returns the String after escaping.</div>\n<dl>\n<dt><span class=\"paramLabel\">Parameters:</span></dt>\n<dd><code>sourceStr</code> - a String to escape</dd>\n<dd><code>escapeChar</code> - a escape character</dd>\n<dt><span class=\"returnLabel\">Returns:</span></dt>\n<dd>the String with the characters escaped.</dd>\n</dl>\n</li>\n</ul>\n<a name=\"unEscape-java.lang.String-\">\n<!--   -->\n</a>\n<ul class=\"blockList\">\n<li class=\"blockList\">\n<h4>unEscape</h4>\n<pre>public static&nbsp;java.lang.String&nbsp;unEscape(java.lang.String&nbsp;sourceStr)</pre>\n<div class=\"block\">Returns the String after unescaping any escaped characters.</div>\n<dl>\n<dt><span class=\"paramLabel\">Parameters:</span></dt>\n<dd><code>rdn</code> - the RDN to unescape</dd>\n<dt><span class=\"returnLabel\">Returns:</span></dt>\n<dd>the unescaped RDN.</dd>\n</dl>\n</li>\n</ul>\n<a name=\"unEscape-java.lang.String-char-\">\n<!--   -->\n</a>\n<ul class=\"blockList\">\n<li class=\"blockList\">\n<h4>unEscape</h4>\n<pre>public static&nbsp;java.lang.String&nbsp;unEscape(java.lang.String&nbsp;sourceStr,\n                                        char&nbsp;char2Unescape)</pre>\n</li>\n</ul>\n<a name=\"processSpecialChars-java.lang.String-\">\n<!--   -->\n</a>\n<ul class=\"blockList\">\n<li class=\"blockList\">\n<h4>processSpecialChars</h4>\n<pre>public static&nbsp;java.lang.String&nbsp;processSpecialChars(java.lang.String&nbsp;fValue)</pre>\n<div class=\"block\">Returns the String after replacing special characters(in hex) with\n corresponding ascii characters. reverse method : SpecialCharsToHex(String\n fValue)</div>\n<dl>\n<dt><span class=\"paramLabel\">Parameters:</span></dt>\n<dd><code>fValue</code> - value with hexa character to unescape</dd>\n<dt><span class=\"returnLabel\">Returns:</span></dt>\n<dd>the unescaped value.</dd>\n</dl>\n</li>\n</ul>\n<a name=\"SpecialCharsToHex-java.lang.String-\">\n<!--   -->\n</a>\n<ul class=\"blockList\">\n<li class=\"blockList\">\n<h4>SpecialCharsToHex</h4>\n<pre>public static final&nbsp;java.lang.String&nbsp;SpecialCharsToHex(java.lang.String&nbsp;filter)</pre>\n<div class=\"block\">Returns the String after replacing special characters(in hex) with\n corresponding ascii characters (for search filter). Reverse method :\n processSpecialChars(String fValue)</div>\n<dl>\n<dt><span class=\"paramLabel\">Parameters:</span></dt>\n<dd><code>fValue</code> - value with characters to escape with hexa</dd>\n<dt><span class=\"returnLabel\">Returns:</span></dt>\n<dd>the escaped value.</dd>\n</dl>\n</li>\n</ul>\n<a name=\"removeExtraBraces-java.lang.String-\">\n<!--   -->\n</a>\n<ul class=\"blockList\">\n<li class=\"blockList\">\n<h4>removeExtraBraces</h4>\n<pre>public static&nbsp;java.lang.String&nbsp;removeExtraBraces(java.lang.String&nbsp;rdnValue)</pre>\n<div class=\"block\">Removes extra braces from a string value.</div>\n</li>\n</ul>\n<a name=\"occurenceOf-java.lang.String-java.lang.String-\">\n<!--   -->\n</a>\n<ul class=\"blockList\">\n<li class=\"blockList\">\n<h4>occurenceOf</h4>\n<pre>public static&nbsp;int&nbsp;occurenceOf(java.lang.String&nbsp;sourceStr,\n                              java.lang.String&nbsp;targetStr)</pre>\n</li>\n</ul>\n<a name=\"contains-java.lang.String-java.lang.String-\">\n<!--   -->\n</a>\n<ul class=\"blockList\">\n<li class=\"blockList\">\n<h4>contains</h4>\n<pre>public static&nbsp;boolean&nbsp;contains(java.lang.String&nbsp;sourceStr,\n                               java.lang.String&nbsp;targetStr)</pre>\n</li>\n</ul>\n<a name=\"prepareBinary-java.lang.String-java.lang.String-\">\n<!--   -->\n</a>\n<ul class=\"blockList\">\n<li class=\"blockList\">\n<h4>prepareBinary</h4>\n<pre>public static&nbsp;java.lang.String&nbsp;prepareBinary(java.lang.String&nbsp;attrType,\n                                             java.lang.String&nbsp;attrValue)</pre>\n</li>\n</ul>\n<a name=\"encloseWithQuotes-java.lang.String-\">\n<!--   -->\n</a>\n<ul class=\"blockList\">\n<li class=\"blockList\">\n<h4>encloseWithQuotes</h4>\n<pre>public static&nbsp;java.lang.String&nbsp;encloseWithQuotes(java.lang.String&nbsp;text)</pre>\n<div class=\"block\">Replaces all single quotes(') with double quotes (\"). This method is useful\n when dynamically building SQL statements.</div>\n<dl>\n<dt><span class=\"paramLabel\">Parameters:</span></dt>\n<dd><code>text</code> - String to check for single quotes</dd>\n<dt><span class=\"returnLabel\">Returns:</span></dt>\n<dd>String after converting single quotes to double quotes</dd>\n</dl>\n</li>\n</ul>\n<a name=\"formatAsSqlValueContent-java.lang.String-\">\n<!--   -->\n</a>\n<ul class=\"blockList\">\n<li class=\"blockList\">\n<h4>formatAsSqlValueContent</h4>\n<pre>public static&nbsp;java.lang.String&nbsp;formatAsSqlValueContent(java.lang.String&nbsp;value)</pre>\n<div class=\"block\">double quotes.</div>\n<dl>\n<dt><span class=\"paramLabel\">Parameters:</span></dt>\n<dd><code>value</code> - </dd>\n<dt><span class=\"returnLabel\">Returns:</span></dt>\n</dl>\n</li>\n</ul>\n<a name=\"replaceFirstOccurenceListWithValue-java.lang.String-java.util.List-java.lang.String-\">\n<!--   -->\n</a>\n<ul class=\"blockList\">\n<li class=\"blockList\">\n<h4>replaceFirstOccurenceListWithValue</h4>\n<pre>public static&nbsp;java.lang.String&nbsp;replaceFirstOccurenceListWithValue(java.lang.String&nbsp;str,\n                                                                  java.util.List&nbsp;listOfValueToReplace,\n                                                                  java.lang.String&nbsp;newValue)</pre>\n<div class=\"block\">relace each value in the list for</div>\n<dl>\n<dt><span class=\"paramLabel\">Parameters:</span></dt>\n<dd><code>str</code> - </dd>\n<dd><code>listOfValueToReplace</code> - </dd>\n<dd><code>newValue</code> - </dd>\n<dt><span class=\"returnLabel\">Returns:</span></dt>\n</dl>\n</li>\n</ul>\n<a name=\"replaceAll-java.lang.String-java.lang.String-java.lang.String-\">\n<!--   -->\n</a>\n<ul class=\"blockList\">\n<li class=\"blockList\">\n<h4>replaceAll</h4>\n<pre>public static&nbsp;java.lang.String&nbsp;replaceAll(java.lang.String&nbsp;str,\n                                          java.lang.String&nbsp;toFind,\n                                          java.lang.String&nbsp;toReplaceWith)</pre>\n<div class=\"block\">faster than String.replace(...)</div>\n<dl>\n<dt><span class=\"paramLabel\">Parameters:</span></dt>\n<dd><code>str</code> - </dd>\n<dd><code>toFind</code> - </dd>\n<dd><code>toReplaceWith</code> - </dd>\n<dt><span class=\"returnLabel\">Returns:</span></dt>\n</dl>\n</li>\n</ul>\n<a name=\"replaceAll-java.lang.String-java.lang.String-java.lang.String-boolean-\">\n<!--   -->\n</a>\n<ul class=\"blockList\">\n<li class=\"blockList\">\n<h4>replaceAll</h4>\n<pre>public static&nbsp;java.lang.String&nbsp;replaceAll(java.lang.String&nbsp;str,\n                                          java.lang.String&nbsp;toFind,\n                                          java.lang.String&nbsp;toReplaceWith,\n                                          boolean&nbsp;ignorecase)</pre>\n<div class=\"block\">faster than String.replace(...)</div>\n<dl>\n<dt><span class=\"paramLabel\">Parameters:</span></dt>\n<dd><code>str</code> - </dd>\n<dd><code>toFind</code> - </dd>\n<dd><code>toReplaceWith</code> - </dd>\n<dt><span class=\"returnLabel\">Returns:</span></dt>\n</dl>\n</li>\n</ul>\n<a name=\"replaceAll-java.lang.String-java.util.Map-\">\n<!--   -->\n</a>\n<ul class=\"blockList\">\n<li class=\"blockList\">\n<h4>replaceAll</h4>\n<pre>public static&nbsp;java.lang.String&nbsp;replaceAll(java.lang.String&nbsp;str,\n                                          java.util.Map&nbsp;mapKToFindVToReplace)</pre>\n<div class=\"block\">faster than String.replace(...)</div>\n<dl>\n<dt><span class=\"paramLabel\">Parameters:</span></dt>\n<dd><code>str</code> - </dd>\n<dd><code>toFind</code> - </dd>\n<dd><code>toReplaceWith</code> - </dd>\n<dt><span class=\"returnLabel\">Returns:</span></dt>\n</dl>\n</li>\n</ul>\n<a name=\"split-java.lang.String-java.lang.String-\">\n<!--   -->\n</a>\n<ul class=\"blockList\">\n<li class=\"blockList\">\n<h4>split</h4>\n<pre>public static&nbsp;java.lang.String[]&nbsp;split(java.lang.String&nbsp;str,\n                                       java.lang.String&nbsp;delim)</pre>\n<div class=\"block\">explode str in a array using delim str provided. contrary to String.split()\n this method doesnt use regex (Pattern.compile()). On average 5x faster than\n String.split(). use this method when not using regex for parsing array.</div>\n<dl>\n<dt><span class=\"paramLabel\">Parameters:</span></dt>\n<dd><code>str</code> - </dd>\n<dd><code>delim</code> - </dd>\n<dt><span class=\"returnLabel\">Returns:</span></dt>\n</dl>\n</li>\n</ul>\n<a name=\"split-java.lang.String-char-\">\n<!--   -->\n</a>\n<ul class=\"blockList\">\n<li class=\"blockList\">\n<h4>split</h4>\n<pre>public static&nbsp;java.lang.String[]&nbsp;split(java.lang.String&nbsp;str,\n                                       char&nbsp;delim)</pre>\n<div class=\"block\">explode str in a array using delim str provided. contrary to String.split()\n this method doesnt use regex (Pattern.compile()). On average 5x faster than\n String.split(). use this method when not using regex for parsing array.</div>\n<dl>\n<dt><span class=\"paramLabel\">Parameters:</span></dt>\n<dd><code>str</code> - </dd>\n<dd><code>delim</code> - </dd>\n<dt><span class=\"returnLabel\">Returns:</span></dt>\n</dl>\n</li>\n</ul>\n<a name=\"splitEscaped-java.lang.String-char-\">\n<!--   -->\n</a>\n<ul class=\"blockList\">\n<li class=\"blockList\">\n<h4>splitEscaped</h4>\n<pre>public static&nbsp;java.lang.String[]&nbsp;splitEscaped(java.lang.String&nbsp;str,\n                                              char&nbsp;delim)</pre>\n<div class=\"block\">explode str in a array using delim str provided. contrary to String.split()\n this method doesnt use regex (Pattern.compile()). On average 5x faster than\n String.split(). use this method when not using regex for parsing array.</div>\n<dl>\n<dt><span class=\"paramLabel\">Parameters:</span></dt>\n<dd><code>str</code> - </dd>\n<dd><code>delim</code> - </dd>\n<dt><span class=\"returnLabel\">Returns:</span></dt>\n</dl>\n</li>\n</ul>\n<a name=\"split-java.lang.String-java.lang.String-boolean-\">\n<!--   -->\n</a>\n<ul class=\"blockList\">\n<li class=\"blockList\">\n<h4>split</h4>\n<pre>public static&nbsp;java.lang.String[]&nbsp;split(java.lang.String&nbsp;str,\n                                       java.lang.String&nbsp;delim,\n                                       boolean&nbsp;doNotSplitIfEscaped)</pre>\n<div class=\"block\">explode str in a array using delim str provided. contrary to String.split()\n this method doesnt use regex (Pattern.compile()). On average 5x faster than\n String.split(). use this method when not using regex for parsing array.</div>\n<dl>\n<dt><span class=\"paramLabel\">Parameters:</span></dt>\n<dd><code>str</code> - </dd>\n<dd><code>delim</code> - </dd>\n<dd><code>doNotSplitIfEscaped</code> - do not split of delim is escaped (only for delim\n                            size =1 char)</dd>\n<dt><span class=\"returnLabel\">Returns:</span></dt>\n</dl>\n</li>\n</ul>\n<a name=\"indexOfRedo-java.lang.String-java.lang.String-int-\">\n<!--   -->\n</a>\n<ul class=\"blockList\">\n<li class=\"blockList\">\n<h4>indexOfRedo</h4>\n<pre>public static&nbsp;int&nbsp;indexOfRedo(java.lang.String&nbsp;s,\n                              java.lang.String&nbsp;searched,\n                              int&nbsp;nbOccurs)</pre>\n<div class=\"block\">return index of searched string after doing nb Occurs</div>\n<dl>\n<dt><span class=\"paramLabel\">Parameters:</span></dt>\n<dd><code>s</code> - </dd>\n<dd><code>nbRedo</code> - </dd>\n<dt><span class=\"returnLabel\">Returns:</span></dt>\n</dl>\n</li>\n</ul>\n<a name=\"indexOfRedo-java.lang.String-java.lang.String-int-int-\">\n<!--   -->\n</a>\n<ul class=\"blockList\">\n<li class=\"blockList\">\n<h4>indexOfRedo</h4>\n<pre>public static&nbsp;int&nbsp;indexOfRedo(java.lang.String&nbsp;s,\n                              java.lang.String&nbsp;searched,\n                              int&nbsp;startInt,\n                              int&nbsp;nbOccurs)</pre>\n<div class=\"block\">return index of searched string after doing nb Occurs</div>\n<dl>\n<dt><span class=\"paramLabel\">Parameters:</span></dt>\n<dd><code>s</code> - </dd>\n<dd><code>startInt</code> - </dd>\n<dd><code>nbRedo</code> - </dd>\n<dt><span class=\"returnLabel\">Returns:</span></dt>\n</dl>\n</li>\n</ul>\n<a name=\"indexOfNotEscaped-java.lang.String-char-\">\n<!--   -->\n</a>\n<ul class=\"blockList\">\n<li class=\"blockList\">\n<h4>indexOfNotEscaped</h4>\n<pre>public static&nbsp;int&nbsp;indexOfNotEscaped(java.lang.String&nbsp;s,\n                                    char&nbsp;c)</pre>\n<div class=\"block\">return index of char not escaped</div>\n<dl>\n<dt><span class=\"paramLabel\">Parameters:</span></dt>\n<dd><code>s</code> - </dd>\n<dd><code>c</code> - </dd>\n<dt><span class=\"returnLabel\">Returns:</span></dt>\n</dl>\n</li>\n</ul>\n<a name=\"indexOfNotEscaped-java.lang.String-char-int-\">\n<!--   -->\n</a>\n<ul class=\"blockList\">\n<li class=\"blockList\">\n<h4>indexOfNotEscaped</h4>\n<pre>public static&nbsp;int&nbsp;indexOfNotEscaped(java.lang.String&nbsp;s,\n                                    char&nbsp;c,\n                                    int&nbsp;fromIndex)</pre>\n<div class=\"block\">return index of char not escaped</div>\n<dl>\n<dt><span class=\"paramLabel\">Parameters:</span></dt>\n<dd><code>s</code> - </dd>\n<dd><code>c</code> - </dd>\n<dt><span class=\"returnLabel\">Returns:</span></dt>\n</dl>\n</li>\n</ul>\n<a name=\"indexOfNotQuoted-java.lang.String-java.lang.String-char-int-boolean-\">\n<!--   -->\n</a>\n<ul class=\"blockList\">\n<li class=\"blockList\">\n<h4>indexOfNotQuoted</h4>\n<pre>public static&nbsp;int&nbsp;indexOfNotQuoted(java.lang.String&nbsp;s,\n                                   java.lang.String&nbsp;toFind,\n                                   char&nbsp;quote,\n                                   int&nbsp;fromIndex,\n                                   boolean&nbsp;ignoreCase)</pre>\n<div class=\"block\">return index of string not quoted</div>\n<dl>\n<dt><span class=\"paramLabel\">Parameters:</span></dt>\n<dd><code>s</code> - </dd>\n<dd><code>toFind</code> - </dd>\n<dd><code>quote</code> - </dd>\n<dd><code>fromIndex</code> - </dd>\n<dt><span class=\"returnLabel\">Returns:</span></dt>\n</dl>\n</li>\n</ul>\n<a name=\"lastIndexOfNotEscaped-java.lang.String-char-\">\n<!--   -->\n</a>\n<ul class=\"blockList\">\n<li class=\"blockList\">\n<h4>lastIndexOfNotEscaped</h4>\n<pre>public static&nbsp;int&nbsp;lastIndexOfNotEscaped(java.lang.String&nbsp;s,\n                                        char&nbsp;c)</pre>\n<div class=\"block\">return last index of char not escaped</div>\n<dl>\n<dt><span class=\"paramLabel\">Parameters:</span></dt>\n<dd><code>s</code> - </dd>\n<dd><code>c</code> - </dd>\n<dt><span class=\"returnLabel\">Returns:</span></dt>\n</dl>\n</li>\n</ul>\n<a name=\"lastIndexOfNotEscaped-java.lang.String-char-int-\">\n<!--   -->\n</a>\n<ul class=\"blockList\">\n<li class=\"blockList\">\n<h4>lastIndexOfNotEscaped</h4>\n<pre>public static&nbsp;int&nbsp;lastIndexOfNotEscaped(java.lang.String&nbsp;s,\n                                        char&nbsp;c,\n                                        int&nbsp;fromIndex)</pre>\n<div class=\"block\">return last index of char not escaped</div>\n<dl>\n<dt><span class=\"paramLabel\">Parameters:</span></dt>\n<dd><code>s</code> - </dd>\n<dd><code>c</code> - </dd>\n<dt><span class=\"returnLabel\">Returns:</span></dt>\n</dl>\n</li>\n</ul>\n<a name=\"isLeter-java.lang.String-\">\n<!--   -->\n</a>\n<ul class=\"blockList\">\n<li class=\"blockList\">\n<h4>isLeter</h4>\n<pre>public static&nbsp;boolean&nbsp;isLeter(java.lang.String&nbsp;value)</pre>\n</li>\n</ul>\n<a name=\"isLeterOrDigit-java.lang.String-\">\n<!--   -->\n</a>\n<ul class=\"blockList\">\n<li class=\"blockList\">\n<h4>isLeterOrDigit</h4>\n<pre>public static&nbsp;boolean&nbsp;isLeterOrDigit(java.lang.String&nbsp;value)</pre>\n</li>\n</ul>\n<a name=\"isLeterOrDigit-char-\">\n<!--   -->\n</a>\n<ul class=\"blockList\">\n<li class=\"blockList\">\n<h4>isLeterOrDigit</h4>\n<pre>public static&nbsp;boolean&nbsp;isLeterOrDigit(char&nbsp;c)</pre>\n</li>\n</ul>\n<a name=\"isDigit-java.lang.String-\">\n<!--   -->\n</a>\n<ul class=\"blockList\">\n<li class=\"blockList\">\n<h4>isDigit</h4>\n<pre>public static&nbsp;boolean&nbsp;isDigit(java.lang.String&nbsp;value)</pre>\n</li>\n</ul>\n<a name=\"leftTrim-java.lang.String-\">\n<!--   -->\n</a>\n<ul class=\"blockList\">\n<li class=\"blockList\">\n<h4>leftTrim</h4>\n<pre>public static&nbsp;java.lang.String&nbsp;leftTrim(java.lang.String&nbsp;value)</pre>\n</li>\n</ul>\n<a name=\"rightTrim-java.lang.String-\">\n<!--   -->\n</a>\n<ul class=\"blockList\">\n<li class=\"blockList\">\n<h4>rightTrim</h4>\n<pre>public static&nbsp;java.lang.String&nbsp;rightTrim(java.lang.String&nbsp;value)</pre>\n</li>\n</ul>\n<a name=\"rdnValueTrim-java.lang.String-\">\n<!--   -->\n</a>\n<ul class=\"blockList\">\n<li class=\"blockList\">\n<h4>rdnValueTrim</h4>\n<pre>public static&nbsp;java.lang.String&nbsp;rdnValueTrim(java.lang.String&nbsp;rdnValue)</pre>\n<div class=\"block\">Added[ZENG@12-23-2010]: to trim the value of rdn \" ABC \" --> \"ABC\" \"\\\\ ABC\"\n --> \"\\\\ ABC\" \" \\\\ ABC\" --> \"\\\\ ABC\" \"ABC\\\\ \" --> \"ABC\\\\ \" \"ABC\\\\ \" --> \"ABC\\\\\n \" \" \\\\ ABC\\\\ \\\\ \" --> \"\\\\ ABC \\\\ \\\\ \" To trim unprotected (based on LDAP)\n leading and trailing spaces</div>\n<dl>\n<dt><span class=\"paramLabel\">Parameters:</span></dt>\n<dd><code>rdnValue</code> - </dd>\n<dt><span class=\"returnLabel\">Returns:</span></dt>\n</dl>\n</li>\n</ul>\n<a name=\"protectWithBracketIfNeeded-java.lang.String-\">\n<!--   -->\n</a>\n<ul class=\"blockList\">\n<li class=\"blockList\">\n<h4>protectWithBracketIfNeeded</h4>\n<pre>public static&nbsp;java.lang.String&nbsp;protectWithBracketIfNeeded(java.lang.String&nbsp;s)</pre>\n<div class=\"block\">protect string with bracket if needed. trim if needed.</div>\n<dl>\n<dt><span class=\"paramLabel\">Parameters:</span></dt>\n<dd><code>s</code> - </dd>\n<dt><span class=\"returnLabel\">Returns:</span></dt>\n</dl>\n</li>\n</ul>\n<a name=\"removeBracketArround-java.lang.String-\">\n<!--   -->\n</a>\n<ul class=\"blockList\">\n<li class=\"blockList\">\n<h4>removeBracketArround</h4>\n<pre>public static&nbsp;java.lang.String&nbsp;removeBracketArround(java.lang.String&nbsp;s)</pre>\n<div class=\"block\">remove bracket arround and trim() check that bracket could be removed before\n removing.</div>\n<dl>\n<dt><span class=\"paramLabel\">Parameters:</span></dt>\n<dd><code>s</code> - </dd>\n<dt><span class=\"returnLabel\">Returns:</span></dt>\n</dl>\n</li>\n</ul>\n<a name=\"removeBracketsArroundWithException-java.lang.String-\">\n<!--   -->\n</a>\n<ul class=\"blockList\">\n<li class=\"blockList\">\n<h4>removeBracketsArroundWithException</h4>\n<pre>public static&nbsp;java.lang.String&nbsp;removeBracketsArroundWithException(java.lang.String&nbsp;s)\n                                                           throws java.lang.Exception</pre>\n<div class=\"block\">remove bracket arround and trim() check that bracket could be removed before\n removing.</div>\n<dl>\n<dt><span class=\"paramLabel\">Parameters:</span></dt>\n<dd><code>s</code> - </dd>\n<dt><span class=\"returnLabel\">Returns:</span></dt>\n<dt><span class=\"throwsLabel\">Throws:</span></dt>\n<dd><code>java.lang.Exception</code></dd>\n</dl>\n</li>\n</ul>\n<a name=\"optimizeBracket-java.lang.String-\">\n<!--   -->\n</a>\n<ul class=\"blockList\">\n<li class=\"blockList\">\n<h4>optimizeBracket</h4>\n<pre>public static&nbsp;java.lang.String&nbsp;optimizeBracket(java.lang.String&nbsp;s)</pre>\n<div class=\"block\">trim space and bracket extra bracket for string\n \n <pre>\n \"(test)\" -> \"(test)\"\n \"((test))\" -> \"(test)\"\n \"( ( (test) ))\" -> \"(test)\"\n \"(test1)(test2)\" -> \"(test1)(test2)\"\n \"  (   (test1)(test2))\" -> \"((test1)(test2))\"\n \"  ( ((  (test1)(test2) )) )\" -> \"((test1)(test2))\"\n \"  ( ((  (test1)(te((a))st2) )) )\" -> \"((test1)(te(a)st2))\"\n </pre></div>\n<dl>\n<dt><span class=\"paramLabel\">Parameters:</span></dt>\n<dd><code>s</code> - </dd>\n<dt><span class=\"returnLabel\">Returns:</span></dt>\n</dl>\n</li>\n</ul>\n<a name=\"findStringIgnoreTrim-java.lang.String-java.lang.String-\">\n<!--   -->\n</a>\n<ul class=\"blockList\">\n<li class=\"blockList\">\n<h4>findStringIgnoreTrim</h4>\n<pre>public static&nbsp;java.lang.String&nbsp;findStringIgnoreTrim(java.lang.String&nbsp;originalString,\n                                                    java.lang.String&nbsp;stringToFind)</pre>\n<div class=\"block\">find stringToFind in the originalString returning the respective subset of originalString\n that matches with stringToFind under the rules of isIsolatedOrSpaceBeforeAndAfter\n isolated referring to being a single word in a string and/or having no other character(s)\n attached to it (before and after)</div>\n<dl>\n<dt><span class=\"paramLabel\">Parameters:</span></dt>\n<dd><code>originalString</code> - </dd>\n<dd><code>stringToFind</code> - </dd>\n<dt><span class=\"returnLabel\">Returns:</span></dt>\n<dd>exact String found (with space as found) or null if not found.</dd>\n</dl>\n</li>\n</ul>\n<a name=\"findStringIgnoreTrim-java.lang.String-java.lang.String-boolean-\">\n<!--   -->\n</a>\n<ul class=\"blockList\">\n<li class=\"blockList\">\n<h4>findStringIgnoreTrim</h4>\n<pre>public static&nbsp;java.lang.String&nbsp;findStringIgnoreTrim(java.lang.String&nbsp;originalString,\n                                                    java.lang.String&nbsp;stringToFind,\n                                                    boolean&nbsp;isIsolatedOrSpaceBeforeAndAfter)</pre>\n<dl>\n<dt><span class=\"paramLabel\">Parameters:</span></dt>\n<dd><code>originalString</code> - </dd>\n<dd><code>isIsolatedOrSpaceBeforeAndAfter</code> - </dd>\n<dt><span class=\"returnLabel\">Returns:</span></dt>\n<dd>exact String found (with space as found) or null if not found.</dd>\n</dl>\n</li>\n</ul>\n<a name=\"cleanBracket-java.lang.String-\">\n<!--   -->\n</a>\n<ul class=\"blockList\">\n<li class=\"blockList\">\n<h4>cleanBracket</h4>\n<pre>public static&nbsp;java.lang.String&nbsp;cleanBracket(java.lang.String&nbsp;s)</pre>\n<div class=\"block\">remove bracket () around string</div>\n<dl>\n<dt><span class=\"paramLabel\">Parameters:</span></dt>\n<dd><code>s</code> - </dd>\n<dt><span class=\"returnLabel\">Returns:</span></dt>\n</dl>\n</li>\n</ul>\n<a name=\"cleanSquareBracket-java.lang.String-\">\n<!--   -->\n</a>\n<ul class=\"blockList\">\n<li class=\"blockList\">\n<h4>cleanSquareBracket</h4>\n<pre>public static&nbsp;java.lang.String&nbsp;cleanSquareBracket(java.lang.String&nbsp;s)</pre>\n<div class=\"block\">remove bracket [] around string</div>\n<dl>\n<dt><span class=\"paramLabel\">Parameters:</span></dt>\n<dd><code>s</code> - </dd>\n<dt><span class=\"returnLabel\">Returns:</span></dt>\n</dl>\n</li>\n</ul>\n<a name=\"cleanString-java.lang.String-char-char-\">\n<!--   -->\n</a>\n<ul class=\"blockList\">\n<li class=\"blockList\">\n<h4>cleanString</h4>\n<pre>public static&nbsp;java.lang.String&nbsp;cleanString(java.lang.String&nbsp;s,\n                                           char&nbsp;startCharToRemove,\n                                           char&nbsp;endCharToRemove)</pre>\n<div class=\"block\">clean char at beginning and end of str.</div>\n<dl>\n<dt><span class=\"paramLabel\">Parameters:</span></dt>\n<dd><code>s</code> - </dd>\n<dd><code>startCharToRemove</code> - </dd>\n<dd><code>endCharToRemove</code> - </dd>\n<dt><span class=\"returnLabel\">Returns:</span></dt>\n</dl>\n</li>\n</ul>\n<a name=\"equalsIgnoreCaseStartSupport-java.lang.String-java.lang.String-\">\n<!--   -->\n</a>\n<ul class=\"blockList\">\n<li class=\"blockList\">\n<h4>equalsIgnoreCaseStartSupport</h4>\n<pre>public static&nbsp;boolean&nbsp;equalsIgnoreCaseStartSupport(java.lang.String&nbsp;strWstar,\n                                                   java.lang.String&nbsp;str)</pre>\n<div class=\"block\">return true if str matches strWstar containing '*' as wild card.</div>\n<dl>\n<dt><span class=\"paramLabel\">Parameters:</span></dt>\n<dd><code>strWstar</code> - </dd>\n<dd><code>str</code> - </dd>\n<dt><span class=\"returnLabel\">Returns:</span></dt>\n</dl>\n</li>\n</ul>\n<a name=\"removeCharAfter-java.lang.String-char-\">\n<!--   -->\n</a>\n<ul class=\"blockList\">\n<li class=\"blockList\">\n<h4>removeCharAfter</h4>\n<pre>public static&nbsp;java.lang.String&nbsp;removeCharAfter(java.lang.String&nbsp;s,\n                                               char&nbsp;c)</pre>\n<div class=\"block\">return String after removing chars after last index of c To remove extension,\n call removeCharAfter(s,'.');</div>\n<dl>\n<dt><span class=\"paramLabel\">Parameters:</span></dt>\n<dd><code>s</code> - </dd>\n<dd><code>c</code> - </dd>\n<dt><span class=\"returnLabel\">Returns:</span></dt>\n</dl>\n</li>\n</ul>\n<a name=\"removeChar-java.lang.String-char-\">\n<!--   -->\n</a>\n<ul class=\"blockList\">\n<li class=\"blockList\">\n<h4>removeChar</h4>\n<pre>public static&nbsp;java.lang.String&nbsp;removeChar(java.lang.String&nbsp;s,\n                                          char&nbsp;c)</pre>\n</li>\n</ul>\n<a name=\"toCollection-java.lang.String-java.lang.String-\">\n<!--   -->\n</a>\n<ul class=\"blockList\">\n<li class=\"blockList\">\n<h4>toCollection</h4>\n<pre>public static&nbsp;java.util.Collection&lt;java.lang.String&gt;&nbsp;toCollection(java.lang.String&nbsp;strToParse,\n                                                                  java.lang.String&nbsp;separators)</pre>\n</li>\n</ul>\n<a name=\"toString-java.util.Collection-java.lang.String-\">\n<!--   -->\n</a>\n<ul class=\"blockList\">\n<li class=\"blockList\">\n<h4>toString</h4>\n<pre>public static&nbsp;java.lang.String&nbsp;toString(java.util.Collection&lt;java.lang.String&gt;&nbsp;listToSerialize,\n                                        java.lang.String&nbsp;separators)</pre>\n</li>\n</ul>\n<a name=\"quoteName-java.lang.String-int-\">\n<!--   -->\n</a>\n<ul class=\"blockList\">\n<li class=\"blockList\">\n<h4>quoteName</h4>\n<pre>public static&nbsp;java.lang.String&nbsp;quoteName(java.lang.String&nbsp;name,\n                                         int&nbsp;databaseType)</pre>\n</li>\n</ul>\n<a name=\"quote-java.lang.String-int-\">\n<!--   -->\n</a>\n<ul class=\"blockList\">\n<li class=\"blockList\">\n<h4>quote</h4>\n<pre>public static&nbsp;java.lang.String&nbsp;quote(java.lang.String&nbsp;name,\n                                     int&nbsp;databaseType)</pre>\n</li>\n</ul>\n<a name=\"isQuoteRequired-java.lang.String-\">\n<!--   -->\n</a>\n<ul class=\"blockList\">\n<li class=\"blockList\">\n<h4>isQuoteRequired</h4>\n<pre>public static&nbsp;boolean&nbsp;isQuoteRequired(java.lang.String&nbsp;name)</pre>\n</li>\n</ul>\n<a name=\"isQuoteRequired-java.lang.String-int-\">\n<!--   -->\n</a>\n<ul class=\"blockList\">\n<li class=\"blockList\">\n<h4>isQuoteRequired</h4>\n<pre>public static&nbsp;boolean&nbsp;isQuoteRequired(java.lang.String&nbsp;name,\n                                      int&nbsp;databaseType)</pre>\n</li>\n</ul>\n<a name=\"quoteNameWithoutSchema-java.lang.String-int-\">\n<!--   -->\n</a>\n<ul class=\"blockList\">\n<li class=\"blockList\">\n<h4>quoteNameWithoutSchema</h4>\n<pre>public static&nbsp;java.lang.String&nbsp;quoteNameWithoutSchema(java.lang.String&nbsp;name,\n                                                      int&nbsp;databaseType)</pre>\n</li>\n</ul>\n<a name=\"main-java.lang.String:A-\">\n<!--   -->\n</a>\n<ul class=\"blockList\">\n<li class=\"blockList\">\n<h4>main</h4>\n<pre>public static&nbsp;void&nbsp;main(java.lang.String[]&nbsp;argv)</pre>\n</li>\n</ul>\n<a name=\"isPrintableString-java.lang.String-\">\n<!--   -->\n</a>\n<ul class=\"blockList\">\n<li class=\"blockList\">\n<h4>isPrintableString</h4>\n<pre>public static&nbsp;boolean&nbsp;isPrintableString(java.lang.String&nbsp;s)</pre>\n</li>\n</ul>\n<a name=\"isPrintableChar-char-\">\n<!--   -->\n</a>\n<ul class=\"blockList\">\n<li class=\"blockList\">\n<h4>isPrintableChar</h4>\n<pre>public static&nbsp;boolean&nbsp;isPrintableChar(char&nbsp;c)</pre>\n</li>\n</ul>\n<a name=\"getBytesUtf16LE-java.lang.String-\">\n<!--   -->\n</a>\n<ul class=\"blockList\">\n<li class=\"blockList\">\n<h4>getBytesUtf16LE</h4>\n<pre>public static&nbsp;byte[]&nbsp;getBytesUtf16LE(java.lang.String&nbsp;s)</pre>\n<div class=\"block\">Get byte[] representation of string using UTF-16LE encoding, and if it fails\n (and it should never fail because UTF-16LE is supported charset), use default\n encoding. If s is null or empty, returns byte[0]</div>\n<dl>\n<dt><span class=\"paramLabel\">Parameters:</span></dt>\n<dd><code>s</code> - </dd>\n<dt><span class=\"returnLabel\">Returns:</span></dt>\n</dl>\n</li>\n</ul>\n<a name=\"getBytesUtf8-java.lang.String-\">\n<!--   -->\n</a>\n<ul class=\"blockList\">\n<li class=\"blockList\">\n<h4>getBytesUtf8</h4>\n<pre>public static&nbsp;byte[]&nbsp;getBytesUtf8(java.lang.String&nbsp;s)</pre>\n<div class=\"block\">Get byte[] representation of string using UTF-8 encoding, and if it fails\n (and it should never fail because UTF-8 is supported charset), use default\n encoding. If s is null or empty, returns byte[0]</div>\n<dl>\n<dt><span class=\"paramLabel\">Parameters:</span></dt>\n<dd><code>s</code> - </dd>\n<dt><span class=\"returnLabel\">Returns:</span></dt>\n</dl>\n</li>\n</ul>\n<a name=\"utf8Length-java.lang.String-\">\n<!--   -->\n</a>\n<ul class=\"blockList\">\n<li class=\"blockList\">\n<h4>utf8Length</h4>\n<pre>public static&nbsp;int&nbsp;utf8Length(java.lang.String&nbsp;string)</pre>\n<div class=\"block\">For the given string, returns the number of UTF-8 bytes required to encode\n the string.</div>\n<dl>\n<dt><span class=\"paramLabel\">Parameters:</span></dt>\n<dd><code>string</code> - text to encode</dd>\n<dt><span class=\"returnLabel\">Returns:</span></dt>\n<dd>number of UTF-8 bytes required to encode</dd>\n</dl>\n</li>\n</ul>\n<a name=\"humanReadableByteCount-long-\">\n<!--   -->\n</a>\n<ul class=\"blockList\">\n<li class=\"blockList\">\n<h4>humanReadableByteCount</h4>\n<pre>public static&nbsp;java.lang.String&nbsp;humanReadableByteCount(long&nbsp;bytes)</pre>\n</li>\n</ul>\n<a name=\"isAsciiPrintable-java.lang.String-\">\n<!--   -->\n</a>\n<ul class=\"blockList\">\n<li class=\"blockList\">\n<h4>isAsciiPrintable</h4>\n<pre>public static&nbsp;boolean&nbsp;isAsciiPrintable(java.lang.String&nbsp;s)</pre>\n</li>\n</ul>\n<a name=\"replaceRecursively-java.lang.String-java.lang.String-java.lang.String-\">\n<!--   -->\n</a>\n<ul class=\"blockList\">\n<li class=\"blockList\">\n<h4>replaceRecursively</h4>\n<pre>public static&nbsp;java.lang.String&nbsp;replaceRecursively(java.lang.String&nbsp;s,\n                                                  java.lang.String&nbsp;old,\n                                                  java.lang.String&nbsp;replacement)</pre>\n</li>\n</ul>\n<a name=\"hidingString-java.lang.String-\">\n<!--   -->\n</a>\n<ul class=\"blockList\">\n<li class=\"blockList\">\n<h4>hidingString</h4>\n<pre>public static&nbsp;java.lang.String&nbsp;hidingString(java.lang.String&nbsp;s)</pre>\n</li>\n</ul>\n<a name=\"toFullLengthString-java.lang.String-\">\n<!--   -->\n</a>\n<ul class=\"blockList\">\n<li class=\"blockList\">\n<h4>toFullLengthString</h4>\n<pre>public static&nbsp;java.lang.String&nbsp;toFullLengthString(java.lang.String&nbsp;numericalString)</pre>\n</li>\n</ul>\n<a name=\"robustQuote-java.lang.String-int-\">\n<!--   -->\n</a>\n<ul class=\"blockListLast\">\n<li class=\"blockList\">\n<h4>robustQuote</h4>\n<pre>public static&nbsp;java.lang.String&nbsp;robustQuote(java.lang.String&nbsp;s,\n                                           int&nbsp;databaseType)</pre>\n<div class=\"block\">Quote s if :\n \n s contains at least one \"not word character\" ( word char = [a-zA-Z0-9_]),\n \n or s has both lower and upper letters,\n \n or if there a special DB case (see isRobustQuoteRequired()).\n \n Quote characters depend on databaseType:\n \n for SQL Server, [ ] are used;\n \n for MySQL, ` is used;\n \n for other cases, \" is used.</div>\n<dl>\n<dt><span class=\"paramLabel\">Parameters:</span></dt>\n<dd><code>s</code> - </dd>\n<dd><code>databaseType</code> - </dd>\n<dt><span class=\"returnLabel\">Returns:</span></dt>\n</dl>\n</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n</div>\n</div>\n<!-- ========= END OF CLASS DATA ========= -->\n<!-- ======= START OF BOTTOM NAVBAR ====== -->\n<div class=\"bottomNav\"><a name=\"navbar.bottom\">\n<!--   -->\n</a>\n<div class=\"skipNav\"><a href=\"#skip.navbar.bottom\" title=\"Skip navigation links\">Skip navigation links</a></div>\n<a name=\"navbar.bottom.firstrow\">\n<!--   -->\n</a>\n<ul class=\"navList\" title=\"Navigation\">\n<li><a href=\"../../../overview-summary.html\">Overview</a></li>\n<li><a href=\"package-summary.html\">Package</a></li>\n<li class=\"navBarCell1Rev\">Class</li>\n<li><a href=\"package-tree.html\">Tree</a></li>\n<li><a href=\"../../../deprecated-list.html\">Deprecated</a></li>\n<li><a href=\"../../../index-all.html\">Index</a></li>\n<li><a href=\"../../../help-doc.html\">Help</a></li>\n</ul>\n</div>\n<div class=\"subNav\">\n<ul class=\"navList\">\n<li><a href=\"../../../com/rli/util/RLIConstants.html\" title=\"class in com.rli.util\"><span class=\"typeNameLink\">Prev&nbsp;Class</span></a></li>\n<li>Next&nbsp;Class</li>\n</ul>\n<ul class=\"navList\">\n<li><a href=\"../../../index.html?com/rli/util/StringOperations.html\" target=\"_top\">Frames</a></li>\n<li><a href=\"StringOperations.html\" target=\"_top\">No&nbsp;Frames</a></li>\n</ul>\n<ul class=\"navList\" id=\"allclasses_navbar_bottom\">\n<li><a href=\"../../../allclasses-noframe.html\">All&nbsp;Classes</a></li>\n</ul>\n<div>\n<script type=\"text/javascript\"><!--\n  allClassesLink = document.getElementById(\"allclasses_navbar_bottom\");\n  if(window==top) {\n    allClassesLink.style.display = \"block\";\n  }\n  else {\n    allClassesLink.style.display = \"none\";\n  }\n  //-->\n</script>\n</div>\n<div>\n<ul class=\"subNavList\">\n<li>Summary:&nbsp;</li>\n<li>Nested&nbsp;|&nbsp;</li>\n<li><a href=\"#field.summary\">Field</a>&nbsp;|&nbsp;</li>\n<li>Constr&nbsp;|&nbsp;</li>\n<li><a href=\"#method.summary\">Method</a></li>\n</ul>\n<ul class=\"subNavList\">\n<li>Detail:&nbsp;</li>\n<li><a href=\"#field.detail\">Field</a>&nbsp;|&nbsp;</li>\n<li>Constr&nbsp;|&nbsp;</li>\n<li><a href=\"#method.detail\">Method</a></li>\n</ul>\n</div>\n<a name=\"skip.navbar.bottom\">\n<!--   -->\n</a></div>\n<!-- ======== END OF BOTTOM NAVBAR ======= -->\n</body>\n</html>\n"}}]},"rootToc":{"fileAbsolutePath":"/home/runner/work/developer-site/developer-site/.cache/gatsby-source-git/r1-saas/home-pages/TOC.md","frontmatter":{"title":"Homepages TOC"},"htmlAst":{"type":"root","children":[{"type":"element","tagName":"ul","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"element","tagName":"a","properties":{"href":""},"children":[{"type":"text","value":"Knowledge"}]}]},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"element","tagName":"a","properties":{"href":"developer.md"},"children":[{"type":"text","value":"Developer"}]}]},{"type":"text","value":"\n"}]}],"data":{"quirksMode":false}}}},"pageContext":{"name":"StringOperations","rootTocRegex":".*/(gatsby-source-git)\\/(r1-saas)\\/(home-pages)\\/(TOC.md)/ig"}},"staticQueryHashes":["2295405308","808649686"],"slicesMap":{}}