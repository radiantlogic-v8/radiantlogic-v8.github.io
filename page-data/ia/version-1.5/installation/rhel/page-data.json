{"componentChunkName":"component---src-templates-base-page-js","path":"/ia/version-1.5/installation/rhel/","result":{"data":{"pageContent":{"html":"<h1 id=\"red-hat-installation\">Red Hat installation</h1>\n<p>Before installing the solution it is necessary to configure the timezone of your instance, this command is to be executed as root:</p>\n\n          <codeblockcopytag>timedatectl set-timezone Europe/Paris</codeblockcopytag>\n          \n<div class=\"gatsby-highlight\" data-language=\"sh\"><pre class=\"language-sh\"><code class=\"language-sh\">timedatectl set-timezone Europe/Paris</code></pre></div>\n<h2 id=\"install-podman\">Install Podman</h2>\n<p>To install podman please refer to podman's official documentation:</p>\n<ul>\n<li><a href=\"https://podman.io/docs/installation\">https://podman.io/docs/installation</a></li>\n</ul>\n<blockquote>\n<p>[!warning] Log out and log back in, to make sure your user gets the permissions to run podman commands</p>\n</blockquote>\n<p>To install podman please run all the following commands as root:</p>\n\n          <codeblockcopytag>dnf -y update\ndnf -y install podman</codeblockcopytag>\n          \n<div class=\"gatsby-highlight\" data-language=\"sh\"><pre class=\"language-sh\"><code class=\"language-sh\">dnf <span class=\"token parameter variable\">-y</span> update\ndnf <span class=\"token parameter variable\">-y</span> <span class=\"token function\">install</span> <span class=\"token function\">podman</span></code></pre></div>\n<p>To run the selfmanaged solution in RHEL using podman it is necessary to install docker compose <a href=\"https://github.com/docker/compose\">https://github.com/docker/compose</a>. The following commands should be installed as root.</p>\n\n          <codeblockcopytag>curl -SL https://github.com/docker/compose/releases/latest/download/docker-compose-linux-x86_64 -o /usr/local/bin/docker-compose\nchmod a+rx /usr/local/bin/docker-compose</codeblockcopytag>\n          \n<div class=\"gatsby-highlight\" data-language=\"sh\"><pre class=\"language-sh\"><code class=\"language-sh\"><span class=\"token function\">curl</span> <span class=\"token parameter variable\">-SL</span> https://github.com/docker/compose/releases/latest/download/docker-compose-linux-x86_64 <span class=\"token parameter variable\">-o</span> /usr/local/bin/docker-compose\n<span class=\"token function\">chmod</span> a+rx /usr/local/bin/docker-compose</code></pre></div>\n<p>To validate the installation of podman and docker compose run the following commands as the standard user (e.g. brainwave):</p>\n\n          <codeblockcopytag>podman --version\ndocker-compose --version</codeblockcopytag>\n          \n<div class=\"gatsby-highlight\" data-language=\"sh\"><pre class=\"language-sh\"><code class=\"language-sh\"><span class=\"token function\">podman</span> <span class=\"token parameter variable\">--version</span>\n<span class=\"token function\">docker-compose</span> <span class=\"token parameter variable\">--version</span></code></pre></div>\n<p>When running podman as a non root user it is necessary to enable the service and the socket for desired user (e.g. brainwave):</p>\n\n          <codeblockcopytag>systemctl enable --now --user podman podman.socket\nsystemctl --user status podman.socket</codeblockcopytag>\n          \n<div class=\"gatsby-highlight\" data-language=\"sh\"><pre class=\"language-sh\"><code class=\"language-sh\">systemctl <span class=\"token builtin class-name\">enable</span> <span class=\"token parameter variable\">--now</span> <span class=\"token parameter variable\">--user</span> <span class=\"token function\">podman</span> podman.socket\nsystemctl <span class=\"token parameter variable\">--user</span> status podman.socket</code></pre></div>\n<blockquote>\n<p>If you get the error when executing the above command please update the environment variables before re-running the commands. See <a href=\"#environment-variables\">Environment variables</a> for more information.</p>\n</blockquote>\n<h3 id=\"red-hat-8-requirements\">Red Hat 8 requirements</h3>\n<p>By default RHEL8 runs on croup-v1, however to run podman rootless in RHEL 8 it is necessary to set <code class=\"language-text\">cgroups V2</code> as the default in the grub. Please execute the following commands as root (see <a href=\"https://access.redhat.com/solutions/6898151\">here</a> for more information):</p>\n\n          <codeblockcopytag>grubby --update-kernel=ALL --args=&quot;systemd.unified_cgroup_hierarchy=1&quot;</codeblockcopytag>\n          \n<div class=\"gatsby-highlight\" data-language=\"sh\"><pre class=\"language-sh\"><code class=\"language-sh\">grubby --update-kernel<span class=\"token operator\">=</span>ALL <span class=\"token parameter variable\">--args</span><span class=\"token operator\">=</span><span class=\"token string\">\"systemd.unified_cgroup_hierarchy=1\"</span></code></pre></div>\n<p>Once the grub is updated it is necessary to reboot the service.</p>\n<p>Once the grub is updated it is necessary to update the configuration of the controllers for the user running podman. The following commands should be updated to correspond to the UID of the owner of the podman socket and be executed as root.</p>\n\n          <codeblockcopytag>mkdir /etc/systemd/system/user-&lt;user UID&gt;.slice.d\nnano /etc/systemd/system/user-&lt;user UID&gt;.slice.d/controllers.conf</codeblockcopytag>\n          \n<div class=\"gatsby-highlight\" data-language=\"sh\"><pre class=\"language-sh\"><code class=\"language-sh\"><span class=\"token function\">mkdir</span> /etc/systemd/system/user-<span class=\"token operator\">&lt;</span>user <span class=\"token environment constant\">UID</span><span class=\"token operator\">></span>.slice.d\n<span class=\"token function\">nano</span> /etc/systemd/system/user-<span class=\"token operator\">&lt;</span>user <span class=\"token environment constant\">UID</span><span class=\"token operator\">></span>.slice.d/controllers.conf</code></pre></div>\n<p>Paste the following in the previously created file:</p>\n\n          <codeblockcopytag>[Slice]\nCPUAccounting=yes\nMemoryAccounting=yes\nTasksAccounting=yes</codeblockcopytag>\n          \n<div class=\"gatsby-highlight\" data-language=\"sh\"><pre class=\"language-sh\"><code class=\"language-sh\"><span class=\"token punctuation\">[</span>Slice<span class=\"token punctuation\">]</span>\n<span class=\"token assign-left variable\">CPUAccounting</span><span class=\"token operator\">=</span>yes\n<span class=\"token assign-left variable\">MemoryAccounting</span><span class=\"token operator\">=</span>yes\n<span class=\"token assign-left variable\">TasksAccounting</span><span class=\"token operator\">=</span>yes</code></pre></div>\n<p>Once all is updated it is necessary to reload the daemon as root:</p>\n\n          <codeblockcopytag>systemctl daemon-reload</codeblockcopytag>\n          \n<div class=\"gatsby-highlight\" data-language=\"sh\"><pre class=\"language-sh\"><code class=\"language-sh\">systemctl daemon-reload</code></pre></div>\n<h3 id=\"podman-requirements\">Podman requirements</h3>\n<p>Install the required package <code class=\"language-text\">netavark</code> as root:</p>\n\n          <codeblockcopytag>dnf install netavark</codeblockcopytag>\n          \n<div class=\"gatsby-highlight\" data-language=\"sh\"><pre class=\"language-sh\"><code class=\"language-sh\">dnf <span class=\"token function\">install</span> netavark</code></pre></div>\n<p>The following configuration changes Podman are required for the service to run. The values are overwritten by the values present in the following files. Please adapt the path to correspond to the user running podman:</p>\n\n          <codeblockcopytag>mkdir /home/&lt;user&gt;/.config/containers\nnano /home/&lt;user&gt;/.config/containers/containers.conf</codeblockcopytag>\n          \n<div class=\"gatsby-highlight\" data-language=\"sh\"><pre class=\"language-sh\"><code class=\"language-sh\"><span class=\"token function\">mkdir</span> /home/<span class=\"token operator\">&lt;</span>user<span class=\"token operator\">></span>/.config/containers\n<span class=\"token function\">nano</span> /home/<span class=\"token operator\">&lt;</span>user<span class=\"token operator\">></span>/.config/containers/containers.conf</code></pre></div>\n<p>Copy the following the values into the newly created file:</p>\n\n          <codeblockcopytag>[containers]\nlog_driver = &quot;journald&quot;\n\n[network]\nnetwork_backend = &quot;netavark&quot;\n\n[engine]\nevents_logger = &quot;journald&quot;</codeblockcopytag>\n          \n<div class=\"gatsby-highlight\" data-language=\"sh\"><pre class=\"language-sh\"><code class=\"language-sh\"><span class=\"token punctuation\">[</span>containers<span class=\"token punctuation\">]</span>\nlog_driver <span class=\"token operator\">=</span> <span class=\"token string\">\"journald\"</span>\n\n<span class=\"token punctuation\">[</span>network<span class=\"token punctuation\">]</span>\nnetwork_backend <span class=\"token operator\">=</span> <span class=\"token string\">\"netavark\"</span>\n\n<span class=\"token punctuation\">[</span>engine<span class=\"token punctuation\">]</span>\nevents_logger <span class=\"token operator\">=</span> <span class=\"token string\">\"journald\"</span></code></pre></div>\n<p>Once the podman configuration is update it is required to restart the podman socket by running the following command as the user (e.g. brainwave):</p>\n\n          <codeblockcopytag>systemctl --user restart podman.socket</codeblockcopytag>\n          \n<div class=\"gatsby-highlight\" data-language=\"sh\"><pre class=\"language-sh\"><code class=\"language-sh\">systemctl <span class=\"token parameter variable\">--user</span> restart podman.socket</code></pre></div>\n<p>To validate the changes please check the following values:</p>\n\n          <codeblockcopytag>podman info | grep event\npodman info | grep backend</codeblockcopytag>\n          \n<div class=\"gatsby-highlight\" data-language=\"sh\"><pre class=\"language-sh\"><code class=\"language-sh\"><span class=\"token function\">podman</span> info <span class=\"token operator\">|</span> <span class=\"token function\">grep</span> event\n<span class=\"token function\">podman</span> info <span class=\"token operator\">|</span> <span class=\"token function\">grep</span> backend</code></pre></div>\n<h3 id=\"port-configuration\">Port configuration</h3>\n<p>By default we bind to the standard ports 80 and 443. To do so, in the following file as root:</p>\n\n          <codeblockcopytag>nano /etc/sysctl.conf</codeblockcopytag>\n          \n<div class=\"gatsby-highlight\" data-language=\"sh\"><pre class=\"language-sh\"><code class=\"language-sh\"><span class=\"token function\">nano</span> /etc/sysctl.conf</code></pre></div>\n<p>Add the following lines, to open the ports 80 and 443:</p>\n\n          <codeblockcopytag>net.ipv4.ip_unprivileged_port_start=80</codeblockcopytag>\n          \n<div class=\"gatsby-highlight\" data-language=\"sh\"><pre class=\"language-sh\"><code class=\"language-sh\"><span class=\"token assign-left variable\">net.ipv4.ip_unprivileged_port_start</span><span class=\"token operator\">=</span><span class=\"token number\">80</span></code></pre></div>\n<blockquote>\n<p>If you wish to open only the 443 port the the following line should be added instead:</p>\n\n          <codeblockcopytag>net.ipv4.ip_unprivileged_port_start=443</codeblockcopytag>\n          \n<div class=\"gatsby-highlight\" data-language=\"sh\"><pre class=\"language-sh\"><code class=\"language-sh\"><span class=\"token assign-left variable\">net.ipv4.ip_unprivileged_port_start</span><span class=\"token operator\">=</span><span class=\"token number\">443</span></code></pre></div>\n</blockquote>\n<h3 id=\"environment-variables\">Environment variables</h3>\n<p>If not added please add the following parameters to your users <code class=\"language-text\">~/.bashrc</code> file:</p>\n\n          <codeblockcopytag>export XDG_RUNTIME_DIR=/run/user/\\$(id -u)\nexport DBUS_SESSION_BUS_ADDRESS=&quot;unix:path=\\${XDG_RUNTIME_DIR}/bus&quot;</codeblockcopytag>\n          \n<div class=\"gatsby-highlight\" data-language=\"sh\"><pre class=\"language-sh\"><code class=\"language-sh\"><span class=\"token builtin class-name\">export</span> <span class=\"token assign-left variable\"><span class=\"token environment constant\">XDG_RUNTIME_DIR</span></span><span class=\"token operator\">=</span>/run/user/<span class=\"token variable\"><span class=\"token variable\">$(</span><span class=\"token function\">id</span> <span class=\"token parameter variable\">-u</span><span class=\"token variable\">)</span></span>\n<span class=\"token builtin class-name\">export</span> <span class=\"token assign-left variable\"><span class=\"token environment constant\">DBUS_SESSION_BUS_ADDRESS</span></span><span class=\"token operator\">=</span><span class=\"token string\">\"unix:path=<span class=\"token variable\">${<span class=\"token environment constant\">XDG_RUNTIME_DIR</span>}</span>/bus\"</span></code></pre></div>\n<p>Please remember to reload your bash profile:</p>\n\n          <codeblockcopytag>source ~/.bashrc</codeblockcopytag>\n          \n<div class=\"gatsby-highlight\" data-language=\"sh\"><pre class=\"language-sh\"><code class=\"language-sh\"><span class=\"token builtin class-name\">source</span> ~/.bashrc</code></pre></div>\n<h2 id=\"creating-users-are-required-directories\">Creating Users are Required Directories</h2>\n<p>When running the service in server mode it is necessary to create the following folders and change the rights on the folders. In the following commands it is assumed podman is run by the user <code class=\"language-text\">brainwave</code>. Please adapt all commands accordingly.</p>\n<p>Create the following directories as root:</p>\n\n          <codeblockcopytag>mkdir -p /var/log/brainwave\nmkdir -p /var/lib/brainwave\nmkdir -p /etc/brainwave\nmkdir -p /usr/local/brainwave</codeblockcopytag>\n          \n<div class=\"gatsby-highlight\" data-language=\"sh\"><pre class=\"language-sh\"><code class=\"language-sh\"><span class=\"token function\">mkdir</span> <span class=\"token parameter variable\">-p</span> /var/log/brainwave\n<span class=\"token function\">mkdir</span> <span class=\"token parameter variable\">-p</span> /var/lib/brainwave\n<span class=\"token function\">mkdir</span> <span class=\"token parameter variable\">-p</span> /etc/brainwave\n<span class=\"token function\">mkdir</span> <span class=\"token parameter variable\">-p</span> /usr/local/brainwave</code></pre></div>\n<p>Set the owner of the new directories:</p>\n\n          <codeblockcopytag>chown -Rf brainwave:brainwave /var/log/brainwave\nchown -Rf brainwave:brainwave /var/lib/brainwave\nchown -Rf brainwave:brainwave /etc/brainwave\nchown -Rf brainwave:brainwave /usr/local/brainwave</codeblockcopytag>\n          \n<div class=\"gatsby-highlight\" data-language=\"sh\"><pre class=\"language-sh\"><code class=\"language-sh\"><span class=\"token function\">chown</span> <span class=\"token parameter variable\">-Rf</span> brainwave:brainwave /var/log/brainwave\n<span class=\"token function\">chown</span> <span class=\"token parameter variable\">-Rf</span> brainwave:brainwave /var/lib/brainwave\n<span class=\"token function\">chown</span> <span class=\"token parameter variable\">-Rf</span> brainwave:brainwave /etc/brainwave\n<span class=\"token function\">chown</span> <span class=\"token parameter variable\">-Rf</span> brainwave:brainwave /usr/local/brainwave</code></pre></div>\n<p>Set the permissions</p>\n\n          <codeblockcopytag>chmod ug+rwx,o+rx -Rf /var/log/brainwave\nchmod ug+rwx,o+rx -Rf /var/lib/brainwave\nchmod ug+rwx,o+rx -Rf /etc/brainwave\nchmod ug+rwx,o+rx -Rf /usr/local/brainwave</codeblockcopytag>\n          \n<div class=\"gatsby-highlight\" data-language=\"sh\"><pre class=\"language-sh\"><code class=\"language-sh\"><span class=\"token function\">chmod</span> ug+rwx,o+rx <span class=\"token parameter variable\">-Rf</span> /var/log/brainwave\n<span class=\"token function\">chmod</span> ug+rwx,o+rx <span class=\"token parameter variable\">-Rf</span> /var/lib/brainwave\n<span class=\"token function\">chmod</span> ug+rwx,o+rx <span class=\"token parameter variable\">-Rf</span> /etc/brainwave\n<span class=\"token function\">chmod</span> ug+rwx,o+rx <span class=\"token parameter variable\">-Rf</span> /usr/local/brainwave</code></pre></div>\n<blockquote>\n<p>Please note that if permission errors are encountered after the installation phase, then it might be necessary to redo the setting of the ownership and the permissions after the installation of the solution.</p>\n</blockquote>\n<h3 id=\"folder-acls\">Folder ACLs</h3>\n<p>To allow the running of containers please insure that no ACls are positioned on the previously mentioned folder. Run the following commands as root.</p>\n\n          <codeblockcopytag>getfacl /var/log/brainwave\ngetfacl /var/lib/brainwave\ngetfacl /etc/brainwave\ngetfacl /usr/local/brainwave</codeblockcopytag>\n          \n<div class=\"gatsby-highlight\" data-language=\"sh\"><pre class=\"language-sh\"><code class=\"language-sh\">getfacl /var/log/brainwave\ngetfacl /var/lib/brainwave\ngetfacl /etc/brainwave\ngetfacl /usr/local/brainwave</code></pre></div>\n<p>If ALCs are positioned it is possible to remove them using the following commands as root.</p>\n\n          <codeblockcopytag>setfacl -Rm d:u::rwx,d:g::rwx,d⭕:r-x /var/log/brainwave\nsetfacl -Rm d:u::rwx,d:g::rwx,d⭕:r-x /var/lib/brainwave\nsetfacl -Rm d:u::rwx,d:g::rwx,d⭕:r-x /etc/brainwave\nsetfacl -Rm d:u::rwx,d:g::rwx,d⭕:r-x /usr/local/brainwave</codeblockcopytag>\n          \n<div class=\"gatsby-highlight\" data-language=\"sh\"><pre class=\"language-sh\"><code class=\"language-sh\">setfacl <span class=\"token parameter variable\">-Rm</span> d:u::rwx,d:g::rwx,d⭕:r-x /var/log/brainwave\nsetfacl <span class=\"token parameter variable\">-Rm</span> d:u::rwx,d:g::rwx,d⭕:r-x /var/lib/brainwave\nsetfacl <span class=\"token parameter variable\">-Rm</span> d:u::rwx,d:g::rwx,d⭕:r-x /etc/brainwave\nsetfacl <span class=\"token parameter variable\">-Rm</span> d:u::rwx,d:g::rwx,d⭕:r-x /usr/local/brainwave</code></pre></div>\n<blockquote>\n<p>[!warning] If the ACLs automatically set please check that they are not automatically overwritten.</p>\n</blockquote>\n<h2 id=\"download-and-install-brainwave-cli\">Download and Install Brainwave CLI</h2>\n<p>Download the Identity Analytics tools binary and its corresponding sha256 file to verify the download, from Identity Analytics's Gitea repository <a href=\"https://repository.brainwavegrc.com/\">https://repository.brainwavegrc.com/</a>. You can also use the following direct link:</p>\n<p><a href=\"https://repository.brainwavegrc.com/Brainwave/-/packages/generic/brainwavetools_linux_amd64/1.2\">https://repository.brainwavegrc.com/Brainwave/-/packages/generic/brainwavetools_linux_amd64/1.2</a></p>\n<p>Verify the download:</p>\n\n          <codeblockcopytag>echo &quot;\\$(cat brainwave.sha256)  brainwave&quot; | sha256sum --check</codeblockcopytag>\n          \n<div class=\"gatsby-highlight\" data-language=\"sh\"><pre class=\"language-sh\"><code class=\"language-sh\"><span class=\"token builtin class-name\">echo</span> <span class=\"token string\">\"<span class=\"token variable\"><span class=\"token variable\">$(</span><span class=\"token function\">cat</span> brainwave.sha256<span class=\"token variable\">)</span></span>  brainwave\"</span> <span class=\"token operator\">|</span> sha256sum <span class=\"token parameter variable\">--check</span></code></pre></div>\n<p>To Install the solution run the following commands as root. It is assumed that the user <code class=\"language-text\">brainwave</code> is running the podman socket.</p>\n\n          <codeblockcopytag>mkdir -p /usr/local/bin\ncp brainwave /usr/local/bin/brainwave\nchown brainwave:brainwave /usr/local/bin/brainwave\nchmod ug+x /usr/local/bin/brainwave</codeblockcopytag>\n          \n<div class=\"gatsby-highlight\" data-language=\"sh\"><pre class=\"language-sh\"><code class=\"language-sh\"><span class=\"token function\">mkdir</span> <span class=\"token parameter variable\">-p</span> /usr/local/bin\n<span class=\"token function\">cp</span> brainwave /usr/local/bin/brainwave\n<span class=\"token function\">chown</span> brainwave:brainwave /usr/local/bin/brainwave\n<span class=\"token function\">chmod</span> ug+x /usr/local/bin/brainwave</code></pre></div>\n<p>As root add the current user to the brainwave group</p>\n\n          <codeblockcopytag>gpasswd -a \\$(whoami) brainwave</codeblockcopytag>\n          \n<div class=\"gatsby-highlight\" data-language=\"sh\"><pre class=\"language-sh\"><code class=\"language-sh\">gpasswd <span class=\"token parameter variable\">-a</span> <span class=\"token variable\"><span class=\"token variable\">$(</span><span class=\"token function\">whoami</span><span class=\"token variable\">)</span></span> brainwave</code></pre></div>\n<blockquote>\n<p>[!warning] Log out and log back in, to make sure your user gets the permissions to run Identity Analytics commands <code class=\"language-text\">brainwave XXXX</code></p>\n</blockquote>\n<h2 id=\"brainwave-registry\">Brainwave Registry</h2>\n<blockquote>\n<p>[!warning]<br>\nAll the following commands must be executed as the user running the service (e.g. brainwave).</p>\n</blockquote>\n<p>It is necessary to log into the docker registry for Identity Analytics to be able to pull the desired images:</p>\n\n          <codeblockcopytag>podman login brainwave.azurecr.io</codeblockcopytag>\n          \n<div class=\"gatsby-highlight\" data-language=\"sh\"><pre class=\"language-sh\"><code class=\"language-sh\"><span class=\"token function\">podman</span> login brainwave.azurecr.io</code></pre></div>\n<h2 id=\"installation\">Installation</h2>\n<p>To install the solution in server mode please use the following command:</p>\n\n          <codeblockcopytag>brainwave install --project-name brainwave --server\nbrainwave pull</codeblockcopytag>\n          \n<div class=\"gatsby-highlight\" data-language=\"sh\"><pre class=\"language-sh\"><code class=\"language-sh\">brainwave <span class=\"token function\">install</span> --project-name brainwave <span class=\"token parameter variable\">--server</span>\nbrainwave pull</code></pre></div>\n<h2 id=\"initial-configuration\">Initial configuration</h2>\n<blockquote>\n<p>[!note] The hostname <code class=\"language-text\">brainwave.local</code> used below is provided as an example for the command line. The parameter should be updated to your context, the hostname of the machine hosting the docker service.<br>\nThe hostname value <strong>must</strong> be <code class=\"language-text\">lowercase</code></p>\n</blockquote>\n<p>Before starting the services, set up the hostname</p>\n\n          <codeblockcopytag>brainwave config --hostname brainwave.local</codeblockcopytag>\n          \n<div class=\"gatsby-highlight\" data-language=\"sh\"><pre class=\"language-sh\"><code class=\"language-sh\">brainwave config <span class=\"token parameter variable\">--hostname</span> brainwave.local</code></pre></div>\n<h2 id=\"tls-configuration-optional\">TLS configuration (Optional)</h2>\n<p>To activate tls</p>\n\n          <codeblockcopytag>brainwave config --tls</codeblockcopytag>\n          \n<div class=\"gatsby-highlight\" data-language=\"sh\"><pre class=\"language-sh\"><code class=\"language-sh\">brainwave config <span class=\"token parameter variable\">--tls</span></code></pre></div>\n<p>Before starting the service it is necessary to copy the certificate and the private key into the certificates folder</p>\n\n          <codeblockcopytag>cp brainwave.local.key /etc/brainwave/certificates/brainwave.local.key\ncp brainwave.local.crt /etc/brainwave/certificates/brainwave.local.crt</codeblockcopytag>\n          \n<div class=\"gatsby-highlight\" data-language=\"sh\"><pre class=\"language-sh\"><code class=\"language-sh\"><span class=\"token function\">cp</span> brainwave.local.key /etc/brainwave/certificates/brainwave.local.key\n<span class=\"token function\">cp</span> brainwave.local.crt /etc/brainwave/certificates/brainwave.local.crt</code></pre></div>\n<blockquote>\n<p>Note that the filename musth match the domain name. More generally the files have to be named <code class=\"language-text\">&lt;hostname>.crt</code> and <code class=\"language-text\">&lt;hostname>.key</code></p>\n</blockquote>\n<p>Please refer to the following page for more information:</p>\n<p><a href=\"../configuration/ssl-configuration\">SSL configuration page</a></p>\n<h2 id=\"starting-the-services\">Starting the Services</h2>\n\n          <codeblockcopytag>brainwave start</codeblockcopytag>\n          \n<div class=\"gatsby-highlight\" data-language=\"sh\"><pre class=\"language-sh\"><code class=\"language-sh\">brainwave start</code></pre></div>\n<p>Once installed navigate to the <code class=\"language-text\">/config</code> webpage to finalize the configuration. Please see <a href=\"/configuration/config-ui\">here</a> for more information.</p>\n<h2 id=\"auto-completion\">Auto completion</h2>\n<p>An auto completion bash exists for linux environments. Add the following command line to your users bash profile:</p>\n\n          <codeblockcopytag>source &lt;(brainwave completion bash)</codeblockcopytag>\n          \n<div class=\"gatsby-highlight\" data-language=\"sh\"><pre class=\"language-sh\"><code class=\"language-sh\"><span class=\"token builtin class-name\">source</span> <span class=\"token operator\">&lt;</span><span class=\"token punctuation\">(</span>brainwave completion <span class=\"token function\">bash</span><span class=\"token punctuation\">)</span></code></pre></div>","htmlAst":{"type":"root","children":[{"type":"element","tagName":"h1","properties":{"id":"red-hat-installation"},"children":[{"type":"text","value":"Red Hat installation"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Before installing the solution it is necessary to configure the timezone of your instance, this command is to be executed as root:"}]},{"type":"text","value":"\n\n          "},{"type":"element","tagName":"codeblockcopytag","properties":{},"children":[{"type":"text","value":"timedatectl set-timezone Europe/Paris"}]},{"type":"text","value":"\n          \n"},{"type":"element","tagName":"div","properties":{"className":["gatsby-highlight"],"dataLanguage":"sh"},"children":[{"type":"element","tagName":"pre","properties":{"className":["language-sh"]},"children":[{"type":"element","tagName":"code","properties":{"className":["language-sh"]},"children":[{"type":"text","value":"timedatectl set-timezone Europe/Paris"}]}]}]},{"type":"text","value":"\n"},{"type":"element","tagName":"h2","properties":{"id":"install-podman"},"children":[{"type":"text","value":"Install Podman"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"To install podman please refer to podman's official documentation:"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"ul","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"element","tagName":"a","properties":{"href":"https://podman.io/docs/installation"},"children":[{"type":"text","value":"https://podman.io/docs/installation"}]}]},{"type":"text","value":"\n"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"blockquote","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"[!warning] Log out and log back in, to make sure your user gets the permissions to run podman commands"}]},{"type":"text","value":"\n"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"To install podman please run all the following commands as root:"}]},{"type":"text","value":"\n\n          "},{"type":"element","tagName":"codeblockcopytag","properties":{},"children":[{"type":"text","value":"dnf -y update\ndnf -y install podman"}]},{"type":"text","value":"\n          \n"},{"type":"element","tagName":"div","properties":{"className":["gatsby-highlight"],"dataLanguage":"sh"},"children":[{"type":"element","tagName":"pre","properties":{"className":["language-sh"]},"children":[{"type":"element","tagName":"code","properties":{"className":["language-sh"]},"children":[{"type":"text","value":"dnf "},{"type":"element","tagName":"span","properties":{"className":["token","parameter","variable"]},"children":[{"type":"text","value":"-y"}]},{"type":"text","value":" update\ndnf "},{"type":"element","tagName":"span","properties":{"className":["token","parameter","variable"]},"children":[{"type":"text","value":"-y"}]},{"type":"text","value":" "},{"type":"element","tagName":"span","properties":{"className":["token","function"]},"children":[{"type":"text","value":"install"}]},{"type":"text","value":" "},{"type":"element","tagName":"span","properties":{"className":["token","function"]},"children":[{"type":"text","value":"podman"}]}]}]}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"To run the selfmanaged solution in RHEL using podman it is necessary to install docker compose "},{"type":"element","tagName":"a","properties":{"href":"https://github.com/docker/compose"},"children":[{"type":"text","value":"https://github.com/docker/compose"}]},{"type":"text","value":". The following commands should be installed as root."}]},{"type":"text","value":"\n\n          "},{"type":"element","tagName":"codeblockcopytag","properties":{},"children":[{"type":"text","value":"curl -SL https://github.com/docker/compose/releases/latest/download/docker-compose-linux-x86_64 -o /usr/local/bin/docker-compose\nchmod a+rx /usr/local/bin/docker-compose"}]},{"type":"text","value":"\n          \n"},{"type":"element","tagName":"div","properties":{"className":["gatsby-highlight"],"dataLanguage":"sh"},"children":[{"type":"element","tagName":"pre","properties":{"className":["language-sh"]},"children":[{"type":"element","tagName":"code","properties":{"className":["language-sh"]},"children":[{"type":"element","tagName":"span","properties":{"className":["token","function"]},"children":[{"type":"text","value":"curl"}]},{"type":"text","value":" "},{"type":"element","tagName":"span","properties":{"className":["token","parameter","variable"]},"children":[{"type":"text","value":"-SL"}]},{"type":"text","value":" https://github.com/docker/compose/releases/latest/download/docker-compose-linux-x86_64 "},{"type":"element","tagName":"span","properties":{"className":["token","parameter","variable"]},"children":[{"type":"text","value":"-o"}]},{"type":"text","value":" /usr/local/bin/docker-compose\n"},{"type":"element","tagName":"span","properties":{"className":["token","function"]},"children":[{"type":"text","value":"chmod"}]},{"type":"text","value":" a+rx /usr/local/bin/docker-compose"}]}]}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"To validate the installation of podman and docker compose run the following commands as the standard user (e.g. brainwave):"}]},{"type":"text","value":"\n\n          "},{"type":"element","tagName":"codeblockcopytag","properties":{},"children":[{"type":"text","value":"podman --version\ndocker-compose --version"}]},{"type":"text","value":"\n          \n"},{"type":"element","tagName":"div","properties":{"className":["gatsby-highlight"],"dataLanguage":"sh"},"children":[{"type":"element","tagName":"pre","properties":{"className":["language-sh"]},"children":[{"type":"element","tagName":"code","properties":{"className":["language-sh"]},"children":[{"type":"element","tagName":"span","properties":{"className":["token","function"]},"children":[{"type":"text","value":"podman"}]},{"type":"text","value":" "},{"type":"element","tagName":"span","properties":{"className":["token","parameter","variable"]},"children":[{"type":"text","value":"--version"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"span","properties":{"className":["token","function"]},"children":[{"type":"text","value":"docker-compose"}]},{"type":"text","value":" "},{"type":"element","tagName":"span","properties":{"className":["token","parameter","variable"]},"children":[{"type":"text","value":"--version"}]}]}]}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"When running podman as a non root user it is necessary to enable the service and the socket for desired user (e.g. brainwave):"}]},{"type":"text","value":"\n\n          "},{"type":"element","tagName":"codeblockcopytag","properties":{},"children":[{"type":"text","value":"systemctl enable --now --user podman podman.socket\nsystemctl --user status podman.socket"}]},{"type":"text","value":"\n          \n"},{"type":"element","tagName":"div","properties":{"className":["gatsby-highlight"],"dataLanguage":"sh"},"children":[{"type":"element","tagName":"pre","properties":{"className":["language-sh"]},"children":[{"type":"element","tagName":"code","properties":{"className":["language-sh"]},"children":[{"type":"text","value":"systemctl "},{"type":"element","tagName":"span","properties":{"className":["token","builtin","class-name"]},"children":[{"type":"text","value":"enable"}]},{"type":"text","value":" "},{"type":"element","tagName":"span","properties":{"className":["token","parameter","variable"]},"children":[{"type":"text","value":"--now"}]},{"type":"text","value":" "},{"type":"element","tagName":"span","properties":{"className":["token","parameter","variable"]},"children":[{"type":"text","value":"--user"}]},{"type":"text","value":" "},{"type":"element","tagName":"span","properties":{"className":["token","function"]},"children":[{"type":"text","value":"podman"}]},{"type":"text","value":" podman.socket\nsystemctl "},{"type":"element","tagName":"span","properties":{"className":["token","parameter","variable"]},"children":[{"type":"text","value":"--user"}]},{"type":"text","value":" status podman.socket"}]}]}]},{"type":"text","value":"\n"},{"type":"element","tagName":"blockquote","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"If you get the error when executing the above command please update the environment variables before re-running the commands. See "},{"type":"element","tagName":"a","properties":{"href":"#environment-variables"},"children":[{"type":"text","value":"Environment variables"}]},{"type":"text","value":" for more information."}]},{"type":"text","value":"\n"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"h3","properties":{"id":"red-hat-8-requirements"},"children":[{"type":"text","value":"Red Hat 8 requirements"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"By default RHEL8 runs on croup-v1, however to run podman rootless in RHEL 8 it is necessary to set "},{"type":"element","tagName":"code","properties":{"className":["language-text"]},"children":[{"type":"text","value":"cgroups V2"}]},{"type":"text","value":" as the default in the grub. Please execute the following commands as root (see "},{"type":"element","tagName":"a","properties":{"href":"https://access.redhat.com/solutions/6898151"},"children":[{"type":"text","value":"here"}]},{"type":"text","value":" for more information):"}]},{"type":"text","value":"\n\n          "},{"type":"element","tagName":"codeblockcopytag","properties":{},"children":[{"type":"text","value":"grubby --update-kernel=ALL --args=\"systemd.unified_cgroup_hierarchy=1\""}]},{"type":"text","value":"\n          \n"},{"type":"element","tagName":"div","properties":{"className":["gatsby-highlight"],"dataLanguage":"sh"},"children":[{"type":"element","tagName":"pre","properties":{"className":["language-sh"]},"children":[{"type":"element","tagName":"code","properties":{"className":["language-sh"]},"children":[{"type":"text","value":"grubby --update-kernel"},{"type":"element","tagName":"span","properties":{"className":["token","operator"]},"children":[{"type":"text","value":"="}]},{"type":"text","value":"ALL "},{"type":"element","tagName":"span","properties":{"className":["token","parameter","variable"]},"children":[{"type":"text","value":"--args"}]},{"type":"element","tagName":"span","properties":{"className":["token","operator"]},"children":[{"type":"text","value":"="}]},{"type":"element","tagName":"span","properties":{"className":["token","string"]},"children":[{"type":"text","value":"\"systemd.unified_cgroup_hierarchy=1\""}]}]}]}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Once the grub is updated it is necessary to reboot the service."}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Once the grub is updated it is necessary to update the configuration of the controllers for the user running podman. The following commands should be updated to correspond to the UID of the owner of the podman socket and be executed as root."}]},{"type":"text","value":"\n\n          "},{"type":"element","tagName":"codeblockcopytag","properties":{},"children":[{"type":"text","value":"mkdir /etc/systemd/system/user-<user UID>.slice.d\nnano /etc/systemd/system/user-<user UID>.slice.d/controllers.conf"}]},{"type":"text","value":"\n          \n"},{"type":"element","tagName":"div","properties":{"className":["gatsby-highlight"],"dataLanguage":"sh"},"children":[{"type":"element","tagName":"pre","properties":{"className":["language-sh"]},"children":[{"type":"element","tagName":"code","properties":{"className":["language-sh"]},"children":[{"type":"element","tagName":"span","properties":{"className":["token","function"]},"children":[{"type":"text","value":"mkdir"}]},{"type":"text","value":" /etc/systemd/system/user-"},{"type":"element","tagName":"span","properties":{"className":["token","operator"]},"children":[{"type":"text","value":"<"}]},{"type":"text","value":"user "},{"type":"element","tagName":"span","properties":{"className":["token","environment","constant"]},"children":[{"type":"text","value":"UID"}]},{"type":"element","tagName":"span","properties":{"className":["token","operator"]},"children":[{"type":"text","value":">"}]},{"type":"text","value":".slice.d\n"},{"type":"element","tagName":"span","properties":{"className":["token","function"]},"children":[{"type":"text","value":"nano"}]},{"type":"text","value":" /etc/systemd/system/user-"},{"type":"element","tagName":"span","properties":{"className":["token","operator"]},"children":[{"type":"text","value":"<"}]},{"type":"text","value":"user "},{"type":"element","tagName":"span","properties":{"className":["token","environment","constant"]},"children":[{"type":"text","value":"UID"}]},{"type":"element","tagName":"span","properties":{"className":["token","operator"]},"children":[{"type":"text","value":">"}]},{"type":"text","value":".slice.d/controllers.conf"}]}]}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Paste the following in the previously created file:"}]},{"type":"text","value":"\n\n          "},{"type":"element","tagName":"codeblockcopytag","properties":{},"children":[{"type":"text","value":"[Slice]\nCPUAccounting=yes\nMemoryAccounting=yes\nTasksAccounting=yes"}]},{"type":"text","value":"\n          \n"},{"type":"element","tagName":"div","properties":{"className":["gatsby-highlight"],"dataLanguage":"sh"},"children":[{"type":"element","tagName":"pre","properties":{"className":["language-sh"]},"children":[{"type":"element","tagName":"code","properties":{"className":["language-sh"]},"children":[{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":"["}]},{"type":"text","value":"Slice"},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":"]"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"span","properties":{"className":["token","assign-left","variable"]},"children":[{"type":"text","value":"CPUAccounting"}]},{"type":"element","tagName":"span","properties":{"className":["token","operator"]},"children":[{"type":"text","value":"="}]},{"type":"text","value":"yes\n"},{"type":"element","tagName":"span","properties":{"className":["token","assign-left","variable"]},"children":[{"type":"text","value":"MemoryAccounting"}]},{"type":"element","tagName":"span","properties":{"className":["token","operator"]},"children":[{"type":"text","value":"="}]},{"type":"text","value":"yes\n"},{"type":"element","tagName":"span","properties":{"className":["token","assign-left","variable"]},"children":[{"type":"text","value":"TasksAccounting"}]},{"type":"element","tagName":"span","properties":{"className":["token","operator"]},"children":[{"type":"text","value":"="}]},{"type":"text","value":"yes"}]}]}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Once all is updated it is necessary to reload the daemon as root:"}]},{"type":"text","value":"\n\n          "},{"type":"element","tagName":"codeblockcopytag","properties":{},"children":[{"type":"text","value":"systemctl daemon-reload"}]},{"type":"text","value":"\n          \n"},{"type":"element","tagName":"div","properties":{"className":["gatsby-highlight"],"dataLanguage":"sh"},"children":[{"type":"element","tagName":"pre","properties":{"className":["language-sh"]},"children":[{"type":"element","tagName":"code","properties":{"className":["language-sh"]},"children":[{"type":"text","value":"systemctl daemon-reload"}]}]}]},{"type":"text","value":"\n"},{"type":"element","tagName":"h3","properties":{"id":"podman-requirements"},"children":[{"type":"text","value":"Podman requirements"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Install the required package "},{"type":"element","tagName":"code","properties":{"className":["language-text"]},"children":[{"type":"text","value":"netavark"}]},{"type":"text","value":" as root:"}]},{"type":"text","value":"\n\n          "},{"type":"element","tagName":"codeblockcopytag","properties":{},"children":[{"type":"text","value":"dnf install netavark"}]},{"type":"text","value":"\n          \n"},{"type":"element","tagName":"div","properties":{"className":["gatsby-highlight"],"dataLanguage":"sh"},"children":[{"type":"element","tagName":"pre","properties":{"className":["language-sh"]},"children":[{"type":"element","tagName":"code","properties":{"className":["language-sh"]},"children":[{"type":"text","value":"dnf "},{"type":"element","tagName":"span","properties":{"className":["token","function"]},"children":[{"type":"text","value":"install"}]},{"type":"text","value":" netavark"}]}]}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"The following configuration changes Podman are required for the service to run. The values are overwritten by the values present in the following files. Please adapt the path to correspond to the user running podman:"}]},{"type":"text","value":"\n\n          "},{"type":"element","tagName":"codeblockcopytag","properties":{},"children":[{"type":"text","value":"mkdir /home/<user>/.config/containers\nnano /home/<user>/.config/containers/containers.conf"}]},{"type":"text","value":"\n          \n"},{"type":"element","tagName":"div","properties":{"className":["gatsby-highlight"],"dataLanguage":"sh"},"children":[{"type":"element","tagName":"pre","properties":{"className":["language-sh"]},"children":[{"type":"element","tagName":"code","properties":{"className":["language-sh"]},"children":[{"type":"element","tagName":"span","properties":{"className":["token","function"]},"children":[{"type":"text","value":"mkdir"}]},{"type":"text","value":" /home/"},{"type":"element","tagName":"span","properties":{"className":["token","operator"]},"children":[{"type":"text","value":"<"}]},{"type":"text","value":"user"},{"type":"element","tagName":"span","properties":{"className":["token","operator"]},"children":[{"type":"text","value":">"}]},{"type":"text","value":"/.config/containers\n"},{"type":"element","tagName":"span","properties":{"className":["token","function"]},"children":[{"type":"text","value":"nano"}]},{"type":"text","value":" /home/"},{"type":"element","tagName":"span","properties":{"className":["token","operator"]},"children":[{"type":"text","value":"<"}]},{"type":"text","value":"user"},{"type":"element","tagName":"span","properties":{"className":["token","operator"]},"children":[{"type":"text","value":">"}]},{"type":"text","value":"/.config/containers/containers.conf"}]}]}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Copy the following the values into the newly created file:"}]},{"type":"text","value":"\n\n          "},{"type":"element","tagName":"codeblockcopytag","properties":{},"children":[{"type":"text","value":"[containers]\nlog_driver = \"journald\"\n\n[network]\nnetwork_backend = \"netavark\"\n\n[engine]\nevents_logger = \"journald\""}]},{"type":"text","value":"\n          \n"},{"type":"element","tagName":"div","properties":{"className":["gatsby-highlight"],"dataLanguage":"sh"},"children":[{"type":"element","tagName":"pre","properties":{"className":["language-sh"]},"children":[{"type":"element","tagName":"code","properties":{"className":["language-sh"]},"children":[{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":"["}]},{"type":"text","value":"containers"},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":"]"}]},{"type":"text","value":"\nlog_driver "},{"type":"element","tagName":"span","properties":{"className":["token","operator"]},"children":[{"type":"text","value":"="}]},{"type":"text","value":" "},{"type":"element","tagName":"span","properties":{"className":["token","string"]},"children":[{"type":"text","value":"\"journald\""}]},{"type":"text","value":"\n\n"},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":"["}]},{"type":"text","value":"network"},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":"]"}]},{"type":"text","value":"\nnetwork_backend "},{"type":"element","tagName":"span","properties":{"className":["token","operator"]},"children":[{"type":"text","value":"="}]},{"type":"text","value":" "},{"type":"element","tagName":"span","properties":{"className":["token","string"]},"children":[{"type":"text","value":"\"netavark\""}]},{"type":"text","value":"\n\n"},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":"["}]},{"type":"text","value":"engine"},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":"]"}]},{"type":"text","value":"\nevents_logger "},{"type":"element","tagName":"span","properties":{"className":["token","operator"]},"children":[{"type":"text","value":"="}]},{"type":"text","value":" "},{"type":"element","tagName":"span","properties":{"className":["token","string"]},"children":[{"type":"text","value":"\"journald\""}]}]}]}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Once the podman configuration is update it is required to restart the podman socket by running the following command as the user (e.g. brainwave):"}]},{"type":"text","value":"\n\n          "},{"type":"element","tagName":"codeblockcopytag","properties":{},"children":[{"type":"text","value":"systemctl --user restart podman.socket"}]},{"type":"text","value":"\n          \n"},{"type":"element","tagName":"div","properties":{"className":["gatsby-highlight"],"dataLanguage":"sh"},"children":[{"type":"element","tagName":"pre","properties":{"className":["language-sh"]},"children":[{"type":"element","tagName":"code","properties":{"className":["language-sh"]},"children":[{"type":"text","value":"systemctl "},{"type":"element","tagName":"span","properties":{"className":["token","parameter","variable"]},"children":[{"type":"text","value":"--user"}]},{"type":"text","value":" restart podman.socket"}]}]}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"To validate the changes please check the following values:"}]},{"type":"text","value":"\n\n          "},{"type":"element","tagName":"codeblockcopytag","properties":{},"children":[{"type":"text","value":"podman info | grep event\npodman info | grep backend"}]},{"type":"text","value":"\n          \n"},{"type":"element","tagName":"div","properties":{"className":["gatsby-highlight"],"dataLanguage":"sh"},"children":[{"type":"element","tagName":"pre","properties":{"className":["language-sh"]},"children":[{"type":"element","tagName":"code","properties":{"className":["language-sh"]},"children":[{"type":"element","tagName":"span","properties":{"className":["token","function"]},"children":[{"type":"text","value":"podman"}]},{"type":"text","value":" info "},{"type":"element","tagName":"span","properties":{"className":["token","operator"]},"children":[{"type":"text","value":"|"}]},{"type":"text","value":" "},{"type":"element","tagName":"span","properties":{"className":["token","function"]},"children":[{"type":"text","value":"grep"}]},{"type":"text","value":" event\n"},{"type":"element","tagName":"span","properties":{"className":["token","function"]},"children":[{"type":"text","value":"podman"}]},{"type":"text","value":" info "},{"type":"element","tagName":"span","properties":{"className":["token","operator"]},"children":[{"type":"text","value":"|"}]},{"type":"text","value":" "},{"type":"element","tagName":"span","properties":{"className":["token","function"]},"children":[{"type":"text","value":"grep"}]},{"type":"text","value":" backend"}]}]}]},{"type":"text","value":"\n"},{"type":"element","tagName":"h3","properties":{"id":"port-configuration"},"children":[{"type":"text","value":"Port configuration"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"By default we bind to the standard ports 80 and 443. To do so, in the following file as root:"}]},{"type":"text","value":"\n\n          "},{"type":"element","tagName":"codeblockcopytag","properties":{},"children":[{"type":"text","value":"nano /etc/sysctl.conf"}]},{"type":"text","value":"\n          \n"},{"type":"element","tagName":"div","properties":{"className":["gatsby-highlight"],"dataLanguage":"sh"},"children":[{"type":"element","tagName":"pre","properties":{"className":["language-sh"]},"children":[{"type":"element","tagName":"code","properties":{"className":["language-sh"]},"children":[{"type":"element","tagName":"span","properties":{"className":["token","function"]},"children":[{"type":"text","value":"nano"}]},{"type":"text","value":" /etc/sysctl.conf"}]}]}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Add the following lines, to open the ports 80 and 443:"}]},{"type":"text","value":"\n\n          "},{"type":"element","tagName":"codeblockcopytag","properties":{},"children":[{"type":"text","value":"net.ipv4.ip_unprivileged_port_start=80"}]},{"type":"text","value":"\n          \n"},{"type":"element","tagName":"div","properties":{"className":["gatsby-highlight"],"dataLanguage":"sh"},"children":[{"type":"element","tagName":"pre","properties":{"className":["language-sh"]},"children":[{"type":"element","tagName":"code","properties":{"className":["language-sh"]},"children":[{"type":"element","tagName":"span","properties":{"className":["token","assign-left","variable"]},"children":[{"type":"text","value":"net.ipv4.ip_unprivileged_port_start"}]},{"type":"element","tagName":"span","properties":{"className":["token","operator"]},"children":[{"type":"text","value":"="}]},{"type":"element","tagName":"span","properties":{"className":["token","number"]},"children":[{"type":"text","value":"80"}]}]}]}]},{"type":"text","value":"\n"},{"type":"element","tagName":"blockquote","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"If you wish to open only the 443 port the the following line should be added instead:"}]},{"type":"text","value":"\n\n          "},{"type":"element","tagName":"codeblockcopytag","properties":{},"children":[{"type":"text","value":"net.ipv4.ip_unprivileged_port_start=443"}]},{"type":"text","value":"\n          \n"},{"type":"element","tagName":"div","properties":{"className":["gatsby-highlight"],"dataLanguage":"sh"},"children":[{"type":"element","tagName":"pre","properties":{"className":["language-sh"]},"children":[{"type":"element","tagName":"code","properties":{"className":["language-sh"]},"children":[{"type":"element","tagName":"span","properties":{"className":["token","assign-left","variable"]},"children":[{"type":"text","value":"net.ipv4.ip_unprivileged_port_start"}]},{"type":"element","tagName":"span","properties":{"className":["token","operator"]},"children":[{"type":"text","value":"="}]},{"type":"element","tagName":"span","properties":{"className":["token","number"]},"children":[{"type":"text","value":"443"}]}]}]}]},{"type":"text","value":"\n"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"h3","properties":{"id":"environment-variables"},"children":[{"type":"text","value":"Environment variables"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"If not added please add the following parameters to your users "},{"type":"element","tagName":"code","properties":{"className":["language-text"]},"children":[{"type":"text","value":"~/.bashrc"}]},{"type":"text","value":" file:"}]},{"type":"text","value":"\n\n          "},{"type":"element","tagName":"codeblockcopytag","properties":{},"children":[{"type":"text","value":"export XDG_RUNTIME_DIR=/run/user/\\$(id -u)\nexport DBUS_SESSION_BUS_ADDRESS=\"unix:path=\\${XDG_RUNTIME_DIR}/bus\""}]},{"type":"text","value":"\n          \n"},{"type":"element","tagName":"div","properties":{"className":["gatsby-highlight"],"dataLanguage":"sh"},"children":[{"type":"element","tagName":"pre","properties":{"className":["language-sh"]},"children":[{"type":"element","tagName":"code","properties":{"className":["language-sh"]},"children":[{"type":"element","tagName":"span","properties":{"className":["token","builtin","class-name"]},"children":[{"type":"text","value":"export"}]},{"type":"text","value":" "},{"type":"element","tagName":"span","properties":{"className":["token","assign-left","variable"]},"children":[{"type":"element","tagName":"span","properties":{"className":["token","environment","constant"]},"children":[{"type":"text","value":"XDG_RUNTIME_DIR"}]}]},{"type":"element","tagName":"span","properties":{"className":["token","operator"]},"children":[{"type":"text","value":"="}]},{"type":"text","value":"/run/user/"},{"type":"element","tagName":"span","properties":{"className":["token","variable"]},"children":[{"type":"element","tagName":"span","properties":{"className":["token","variable"]},"children":[{"type":"text","value":"$("}]},{"type":"element","tagName":"span","properties":{"className":["token","function"]},"children":[{"type":"text","value":"id"}]},{"type":"text","value":" "},{"type":"element","tagName":"span","properties":{"className":["token","parameter","variable"]},"children":[{"type":"text","value":"-u"}]},{"type":"element","tagName":"span","properties":{"className":["token","variable"]},"children":[{"type":"text","value":")"}]}]},{"type":"text","value":"\n"},{"type":"element","tagName":"span","properties":{"className":["token","builtin","class-name"]},"children":[{"type":"text","value":"export"}]},{"type":"text","value":" "},{"type":"element","tagName":"span","properties":{"className":["token","assign-left","variable"]},"children":[{"type":"element","tagName":"span","properties":{"className":["token","environment","constant"]},"children":[{"type":"text","value":"DBUS_SESSION_BUS_ADDRESS"}]}]},{"type":"element","tagName":"span","properties":{"className":["token","operator"]},"children":[{"type":"text","value":"="}]},{"type":"element","tagName":"span","properties":{"className":["token","string"]},"children":[{"type":"text","value":"\"unix:path="},{"type":"element","tagName":"span","properties":{"className":["token","variable"]},"children":[{"type":"text","value":"${"},{"type":"element","tagName":"span","properties":{"className":["token","environment","constant"]},"children":[{"type":"text","value":"XDG_RUNTIME_DIR"}]},{"type":"text","value":"}"}]},{"type":"text","value":"/bus\""}]}]}]}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Please remember to reload your bash profile:"}]},{"type":"text","value":"\n\n          "},{"type":"element","tagName":"codeblockcopytag","properties":{},"children":[{"type":"text","value":"source ~/.bashrc"}]},{"type":"text","value":"\n          \n"},{"type":"element","tagName":"div","properties":{"className":["gatsby-highlight"],"dataLanguage":"sh"},"children":[{"type":"element","tagName":"pre","properties":{"className":["language-sh"]},"children":[{"type":"element","tagName":"code","properties":{"className":["language-sh"]},"children":[{"type":"element","tagName":"span","properties":{"className":["token","builtin","class-name"]},"children":[{"type":"text","value":"source"}]},{"type":"text","value":" ~/.bashrc"}]}]}]},{"type":"text","value":"\n"},{"type":"element","tagName":"h2","properties":{"id":"creating-users-are-required-directories"},"children":[{"type":"text","value":"Creating Users are Required Directories"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"When running the service in server mode it is necessary to create the following folders and change the rights on the folders. In the following commands it is assumed podman is run by the user "},{"type":"element","tagName":"code","properties":{"className":["language-text"]},"children":[{"type":"text","value":"brainwave"}]},{"type":"text","value":". Please adapt all commands accordingly."}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Create the following directories as root:"}]},{"type":"text","value":"\n\n          "},{"type":"element","tagName":"codeblockcopytag","properties":{},"children":[{"type":"text","value":"mkdir -p /var/log/brainwave\nmkdir -p /var/lib/brainwave\nmkdir -p /etc/brainwave\nmkdir -p /usr/local/brainwave"}]},{"type":"text","value":"\n          \n"},{"type":"element","tagName":"div","properties":{"className":["gatsby-highlight"],"dataLanguage":"sh"},"children":[{"type":"element","tagName":"pre","properties":{"className":["language-sh"]},"children":[{"type":"element","tagName":"code","properties":{"className":["language-sh"]},"children":[{"type":"element","tagName":"span","properties":{"className":["token","function"]},"children":[{"type":"text","value":"mkdir"}]},{"type":"text","value":" "},{"type":"element","tagName":"span","properties":{"className":["token","parameter","variable"]},"children":[{"type":"text","value":"-p"}]},{"type":"text","value":" /var/log/brainwave\n"},{"type":"element","tagName":"span","properties":{"className":["token","function"]},"children":[{"type":"text","value":"mkdir"}]},{"type":"text","value":" "},{"type":"element","tagName":"span","properties":{"className":["token","parameter","variable"]},"children":[{"type":"text","value":"-p"}]},{"type":"text","value":" /var/lib/brainwave\n"},{"type":"element","tagName":"span","properties":{"className":["token","function"]},"children":[{"type":"text","value":"mkdir"}]},{"type":"text","value":" "},{"type":"element","tagName":"span","properties":{"className":["token","parameter","variable"]},"children":[{"type":"text","value":"-p"}]},{"type":"text","value":" /etc/brainwave\n"},{"type":"element","tagName":"span","properties":{"className":["token","function"]},"children":[{"type":"text","value":"mkdir"}]},{"type":"text","value":" "},{"type":"element","tagName":"span","properties":{"className":["token","parameter","variable"]},"children":[{"type":"text","value":"-p"}]},{"type":"text","value":" /usr/local/brainwave"}]}]}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Set the owner of the new directories:"}]},{"type":"text","value":"\n\n          "},{"type":"element","tagName":"codeblockcopytag","properties":{},"children":[{"type":"text","value":"chown -Rf brainwave:brainwave /var/log/brainwave\nchown -Rf brainwave:brainwave /var/lib/brainwave\nchown -Rf brainwave:brainwave /etc/brainwave\nchown -Rf brainwave:brainwave /usr/local/brainwave"}]},{"type":"text","value":"\n          \n"},{"type":"element","tagName":"div","properties":{"className":["gatsby-highlight"],"dataLanguage":"sh"},"children":[{"type":"element","tagName":"pre","properties":{"className":["language-sh"]},"children":[{"type":"element","tagName":"code","properties":{"className":["language-sh"]},"children":[{"type":"element","tagName":"span","properties":{"className":["token","function"]},"children":[{"type":"text","value":"chown"}]},{"type":"text","value":" "},{"type":"element","tagName":"span","properties":{"className":["token","parameter","variable"]},"children":[{"type":"text","value":"-Rf"}]},{"type":"text","value":" brainwave:brainwave /var/log/brainwave\n"},{"type":"element","tagName":"span","properties":{"className":["token","function"]},"children":[{"type":"text","value":"chown"}]},{"type":"text","value":" "},{"type":"element","tagName":"span","properties":{"className":["token","parameter","variable"]},"children":[{"type":"text","value":"-Rf"}]},{"type":"text","value":" brainwave:brainwave /var/lib/brainwave\n"},{"type":"element","tagName":"span","properties":{"className":["token","function"]},"children":[{"type":"text","value":"chown"}]},{"type":"text","value":" "},{"type":"element","tagName":"span","properties":{"className":["token","parameter","variable"]},"children":[{"type":"text","value":"-Rf"}]},{"type":"text","value":" brainwave:brainwave /etc/brainwave\n"},{"type":"element","tagName":"span","properties":{"className":["token","function"]},"children":[{"type":"text","value":"chown"}]},{"type":"text","value":" "},{"type":"element","tagName":"span","properties":{"className":["token","parameter","variable"]},"children":[{"type":"text","value":"-Rf"}]},{"type":"text","value":" brainwave:brainwave /usr/local/brainwave"}]}]}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Set the permissions"}]},{"type":"text","value":"\n\n          "},{"type":"element","tagName":"codeblockcopytag","properties":{},"children":[{"type":"text","value":"chmod ug+rwx,o+rx -Rf /var/log/brainwave\nchmod ug+rwx,o+rx -Rf /var/lib/brainwave\nchmod ug+rwx,o+rx -Rf /etc/brainwave\nchmod ug+rwx,o+rx -Rf /usr/local/brainwave"}]},{"type":"text","value":"\n          \n"},{"type":"element","tagName":"div","properties":{"className":["gatsby-highlight"],"dataLanguage":"sh"},"children":[{"type":"element","tagName":"pre","properties":{"className":["language-sh"]},"children":[{"type":"element","tagName":"code","properties":{"className":["language-sh"]},"children":[{"type":"element","tagName":"span","properties":{"className":["token","function"]},"children":[{"type":"text","value":"chmod"}]},{"type":"text","value":" ug+rwx,o+rx "},{"type":"element","tagName":"span","properties":{"className":["token","parameter","variable"]},"children":[{"type":"text","value":"-Rf"}]},{"type":"text","value":" /var/log/brainwave\n"},{"type":"element","tagName":"span","properties":{"className":["token","function"]},"children":[{"type":"text","value":"chmod"}]},{"type":"text","value":" ug+rwx,o+rx "},{"type":"element","tagName":"span","properties":{"className":["token","parameter","variable"]},"children":[{"type":"text","value":"-Rf"}]},{"type":"text","value":" /var/lib/brainwave\n"},{"type":"element","tagName":"span","properties":{"className":["token","function"]},"children":[{"type":"text","value":"chmod"}]},{"type":"text","value":" ug+rwx,o+rx "},{"type":"element","tagName":"span","properties":{"className":["token","parameter","variable"]},"children":[{"type":"text","value":"-Rf"}]},{"type":"text","value":" /etc/brainwave\n"},{"type":"element","tagName":"span","properties":{"className":["token","function"]},"children":[{"type":"text","value":"chmod"}]},{"type":"text","value":" ug+rwx,o+rx "},{"type":"element","tagName":"span","properties":{"className":["token","parameter","variable"]},"children":[{"type":"text","value":"-Rf"}]},{"type":"text","value":" /usr/local/brainwave"}]}]}]},{"type":"text","value":"\n"},{"type":"element","tagName":"blockquote","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Please note that if permission errors are encountered after the installation phase, then it might be necessary to redo the setting of the ownership and the permissions after the installation of the solution."}]},{"type":"text","value":"\n"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"h3","properties":{"id":"folder-acls"},"children":[{"type":"text","value":"Folder ACLs"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"To allow the running of containers please insure that no ACls are positioned on the previously mentioned folder. Run the following commands as root."}]},{"type":"text","value":"\n\n          "},{"type":"element","tagName":"codeblockcopytag","properties":{},"children":[{"type":"text","value":"getfacl /var/log/brainwave\ngetfacl /var/lib/brainwave\ngetfacl /etc/brainwave\ngetfacl /usr/local/brainwave"}]},{"type":"text","value":"\n          \n"},{"type":"element","tagName":"div","properties":{"className":["gatsby-highlight"],"dataLanguage":"sh"},"children":[{"type":"element","tagName":"pre","properties":{"className":["language-sh"]},"children":[{"type":"element","tagName":"code","properties":{"className":["language-sh"]},"children":[{"type":"text","value":"getfacl /var/log/brainwave\ngetfacl /var/lib/brainwave\ngetfacl /etc/brainwave\ngetfacl /usr/local/brainwave"}]}]}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"If ALCs are positioned it is possible to remove them using the following commands as root."}]},{"type":"text","value":"\n\n          "},{"type":"element","tagName":"codeblockcopytag","properties":{},"children":[{"type":"text","value":"setfacl -Rm d:u::rwx,d:g::rwx,d⭕:r-x /var/log/brainwave\nsetfacl -Rm d:u::rwx,d:g::rwx,d⭕:r-x /var/lib/brainwave\nsetfacl -Rm d:u::rwx,d:g::rwx,d⭕:r-x /etc/brainwave\nsetfacl -Rm d:u::rwx,d:g::rwx,d⭕:r-x /usr/local/brainwave"}]},{"type":"text","value":"\n          \n"},{"type":"element","tagName":"div","properties":{"className":["gatsby-highlight"],"dataLanguage":"sh"},"children":[{"type":"element","tagName":"pre","properties":{"className":["language-sh"]},"children":[{"type":"element","tagName":"code","properties":{"className":["language-sh"]},"children":[{"type":"text","value":"setfacl "},{"type":"element","tagName":"span","properties":{"className":["token","parameter","variable"]},"children":[{"type":"text","value":"-Rm"}]},{"type":"text","value":" d:u::rwx,d:g::rwx,d⭕:r-x /var/log/brainwave\nsetfacl "},{"type":"element","tagName":"span","properties":{"className":["token","parameter","variable"]},"children":[{"type":"text","value":"-Rm"}]},{"type":"text","value":" d:u::rwx,d:g::rwx,d⭕:r-x /var/lib/brainwave\nsetfacl "},{"type":"element","tagName":"span","properties":{"className":["token","parameter","variable"]},"children":[{"type":"text","value":"-Rm"}]},{"type":"text","value":" d:u::rwx,d:g::rwx,d⭕:r-x /etc/brainwave\nsetfacl "},{"type":"element","tagName":"span","properties":{"className":["token","parameter","variable"]},"children":[{"type":"text","value":"-Rm"}]},{"type":"text","value":" d:u::rwx,d:g::rwx,d⭕:r-x /usr/local/brainwave"}]}]}]},{"type":"text","value":"\n"},{"type":"element","tagName":"blockquote","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"[!warning] If the ACLs automatically set please check that they are not automatically overwritten."}]},{"type":"text","value":"\n"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"h2","properties":{"id":"download-and-install-brainwave-cli"},"children":[{"type":"text","value":"Download and Install Brainwave CLI"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Download the Identity Analytics tools binary and its corresponding sha256 file to verify the download, from Identity Analytics's Gitea repository "},{"type":"element","tagName":"a","properties":{"href":"https://repository.brainwavegrc.com/"},"children":[{"type":"text","value":"https://repository.brainwavegrc.com/"}]},{"type":"text","value":". You can also use the following direct link:"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"element","tagName":"a","properties":{"href":"https://repository.brainwavegrc.com/Brainwave/-/packages/generic/brainwavetools_linux_amd64/1.2"},"children":[{"type":"text","value":"https://repository.brainwavegrc.com/Brainwave/-/packages/generic/brainwavetools_linux_amd64/1.2"}]}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Verify the download:"}]},{"type":"text","value":"\n\n          "},{"type":"element","tagName":"codeblockcopytag","properties":{},"children":[{"type":"text","value":"echo \"\\$(cat brainwave.sha256)  brainwave\" | sha256sum --check"}]},{"type":"text","value":"\n          \n"},{"type":"element","tagName":"div","properties":{"className":["gatsby-highlight"],"dataLanguage":"sh"},"children":[{"type":"element","tagName":"pre","properties":{"className":["language-sh"]},"children":[{"type":"element","tagName":"code","properties":{"className":["language-sh"]},"children":[{"type":"element","tagName":"span","properties":{"className":["token","builtin","class-name"]},"children":[{"type":"text","value":"echo"}]},{"type":"text","value":" "},{"type":"element","tagName":"span","properties":{"className":["token","string"]},"children":[{"type":"text","value":"\""},{"type":"element","tagName":"span","properties":{"className":["token","variable"]},"children":[{"type":"element","tagName":"span","properties":{"className":["token","variable"]},"children":[{"type":"text","value":"$("}]},{"type":"element","tagName":"span","properties":{"className":["token","function"]},"children":[{"type":"text","value":"cat"}]},{"type":"text","value":" brainwave.sha256"},{"type":"element","tagName":"span","properties":{"className":["token","variable"]},"children":[{"type":"text","value":")"}]}]},{"type":"text","value":"  brainwave\""}]},{"type":"text","value":" "},{"type":"element","tagName":"span","properties":{"className":["token","operator"]},"children":[{"type":"text","value":"|"}]},{"type":"text","value":" sha256sum "},{"type":"element","tagName":"span","properties":{"className":["token","parameter","variable"]},"children":[{"type":"text","value":"--check"}]}]}]}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"To Install the solution run the following commands as root. It is assumed that the user "},{"type":"element","tagName":"code","properties":{"className":["language-text"]},"children":[{"type":"text","value":"brainwave"}]},{"type":"text","value":" is running the podman socket."}]},{"type":"text","value":"\n\n          "},{"type":"element","tagName":"codeblockcopytag","properties":{},"children":[{"type":"text","value":"mkdir -p /usr/local/bin\ncp brainwave /usr/local/bin/brainwave\nchown brainwave:brainwave /usr/local/bin/brainwave\nchmod ug+x /usr/local/bin/brainwave"}]},{"type":"text","value":"\n          \n"},{"type":"element","tagName":"div","properties":{"className":["gatsby-highlight"],"dataLanguage":"sh"},"children":[{"type":"element","tagName":"pre","properties":{"className":["language-sh"]},"children":[{"type":"element","tagName":"code","properties":{"className":["language-sh"]},"children":[{"type":"element","tagName":"span","properties":{"className":["token","function"]},"children":[{"type":"text","value":"mkdir"}]},{"type":"text","value":" "},{"type":"element","tagName":"span","properties":{"className":["token","parameter","variable"]},"children":[{"type":"text","value":"-p"}]},{"type":"text","value":" /usr/local/bin\n"},{"type":"element","tagName":"span","properties":{"className":["token","function"]},"children":[{"type":"text","value":"cp"}]},{"type":"text","value":" brainwave /usr/local/bin/brainwave\n"},{"type":"element","tagName":"span","properties":{"className":["token","function"]},"children":[{"type":"text","value":"chown"}]},{"type":"text","value":" brainwave:brainwave /usr/local/bin/brainwave\n"},{"type":"element","tagName":"span","properties":{"className":["token","function"]},"children":[{"type":"text","value":"chmod"}]},{"type":"text","value":" ug+x /usr/local/bin/brainwave"}]}]}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"As root add the current user to the brainwave group"}]},{"type":"text","value":"\n\n          "},{"type":"element","tagName":"codeblockcopytag","properties":{},"children":[{"type":"text","value":"gpasswd -a \\$(whoami) brainwave"}]},{"type":"text","value":"\n          \n"},{"type":"element","tagName":"div","properties":{"className":["gatsby-highlight"],"dataLanguage":"sh"},"children":[{"type":"element","tagName":"pre","properties":{"className":["language-sh"]},"children":[{"type":"element","tagName":"code","properties":{"className":["language-sh"]},"children":[{"type":"text","value":"gpasswd "},{"type":"element","tagName":"span","properties":{"className":["token","parameter","variable"]},"children":[{"type":"text","value":"-a"}]},{"type":"text","value":" "},{"type":"element","tagName":"span","properties":{"className":["token","variable"]},"children":[{"type":"element","tagName":"span","properties":{"className":["token","variable"]},"children":[{"type":"text","value":"$("}]},{"type":"element","tagName":"span","properties":{"className":["token","function"]},"children":[{"type":"text","value":"whoami"}]},{"type":"element","tagName":"span","properties":{"className":["token","variable"]},"children":[{"type":"text","value":")"}]}]},{"type":"text","value":" brainwave"}]}]}]},{"type":"text","value":"\n"},{"type":"element","tagName":"blockquote","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"[!warning] Log out and log back in, to make sure your user gets the permissions to run Identity Analytics commands "},{"type":"element","tagName":"code","properties":{"className":["language-text"]},"children":[{"type":"text","value":"brainwave XXXX"}]}]},{"type":"text","value":"\n"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"h2","properties":{"id":"brainwave-registry"},"children":[{"type":"text","value":"Brainwave Registry"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"blockquote","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"[!warning]"},{"type":"element","tagName":"br","properties":{},"children":[]},{"type":"text","value":"\nAll the following commands must be executed as the user running the service (e.g. brainwave)."}]},{"type":"text","value":"\n"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"It is necessary to log into the docker registry for Identity Analytics to be able to pull the desired images:"}]},{"type":"text","value":"\n\n          "},{"type":"element","tagName":"codeblockcopytag","properties":{},"children":[{"type":"text","value":"podman login brainwave.azurecr.io"}]},{"type":"text","value":"\n          \n"},{"type":"element","tagName":"div","properties":{"className":["gatsby-highlight"],"dataLanguage":"sh"},"children":[{"type":"element","tagName":"pre","properties":{"className":["language-sh"]},"children":[{"type":"element","tagName":"code","properties":{"className":["language-sh"]},"children":[{"type":"element","tagName":"span","properties":{"className":["token","function"]},"children":[{"type":"text","value":"podman"}]},{"type":"text","value":" login brainwave.azurecr.io"}]}]}]},{"type":"text","value":"\n"},{"type":"element","tagName":"h2","properties":{"id":"installation"},"children":[{"type":"text","value":"Installation"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"To install the solution in server mode please use the following command:"}]},{"type":"text","value":"\n\n          "},{"type":"element","tagName":"codeblockcopytag","properties":{},"children":[{"type":"text","value":"brainwave install --project-name brainwave --server\nbrainwave pull"}]},{"type":"text","value":"\n          \n"},{"type":"element","tagName":"div","properties":{"className":["gatsby-highlight"],"dataLanguage":"sh"},"children":[{"type":"element","tagName":"pre","properties":{"className":["language-sh"]},"children":[{"type":"element","tagName":"code","properties":{"className":["language-sh"]},"children":[{"type":"text","value":"brainwave "},{"type":"element","tagName":"span","properties":{"className":["token","function"]},"children":[{"type":"text","value":"install"}]},{"type":"text","value":" --project-name brainwave "},{"type":"element","tagName":"span","properties":{"className":["token","parameter","variable"]},"children":[{"type":"text","value":"--server"}]},{"type":"text","value":"\nbrainwave pull"}]}]}]},{"type":"text","value":"\n"},{"type":"element","tagName":"h2","properties":{"id":"initial-configuration"},"children":[{"type":"text","value":"Initial configuration"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"blockquote","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"[!note] The hostname "},{"type":"element","tagName":"code","properties":{"className":["language-text"]},"children":[{"type":"text","value":"brainwave.local"}]},{"type":"text","value":" used below is provided as an example for the command line. The parameter should be updated to your context, the hostname of the machine hosting the docker service."},{"type":"element","tagName":"br","properties":{},"children":[]},{"type":"text","value":"\nThe hostname value "},{"type":"element","tagName":"strong","properties":{},"children":[{"type":"text","value":"must"}]},{"type":"text","value":" be "},{"type":"element","tagName":"code","properties":{"className":["language-text"]},"children":[{"type":"text","value":"lowercase"}]}]},{"type":"text","value":"\n"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Before starting the services, set up the hostname"}]},{"type":"text","value":"\n\n          "},{"type":"element","tagName":"codeblockcopytag","properties":{},"children":[{"type":"text","value":"brainwave config --hostname brainwave.local"}]},{"type":"text","value":"\n          \n"},{"type":"element","tagName":"div","properties":{"className":["gatsby-highlight"],"dataLanguage":"sh"},"children":[{"type":"element","tagName":"pre","properties":{"className":["language-sh"]},"children":[{"type":"element","tagName":"code","properties":{"className":["language-sh"]},"children":[{"type":"text","value":"brainwave config "},{"type":"element","tagName":"span","properties":{"className":["token","parameter","variable"]},"children":[{"type":"text","value":"--hostname"}]},{"type":"text","value":" brainwave.local"}]}]}]},{"type":"text","value":"\n"},{"type":"element","tagName":"h2","properties":{"id":"tls-configuration-optional"},"children":[{"type":"text","value":"TLS configuration (Optional)"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"To activate tls"}]},{"type":"text","value":"\n\n          "},{"type":"element","tagName":"codeblockcopytag","properties":{},"children":[{"type":"text","value":"brainwave config --tls"}]},{"type":"text","value":"\n          \n"},{"type":"element","tagName":"div","properties":{"className":["gatsby-highlight"],"dataLanguage":"sh"},"children":[{"type":"element","tagName":"pre","properties":{"className":["language-sh"]},"children":[{"type":"element","tagName":"code","properties":{"className":["language-sh"]},"children":[{"type":"text","value":"brainwave config "},{"type":"element","tagName":"span","properties":{"className":["token","parameter","variable"]},"children":[{"type":"text","value":"--tls"}]}]}]}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Before starting the service it is necessary to copy the certificate and the private key into the certificates folder"}]},{"type":"text","value":"\n\n          "},{"type":"element","tagName":"codeblockcopytag","properties":{},"children":[{"type":"text","value":"cp brainwave.local.key /etc/brainwave/certificates/brainwave.local.key\ncp brainwave.local.crt /etc/brainwave/certificates/brainwave.local.crt"}]},{"type":"text","value":"\n          \n"},{"type":"element","tagName":"div","properties":{"className":["gatsby-highlight"],"dataLanguage":"sh"},"children":[{"type":"element","tagName":"pre","properties":{"className":["language-sh"]},"children":[{"type":"element","tagName":"code","properties":{"className":["language-sh"]},"children":[{"type":"element","tagName":"span","properties":{"className":["token","function"]},"children":[{"type":"text","value":"cp"}]},{"type":"text","value":" brainwave.local.key /etc/brainwave/certificates/brainwave.local.key\n"},{"type":"element","tagName":"span","properties":{"className":["token","function"]},"children":[{"type":"text","value":"cp"}]},{"type":"text","value":" brainwave.local.crt /etc/brainwave/certificates/brainwave.local.crt"}]}]}]},{"type":"text","value":"\n"},{"type":"element","tagName":"blockquote","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Note that the filename musth match the domain name. More generally the files have to be named "},{"type":"element","tagName":"code","properties":{"className":["language-text"]},"children":[{"type":"text","value":"<hostname>.crt"}]},{"type":"text","value":" and "},{"type":"element","tagName":"code","properties":{"className":["language-text"]},"children":[{"type":"text","value":"<hostname>.key"}]}]},{"type":"text","value":"\n"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Please refer to the following page for more information:"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"element","tagName":"a","properties":{"href":"../configuration/ssl-configuration"},"children":[{"type":"text","value":"SSL configuration page"}]}]},{"type":"text","value":"\n"},{"type":"element","tagName":"h2","properties":{"id":"starting-the-services"},"children":[{"type":"text","value":"Starting the Services"}]},{"type":"text","value":"\n\n          "},{"type":"element","tagName":"codeblockcopytag","properties":{},"children":[{"type":"text","value":"brainwave start"}]},{"type":"text","value":"\n          \n"},{"type":"element","tagName":"div","properties":{"className":["gatsby-highlight"],"dataLanguage":"sh"},"children":[{"type":"element","tagName":"pre","properties":{"className":["language-sh"]},"children":[{"type":"element","tagName":"code","properties":{"className":["language-sh"]},"children":[{"type":"text","value":"brainwave start"}]}]}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Once installed navigate to the "},{"type":"element","tagName":"code","properties":{"className":["language-text"]},"children":[{"type":"text","value":"/config"}]},{"type":"text","value":" webpage to finalize the configuration. Please see "},{"type":"element","tagName":"a","properties":{"href":"/configuration/config-ui"},"children":[{"type":"text","value":"here"}]},{"type":"text","value":" for more information."}]},{"type":"text","value":"\n"},{"type":"element","tagName":"h2","properties":{"id":"auto-completion"},"children":[{"type":"text","value":"Auto completion"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"An auto completion bash exists for linux environments. Add the following command line to your users bash profile:"}]},{"type":"text","value":"\n\n          "},{"type":"element","tagName":"codeblockcopytag","properties":{},"children":[{"type":"text","value":"source <(brainwave completion bash)"}]},{"type":"text","value":"\n          \n"},{"type":"element","tagName":"div","properties":{"className":["gatsby-highlight"],"dataLanguage":"sh"},"children":[{"type":"element","tagName":"pre","properties":{"className":["language-sh"]},"children":[{"type":"element","tagName":"code","properties":{"className":["language-sh"]},"children":[{"type":"element","tagName":"span","properties":{"className":["token","builtin","class-name"]},"children":[{"type":"text","value":"source"}]},{"type":"text","value":" "},{"type":"element","tagName":"span","properties":{"className":["token","operator"]},"children":[{"type":"text","value":"<"}]},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":"("}]},{"type":"text","value":"brainwave completion "},{"type":"element","tagName":"span","properties":{"className":["token","function"]},"children":[{"type":"text","value":"bash"}]},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":")"}]}]}]}]}],"data":{"quirksMode":false}},"fileAbsolutePath":"/home/runner/work/developer-site/developer-site/.cache/gatsby-source-git/ia/version-1.5/documentation/installation/rhel.md","frontmatter":{"title":"Red Hat installation"},"headings":[{"id":"red-hat-installation","value":"Red Hat installation","depth":1},{"id":"install-podman","value":"Install Podman","depth":2},{"id":"red-hat-8-requirements","value":"Red Hat 8 requirements","depth":3},{"id":"podman-requirements","value":"Podman requirements","depth":3},{"id":"port-configuration","value":"Port configuration","depth":3},{"id":"environment-variables","value":"Environment variables","depth":3},{"id":"creating-users-are-required-directories","value":"Creating Users are Required Directories","depth":2},{"id":"folder-acls","value":"Folder ACLs","depth":3},{"id":"download-and-install-brainwave-cli","value":"Download and Install Brainwave CLI","depth":2},{"id":"brainwave-registry","value":"Brainwave Registry","depth":2},{"id":"installation","value":"Installation","depth":2},{"id":"initial-configuration","value":"Initial configuration","depth":2},{"id":"tls-configuration-optional","value":"TLS configuration (Optional)","depth":2},{"id":"starting-the-services","value":"Starting the Services","depth":2},{"id":"auto-completion","value":"Auto completion","depth":2}]},"toc":{"html":"<ul>\n<li><a href=\"preface.md\">Preface</a></li>\n<li><a href=\"debian.md\">Debian installation</a></li>\n<li><a href=\"rhel.md\">RedHat</a></li>\n<li><a href=\"windows-desktop.md\">Windows Desktop installation</a></li>\n</ul>","htmlAst":{"type":"root","children":[{"type":"element","tagName":"ul","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"element","tagName":"a","properties":{"href":"preface.md"},"children":[{"type":"text","value":"Preface"}]}]},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"element","tagName":"a","properties":{"href":"debian.md"},"children":[{"type":"text","value":"Debian installation"}]}]},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"element","tagName":"a","properties":{"href":"rhel.md"},"children":[{"type":"text","value":"RedHat"}]}]},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"element","tagName":"a","properties":{"href":"windows-desktop.md"},"children":[{"type":"text","value":"Windows Desktop installation"}]}]},{"type":"text","value":"\n"}]}],"data":{"quirksMode":false}},"fileAbsolutePath":"/home/runner/work/developer-site/developer-site/.cache/gatsby-source-git/ia/version-1.5/documentation/installation/TOC.md","frontmatter":{"title":"Installation"}}},"pageContext":{"urlPrefix":"ia/version-1.5","absolutePath":"/home/runner/work/developer-site/developer-site/.cache/gatsby-source-git/ia/version-1.5/documentation/installation/rhel.md","tocRegex":"/(ia/)(version-1.5/)?(documentation/)?(installation/)?(rhel.md/)?(TOC.md)/ig","versions":[{"name":"version-1.5","displayName":"v1.5"},{"name":"version-1.4","displayName":"v1.4"},{"name":"version-1.2","displayName":"v1.2"}],"currentRepo":{"name":"ia","displayName":"Identity Analytics","description":"This guide provides a high-level overview of Identity Analytics. This documentation includes the user guides, integration guides for Identity Analytics along with the different modules included.","links":[{"text":"SEE SELF-MANAGED GUIDES","href":"/ia/version-1.5/#2"}],"remote":"https://github.com/radiantlogic-v8/documentation-ia-selfmanaged.git","patterns":["home-pages/**","documentation/**"],"deployBranches":[{"name":"version-1.5","displayName":"v1.5"},{"name":"version-1.4","displayName":"v1.4"},{"name":"version-1.2","displayName":"v1.2"}]},"currentRepoWebLink":"https://github.com/radiantlogic-v8/documentation-ia-selfmanaged","currentVersion":{"name":"version-1.5","displayName":"v1.5"},"title":"Red Hat installation","description":"Identity Analytics self-managed installation on Red Hat","tocForCurrentSection":{"textElement":"Installation","href":null,"children":[{"textElement":"Debian","href":"installation/debian","children":[]},{"textElement":"Deployment options","href":"installation/deployment-options","children":[]},{"textElement":"Hidden","href":null,"children":[{"textElement":"Rocky","href":"installation/hidden/rocky","children":[]}]},{"textElement":"Preface","href":"installation/preface","children":[]},{"textElement":"Rhel","href":"installation/rhel","children":[]},{"textElement":"Self managed","href":"installation/self-managed","children":[]},{"textElement":"T O C","href":"installation/TOC","children":[]},{"textElement":"Windows desktop","href":"installation/windows-desktop","children":[]}]}}},"staticQueryHashes":["63159454"],"slicesMap":{"footer":"footer","header":"header"}}