{"componentChunkName":"component---src-templates-base-page-js","path":"/ia/descartes/igrc-platform/collector/05-macros-and-scripts/","result":{"data":{"pageContent":{"html":"<h1 id=\"macros-and-scripts\">Macros and Scripts</h1>\n<h2 id=\"javascript-syntax\">JavaScript syntax</h2>\n<p>The APIs described in this chapter can be used in both macros in JavaScript.</p>\n<p>A macro is a JavaScript expression inserted into a component property field. For example, the CSV source component asks for the name of a CSV file to be processed. An absolute path may be entered in this field. However, it is possible to insert a JavaScript expression to make the constitution of the file path dynamic. The expression must be enclosed in brackets to be identified as such by the collector engine when running. Everything between these brackets is executed and the result replaces the JavaScript expression as shown in the following example:</p>\n\n          <codeblockcopytag>{config.my_directory}\\rh.csv</codeblockcopytag>\n          \n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token punctuation\">{</span>config<span class=\"token punctuation\">.</span>my_directory<span class=\"token punctuation\">}</span>\\rh<span class=\"token punctuation\">.</span>csv</code></pre></div>\n<p>In the example above, the <code class=\"language-text\">my_directory</code> configuration variable contains <code class=\"language-text\">C:\\Users\\Paul</code>. At runtime, the collector engine replaces the expression in brackets with the result, which gives the following path: <code class=\"language-text\">C:\\Users\\Paul\\rh.csv</code></p>\n<p>A JavaScript script is a file with the extension <code class=\"language-text\">.javascript</code>. This file is associated with the collector line and may contain all the functions called by components, for example, from a source script, a filter script, or a transition, to make its transfer conditional.</p>\n<p>The major difference in syntax between a macro and a JavaScript script is that the macro can only contain an expression, not an entire script. This means that all the keywords such as <code class=\"language-text\">for,while, if</code> ... are forbidden in macros.</p>\n<p>JavaScript syntax is not described in this document because it is standard, since the product uses the Mozilla Foundation's Rhino scripting engine. Note that ternary expressions may be used in macros and in JavaScript. The syntax is:</p>\n\n          <codeblockcopytag>condition ? expression_if_true: expression_if_false</codeblockcopytag>\n          \n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\">condition <span class=\"token operator\">?</span> expression_if_true<span class=\"token operator\">:</span> expression_if_false</code></pre></div>\n<p>The following example shows how to test if <code class=\"language-text\">my_directory</code> variable is not empty. If the variable is empty, it is replaced by a default path in Windows. Ternary expressions are very useful in macros as they allow you to test without the if keyword, which is forbidden:</p>\n\n          <codeblockcopytag>{config.my_directory.length != 0 ? config.my_directory : &quot;C:\\Windows\\Temp\\rh.csv&quot;}</codeblockcopytag>\n          \n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token punctuation\">{</span>config<span class=\"token punctuation\">.</span>my_directory<span class=\"token punctuation\">.</span>length <span class=\"token operator\">!=</span> <span class=\"token number\">0</span> <span class=\"token operator\">?</span> config<span class=\"token punctuation\">.</span>my_directory <span class=\"token operator\">:</span> <span class=\"token string\">\"C:\\Windows\\Temp\\rh.csv\"</span><span class=\"token punctuation\">}</span></code></pre></div>\n<p>Ternary expressions may be nested. It is therefore important to use parentheses to clearly delimit each part and avoid any ambiguity during runtime.</p>\n<h2 id=\"config-variable\">Config variable</h2>\n<p>The <code class=\"language-text\">config</code> variable is available when running the collector line, and contains all the configuration values of the line and of the project configuration. All the configuration settings are present in the <code class=\"language-text\">config</code> object and accessible as properties. Values are always <code class=\"language-text\">String</code> types.</p>\n<p>These settings affect the behavior of the collector line. They allow us to avoid the presence of hard-coded values such as file names in the collector line settings. For example, for a CSV source, the <code class=\"language-text\">CSVfile</code> field may be filled with a macro instead of hard-coding <code class=\"language-text\">C:\\data.csv</code>, as shown in the following example: <code class=\"language-text\">{config.csvfile}</code></p>\n<p>The <code class=\"language-text\">csvfile</code> setting is declared in the collector line with <code class=\"language-text\">C:\\data.csv</code> as its value.</p>\n<p>A configuration setting may be declared at the project level or at the collector line level. If a setting with the same name is declared on both levels, the collector level setting is used. This allows you to set a default value at the project level and override it in a collector line.</p>\n<p>The <code class=\"language-text\">config</code> variable is also present in scripting: <code class=\"language-text\">print(config.csvfile);</code></p>\n<p>There are two properties automatically filled in in the <code class=\"language-text\">config</code> variable:</p>\n<ul>\n<li><code class=\"language-text\">projectPath</code>: is the absolute path of the project.</li>\n<li><code class=\"language-text\">databaseName</code>: is the name of the database configuration.</li>\n</ul>\n<h2 id=\"dataset-variables\">Dataset variables</h2>\n<p>A dataset is a collector of attributes, where each attribute may contain multiple values. The dataset is the element which is passed between the components of a collector line. It may be altered or completed by each component.</p>\n<p>When a collector line runs, the <code class=\"language-text\">dataset</code> variable is implicitly declared and contains the current dataset. It is thus possible to reach the content of the dataset within a component (for example, in the modifying component in the form of a macro) or in JavaScript.</p>\n<p>A collector line has a data pattern. The pattern lists all the attribute names declared in each component and their characteristics (type of attribute and multivalued indicator). The pattern helps to offer completion of the attributes in the collector line editor. It is also used when the collector line runs to performing implicit operations of data conversion. For example, when an attribute is declared by a source component as <code class=\"language-text\">date</code> type, it can be upgraded or modified by another component by passing a string. The collector engine converts the value according to the declaration in the pattern.</p>\n<p>The pattern is shown in the collector line editor in the Properties view when no component is selected.</p>\n<p>You cannot bypass the pattern while the line collector is running. An attribute can only receive values of the type declared in the pattern (after implicit conversion if needed). On the other hand, it is quite possible at runtime to dynamically add new attributes whose characteristics you specify (type of attribute and multivalued indicator) in the constructor of the <code class=\"language-text\">Attribute</code> class.</p>\n<blockquote>\n<p>[!warning] Having declared an attribute in the pattern (for example, in a source type component) does not add the attribute in the dataset at runtime. The attribute is only present if it is added by component or a script. The standard behavior of the source type components (for example, CSV) is to create the attribute in the dataset only if a value is present in the file. In the case of a CSV file, if the <code class=\"language-text\">uniqueID</code> column is empty for some records, the dataset will not contain the <code class=\"language-text\">uniqueID</code> attribute for records that have no value in this column. When trying to read an attribute not present in the dataset, <code class=\"language-text\">null</code> is returned. Therefore, we have to test this value before manipulating the data, as shown in the following code:</p>\n\n          <codeblockcopytag>var attr = dataset.get(&quot;unique_ID&quot;);</codeblockcopytag>\n          \n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">var</span> attr <span class=\"token operator\">=</span> dataset<span class=\"token punctuation\">.</span><span class=\"token function\">get</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"unique_ID\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n</blockquote>\n<blockquote>\n<p>if (attr != null) {\r\nprint(attr);\r\n}</p>\n\n          <codeblockcopytag></codeblockcopytag>\n          \n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\"></code></pre></div>\n</blockquote>\n<p>This test should also be done in macros, for example, in the modifying component. The following code is a macro component set in the modifying component in order to capitalize the <code class=\"language-text\">unique_ID</code>. Since the unique ID may be absent, you must use a ternary expression to process the case of a <code class=\"language-text\">null</code> attribute:</p>\n\n          <codeblockcopytag>{dataset.unique_ID != null ? dataset.unique_ID.get().toUpperCase(): ''}</codeblockcopytag>\n          \n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token punctuation\">{</span>dataset<span class=\"token punctuation\">.</span>unique_ID <span class=\"token operator\">!=</span> <span class=\"token keyword\">null</span> <span class=\"token operator\">?</span> dataset<span class=\"token punctuation\">.</span>unique_ID<span class=\"token punctuation\">.</span><span class=\"token function\">get</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">toUpperCase</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token operator\">:</span> <span class=\"token string\">''</span><span class=\"token punctuation\">}</span></code></pre></div>\n<p>This macro tests whether the attribute exists in the dataset. If it does, it returns the contents of the unique ID, capitalized. Otherwise, it returns an empty string.</p>\n<p>Let's take the example of an attribute called <code class=\"language-text\">myAttribute</code>, declared in a modifying component and valuated by a script. The following code allows us to add the attribute to the dataset with a value:</p>\n\n          <codeblockcopytag>var attr = new Attribute(&quot;myAttribute&quot;);\r\n\r\nattr.set(&quot;Paul&quot;);\r\ndataset.add(attr);</codeblockcopytag>\n          \n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">var</span> attr <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Attribute</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"myAttribute\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n\r\nattr<span class=\"token punctuation\">.</span><span class=\"token function\">set</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Paul\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\ndataset<span class=\"token punctuation\">.</span><span class=\"token function\">add</span><span class=\"token punctuation\">(</span>attr<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p>In the example above, the first line creates an attribute without specifying the type of data or the multivalued indicator, because with the name of the attribute, the collector engine finds this information in the pattern.</p>\n<p>In the case of an attribute missing from the pattern, you must specify all the information as shown in the following example. The pattern is then completed dynamically with a new attribute.</p>\n\n          <codeblockcopytag>var attr = new Attribute(&quot;myAttribute&quot;, &quot;String&quot;, false);\r\n\r\nattr.set(&quot;Paul&quot;);\r\ndataset.add(attr);</codeblockcopytag>\n          \n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">var</span> attr <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Attribute</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"myAttribute\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"String\"</span><span class=\"token punctuation\">,</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n\r\nattr<span class=\"token punctuation\">.</span><span class=\"token function\">set</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Paul\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\ndataset<span class=\"token punctuation\">.</span><span class=\"token function\">add</span><span class=\"token punctuation\">(</span>attr<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p>In the example above, the first line creates an attribute that does not exist in the pattern. The attribute is declared as being a <code class=\"language-text\">String</code> type and single-valued (multivalued parameter set to <code class=\"language-text\">false</code>).</p>\n<p>A dataset also contains a list of events. These events contribute to the identification of rejects or records with an anomaly. These events can be used in transitions between components to create conditional forking. Writing a JavaScript function is necessary to test for the presence of an event and to allow the transition to the next component or not. The following code shows a function that prevents it from moving to the next component if the <code class=\"language-text\">empty_unique_ID</code> event is detected:</p>\n\n          <codeblockcopytag>function testUniqueID() {\r\n  return ! dataset.hasEvent(&quot;empty unique ID&quot;);\r\n}</codeblockcopytag>\n          \n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">function</span> <span class=\"token function\">testUniqueID</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\r\n  <span class=\"token keyword\">return</span> <span class=\"token operator\">!</span> dataset<span class=\"token punctuation\">.</span><span class=\"token function\">hasEvent</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"empty unique ID\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>The <code class=\"language-text\">testUniqueID</code> function is configured in the transaction. When the dataset contains an <code class=\"language-text\">empty_unique_ID</code> event, the JavaScript function returns <code class=\"language-text\">false</code> which prohibits from moving on to the next component.</p>\n<p>It is important to note that the events present in the dataset have a very limited lifespan because they are deleted upon entering each component to avoid their accumulation while running through the dataset of the whole collector line.</p>\n<h2 id=\"dataset-class-api\">Dataset class API</h2>\n<p>The DataSet class contains the APIs to manipulate both the dataset (the attributes) and the events. It provides access to the attributes in the form of methods and properties.</p>\n<h3 id=\"properties-corresponding-to-the-pattern\">Properties corresponding to the pattern</h3>\n<p>All the attributes of the dataset are available in the form of properties. This allows syntax like <code class=\"language-text\">dataset.attribute</code> as shown in the following example for the <code class=\"language-text\">first_name</code> attribute: <code class=\"language-text\">var attr =dataset.first_name;</code></p>\n<p>Note that the returned value is an <code class=\"language-text\">Attribute</code> type object, not the value of the attribute. So to retrieve the first name, you must use the <code class=\"language-text\">get</code> method like this:</p>\n\n          <codeblockcopytag>var attr = dataset.first_name;\r\n\r\nif (attr != null) {\r\n  print(attr.get());\r\n</codeblockcopytag>\n          \n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">var</span> attr <span class=\"token operator\">=</span> dataset<span class=\"token punctuation\">.</span>first_name<span class=\"token punctuation\">;</span>\r\n\r\n<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>attr <span class=\"token operator\">!=</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\r\n  <span class=\"token function\">print</span><span class=\"token punctuation\">(</span>attr<span class=\"token punctuation\">.</span><span class=\"token function\">get</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n</code></pre></div>\n<blockquote>\n<p>[!warning] If the attribute does not exist in the dataset, the value returned is <code class=\"language-text\">null</code>. It is therefore necessary to test whether the returned value is a valid attribute (not null) before using the <code class=\"language-text\">get</code> method.</p>\n</blockquote>\n<p>Properties are read- and write-accessible. In write mode, the attribute is replaced by the new attribute. If the attribute does not exist in the dataset, it is added. The following example shows how to add a new single-valued <code class=\"language-text\">String</code> type attribute to the data set:</p>\n\n          <codeblockcopytag>var attr = new Attribute(&quot;myAttribute&quot;, &quot;String&quot;, false);\r\n\r\nattr.set(&quot;Paul&quot;);\r\ndataset.myAttribute = attr;</codeblockcopytag>\n          \n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">var</span> attr <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Attribute</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"myAttribute\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"String\"</span><span class=\"token punctuation\">,</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n\r\nattr<span class=\"token punctuation\">.</span><span class=\"token function\">set</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Paul\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\ndataset<span class=\"token punctuation\">.</span>myAttribute <span class=\"token operator\">=</span> attr<span class=\"token punctuation\">;</span></code></pre></div>\n<p>The first line creates a new attribute called <em>myAttribute</em> but which is not yet added to the dataset. The second line sets the value of the attribute. The third line adds the attribute to the dataset. Note that the attribute name is repeated in the third line. This syntax allows you to replace or add an attribute regardless of whether the dataset contained an attribute with the same name or not.</p>\n<p>Syntax using the <code class=\"language-text\">dataset</code> APIs allows you to obtain the same result, as shown in the following code:</p>\n\n          <codeblockcopytag>var attr = new Attribute(&quot;myAttribute&quot;, &quot;String&quot;, false);\r\n\r\nattr.set(&quot;Paul&quot;);\r\ndataset.remove(&quot;myAttribute&quot;);\r\ndataset.add(attr);</codeblockcopytag>\n          \n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">var</span> attr <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Attribute</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"myAttribute\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"String\"</span><span class=\"token punctuation\">,</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n\r\nattr<span class=\"token punctuation\">.</span><span class=\"token function\">set</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Paul\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\ndataset<span class=\"token punctuation\">.</span><span class=\"token function\">remove</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"myAttribute\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\ndataset<span class=\"token punctuation\">.</span><span class=\"token function\">add</span><span class=\"token punctuation\">(</span>attr<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p>The <code class=\"language-text\">add</code> method of the <code class=\"language-text\">dataset</code> object adds an attribute to the dataset only if it does not already exist. You must therefore remove the attribute with the <code class=\"language-text\">remove</code> method before adding it to process a replacement.</p>\n<p>It is also possible to add or replace an attribute by just providing a value, like this: <code class=\"language-text\">dataset.myAttribute = \"Paul\";</code></p>\n<p>Note that this is only a shortcut. In reality, the value is not added directly to the dataset. An attribute is created with the name <code class=\"language-text\">myAttribute</code>, then the value is stored in the attribute, then the attribute is added to the dataset.</p>\n<h3 id=\"length-property\">Length property</h3>\n<p>The length property returns the number of attributes present in the dataset. An attribute can be empty or contain one or more values.</p>\n<p>This property may be used to list the attributes of the dataset using a for loop as in the following example:</p>\n\n          <codeblockcopytag>for (var i = 0; i &lt; dataset.length; i++) {\r\n  var attr = dataset.get(i);\r\n  print(attr);\r\n}</codeblockcopytag>\n          \n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">var</span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> dataset<span class=\"token punctuation\">.</span>length<span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\r\n  <span class=\"token keyword\">var</span> attr <span class=\"token operator\">=</span> dataset<span class=\"token punctuation\">.</span><span class=\"token function\">get</span><span class=\"token punctuation\">(</span>i<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n  <span class=\"token function\">print</span><span class=\"token punctuation\">(</span>attr<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>An easier way to list the attributes of the dataset is to use another variant of the for loop like this:</p>\n\n          <codeblockcopytag>for (var attr in dataset) {\r\n  print(attr);\r\n}</codeblockcopytag>\n          \n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">var</span> attr <span class=\"token keyword\">in</span> dataset<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\r\n  <span class=\"token function\">print</span><span class=\"token punctuation\">(</span>attr<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n<span class=\"token punctuation\">}</span></code></pre></div>\n<h3 id=\"add-method\">Add method</h3>\n<p>Adds an attribute in the dataset. The dataset does not accept duplicate attribute names. If an attribute with the same name already exists, the operation fails. To replace an attribute with the same name, you must first delete the data set with the <code class=\"language-text\">remove</code> method. The <code class=\"language-text\">add</code> method accepts either an <code class=\"language-text\">Attribute</code> type object or an attribute name. In the case of a call with an attribute name, the attribute will be created with the type declared in the pattern. If the pattern does not know the name, the created attribute is a <code class=\"language-text\">String</code> type, and single-valued. To change these characteristics, it is possible to pass two additional parameters.</p>\n<p><strong>Signature</strong>:</p>\n<ul>\n<li><code class=\"language-text\">add(name_or_attribute, [type], [multivalued])</code>: Attribute</li>\n</ul>\n<p><strong>Return value</strong>:</p>\n<ul>\n<li>The attribute added or null if the add failed</li>\n</ul>\n<p><strong>Parameters</strong>:</p>\n<ul>\n<li><code class=\"language-text\">name_or_attribute</code>: <code class=\"language-text\">Attribute</code> or <code class=\"language-text\">String</code>. Name of the attribute or <code class=\"language-text\">Attribute</code> type object. If this parameter is a string, two additional parameters can specify the type and whether the attribute is multivalued.</li>\n<li><code class=\"language-text\">type</code>: <code class=\"language-text\">String</code> (optional) Attribute type (<code class=\"language-text\">String, Boolean, Number</code> or <code class=\"language-text\">Date</code>). Ignored if the parameter <code class=\"language-text\">name_or_attribute</code> is an <code class=\"language-text\">Attribute</code> type.</li>\n<li><code class=\"language-text\">multivalued: Boolean</code> (optional). Indicates whether the attribute to be created should be multivalued. Ignored if the parameter <code class=\"language-text\">name_or_attribute</code> is an <code class=\"language-text\">Attribute</code> type.</li>\n</ul>\n<p><strong>Example call</strong>:</p>\n\n          <codeblockcopytag>var attr = new Attribute(&quot;myAttribute&quot;, &quot;String&quot;, false);\r\n\r\nattr.set(&quot;Paul&quot;);\r\ndataset.add(attr);</codeblockcopytag>\n          \n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">var</span> attr <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Attribute</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"myAttribute\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"String\"</span><span class=\"token punctuation\">,</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n\r\nattr<span class=\"token punctuation\">.</span><span class=\"token function\">set</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Paul\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\ndataset<span class=\"token punctuation\">.</span><span class=\"token function\">add</span><span class=\"token punctuation\">(</span>attr<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<h3 id=\"duplicate-method\">Duplicate method</h3>\n<p>Duplicates an attribute present in the dataset under a new name.\r\nThe new name must be unique. The set of values is duplicated so that the two do not share any attribute value. Note that both attributes are now considered different by the equals method because of their name.</p>\n<p><strong>Signature</strong>:</p>\n<ul>\n<li><code class=\"language-text\">duplicate(oldName, newName)</code>: Attribute</li>\n</ul>\n<p><strong>Return value</strong>:</p>\n<ul>\n<li>The duplicated attribute or null if the duplication failed</li>\n</ul>\n<p><strong>Parameters</strong>:</p>\n<ul>\n<li><code class=\"language-text\">oldName</code>: <code class=\"language-text\">String</code>. Name of attribute to be duplicated.</li>\n<li><code class=\"language-text\">newName</code>: <code class=\"language-text\">String</code>. New name of duplicated attribute.</li>\n</ul>\n<p><strong>Example call</strong>:</p>\n\n          <codeblockcopytag>var newAttr = dataset.duplicate(&quot;old&quot;, &quot;new&quot;);\r\n\r\nif (newAttr == null) {\r\n  print(&quot;Error: the dataset does not contain the attribute 'old' or\r\n  it already contains an attribute 'new'&quot;);\r\n}</codeblockcopytag>\n          \n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">var</span> newAttr <span class=\"token operator\">=</span> dataset<span class=\"token punctuation\">.</span><span class=\"token function\">duplicate</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"old\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"new\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n\r\n<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>newAttr <span class=\"token operator\">==</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\r\n  <span class=\"token function\">print</span><span class=\"token punctuation\">(</span>\"Error<span class=\"token operator\">:</span> the dataset does not contain the attribute <span class=\"token string\">'old'</span> or\r\n  it already contains an attribute <span class=\"token string\">'new'</span>\"<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n<span class=\"token punctuation\">}</span></code></pre></div>\n<h3 id=\"equals-method\">Equals method</h3>\n<p>Checks equality with another object. A dataset is considered equal to another if the two datasets have the same attributes (characteristics and list of values)</p>\n<p><strong>Signature</strong>:</p>\n<ul>\n<li><code class=\"language-text\">equals(object)</code>: <code class=\"language-text\">Boolean</code></li>\n</ul>\n<p><strong>Return value</strong>:</p>\n<ul>\n<li><code class=\"language-text\">true</code> if the object passed as a parameter is a dataset with the same attributes</li>\n</ul>\n<p><strong>Parameters</strong>:</p>\n<ul>\n<li><code class=\"language-text\">object</code>: <code class=\"language-text\">Object</code>. The object to compare with the dataset.</li>\n</ul>\n<p><strong>Example call</strong>:</p>\n\n          <codeblockcopytag>var same = dataset.equals(otherDataset);\r\n\r\nif (! same) {\r\n  print(&quot;The two datasets are different&quot;);\r\n}</codeblockcopytag>\n          \n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">var</span> same <span class=\"token operator\">=</span> dataset<span class=\"token punctuation\">.</span><span class=\"token function\">equals</span><span class=\"token punctuation\">(</span>otherDataset<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n\r\n<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span> same<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\r\n  <span class=\"token function\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"The two datasets are different\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n<span class=\"token punctuation\">}</span></code></pre></div>\n<h3 id=\"get-method\">Get method</h3>\n<p>Retrieves an attribute by its name.</p>\n<p><strong>Signature</strong>:</p>\n<ul>\n<li><code class=\"language-text\">get(name)</code>: <code class=\"language-text\">Attribute</code></li>\n</ul>\n<p><strong>Return value</strong>:</p>\n<ul>\n<li>The attribute or null if no attribute corresponds to the name sent as a parameter</li>\n</ul>\n<p><strong>Parameters</strong>:</p>\n<ul>\n<li><code class=\"language-text\">name</code>: <code class=\"language-text\">String</code>. Name of the attribute sought.</li>\n</ul>\n<p><strong>Example call</strong>:</p>\n\n          <codeblockcopytag>var attr = dataset.get(&quot;myAttribute&quot;);\r\n\r\nif (attr == null) {\r\n  print(&quot;The attribute 'myAttribute' does not exist in the dataset&quot;);\r\n}</codeblockcopytag>\n          \n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">var</span> attr <span class=\"token operator\">=</span> dataset<span class=\"token punctuation\">.</span><span class=\"token function\">get</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"myAttribute\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n\r\n<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>attr <span class=\"token operator\">==</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\r\n  <span class=\"token function\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"The attribute 'myAttribute' does not exist in the dataset\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n<span class=\"token punctuation\">}</span></code></pre></div>\n<h3 id=\"remove-method\">Remove method</h3>\n<p>Deletes an attribute from the dataset by its name.</p>\n<p><strong>Signature</strong>:</p>\n<ul>\n<li><code class=\"language-text\">remove(name)</code>: <code class=\"language-text\">Attribute</code></li>\n</ul>\n<p><strong>Return value</strong>:</p>\n<ul>\n<li>The deleted attribute, or null if the deletion failed</li>\n</ul>\n<p><strong>Parameters</strong>:</p>\n<ul>\n<li><code class=\"language-text\">name</code>: <code class=\"language-text\">String</code>. Name of the attribute to delete.</li>\n</ul>\n<p><strong>Example call</strong>:</p>\n\n          <codeblockcopytag>var attr = dataset.remove(&quot;myAttribute&quot;);\r\n\r\nif (attr == null) {\r\n  print(&quot;The attribute 'myAttribute' does not exist in the dataset&quot;);\r\n}</codeblockcopytag>\n          \n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">var</span> attr <span class=\"token operator\">=</span> dataset<span class=\"token punctuation\">.</span><span class=\"token function\">remove</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"myAttribute\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n\r\n<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>attr <span class=\"token operator\">==</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\r\n  <span class=\"token function\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"The attribute 'myAttribute' does not exist in the dataset\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n<span class=\"token punctuation\">}</span></code></pre></div>\n<h3 id=\"rename-method\">Rename method</h3>\n<p>Renames an attribute. The new name must be unique.</p>\n<p><strong>Signature</strong>:</p>\n<ul>\n<li><code class=\"language-text\">rename(oldName, newName)</code>: Attribute</li>\n</ul>\n<p><strong>Return value</strong>:</p>\n<ul>\n<li>The renamed attribute or <code class=\"language-text\">null</code> if the renaming failed</li>\n</ul>\n<p><strong>Parameters</strong>:</p>\n<ul>\n<li><code class=\"language-text\">oldName</code>: String Name of the attribute to rename.</li>\n<li><code class=\"language-text\">newName</code>: String New attribute name.</li>\n</ul>\n<p><strong>Example call</strong>:</p>\n\n          <codeblockcopytag>var attr = dataset.rename(&quot;old&quot;, &quot;new&quot;);\r\n\r\nif (attr == null) {\r\n  print(&quot;Error: the dataset does not contain the attribute 'old' or\r\n  it already contains an attribute 'new'&quot;);\r\n}</codeblockcopytag>\n          \n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">var</span> attr <span class=\"token operator\">=</span> dataset<span class=\"token punctuation\">.</span><span class=\"token function\">rename</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"old\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"new\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n\r\n<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>attr <span class=\"token operator\">==</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\r\n  <span class=\"token function\">print</span><span class=\"token punctuation\">(</span>\"Error<span class=\"token operator\">:</span> the dataset does not contain the attribute <span class=\"token string\">'old'</span> or\r\n  it already contains an attribute <span class=\"token string\">'new'</span>\"<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n<span class=\"token punctuation\">}</span></code></pre></div>\n<h3 id=\"isempty-method\">IsEmpty method</h3>\n<p>Verifies if the attribute contains a non-empty value</p>\n<p><strong>Signature</strong>:</p>\n<ul>\n<li><code class=\"language-text\">isEmpty(name_or_attribute)</code>: <code class=\"language-text\">Boolean</code></li>\n</ul>\n<p><strong>Return value</strong>:</p>\n<ul>\n<li><code class=\"language-text\">true</code> if the attribute contains at least non-empty value</li>\n</ul>\n<p><strong>Parameters</strong>:</p>\n<ul>\n<li><code class=\"language-text\">name_or_attribute</code>: <code class=\"language-text\">String</code> or <code class=\"language-text\">Attribute</code>. Name of the attribute or Attribute type object.</li>\n</ul>\n<p><strong>Example call</strong>:</p>\n\n          <codeblockcopytag>var vide = dataset.isEmpty(&quot;myAttribute&quot;);\r\n\r\nif (vide) {\r\n  print(&quot;The attribute 'myAttribute' of the dataset is empty&quot;);\r\n}</codeblockcopytag>\n          \n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">var</span> vide <span class=\"token operator\">=</span> dataset<span class=\"token punctuation\">.</span><span class=\"token function\">isEmpty</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"myAttribute\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n\r\n<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>vide<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\r\n  <span class=\"token function\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"The attribute 'myAttribute' of the dataset is empty\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n<span class=\"token punctuation\">}</span></code></pre></div>\n<h3 id=\"clear-events\">Clear events</h3>\n<p>Erases all the events detected</p>\n<p><strong>Signature</strong>:</p>\n<ul>\n<li><code class=\"language-text\">clearEvents(): Void</code></li>\n</ul>\n<p><strong>Return value</strong>:</p>\n<ul>\n<li>none</li>\n</ul>\n<p><strong>Parameters</strong>:</p>\n<ul>\n<li>none</li>\n</ul>\n<p><strong>Example call</strong>:</p>\n<p><code class=\"language-text\">dataset.clearEvents();</code></p>\n<h3 id=\"add-event\">Add event</h3>\n<p>Add an event to the list</p>\n<p><strong>Signature</strong>:</p>\n<ul>\n<li><code class=\"language-text\">addEvent(name)</code>: <code class=\"language-text\">Void</code></li>\n</ul>\n<p><strong>Return value</strong>:</p>\n<ul>\n<li>none</li>\n</ul>\n<p><strong>Parameters</strong>:</p>\n<ul>\n<li>name: String Name of the event to add.</li>\n</ul>\n<p><strong>Example call</strong>:</p>\n<p><code class=\"language-text\">dataset.addEvent(\"no unique ID\");</code></p>\n<h3 id=\"remove-event\">Remove event</h3>\n<p>Deletes an event from the list.</p>\n<p><strong>Signature</strong>:</p>\n<ul>\n<li><code class=\"language-text\">removeEvent(name)</code>: <code class=\"language-text\">Void</code></li>\n</ul>\n<p><strong>Return value</strong>:</p>\n<ul>\n<li>none</li>\n</ul>\n<p><strong>Parameters</strong>:</p>\n<ul>\n<li><code class=\"language-text\">name</code>: <code class=\"language-text\">String</code>. Name of the event to delete.</li>\n</ul>\n<p><strong>Example call</strong>:</p>\n<p><code class=\"language-text\">dataset.removeEvent(\"no unique ID\");</code></p>\n<h3 id=\"has-event\">Has event</h3>\n<p>Verifies the presence of an event in the list</p>\n<p><strong>Signature</strong>:</p>\n<ul>\n<li><code class=\"language-text\">hasEvent(name)</code>: <code class=\"language-text\">Boolean</code></li>\n</ul>\n<p><strong>Return value</strong>:</p>\n<ul>\n<li>true if the event is present in the list</li>\n</ul>\n<p><strong>Parameters</strong>:</p>\n<ul>\n<li>name: String Name of the event to verify.</li>\n</ul>\n<p><strong>Example call</strong>:</p>\n\n          <codeblockcopytag>var EmptyUniqueID = dataset.hasEvent(&quot;no unique ID&quot;);\r\n\r\nif (EmptyUniqueID) {\r\n  print(&quot;Error: Identity has no unique ID&quot;);\r\n}</codeblockcopytag>\n          \n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">var</span> EmptyUniqueID <span class=\"token operator\">=</span> dataset<span class=\"token punctuation\">.</span><span class=\"token function\">hasEvent</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"no unique ID\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n\r\n<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>EmptyUniqueID<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\r\n  <span class=\"token function\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Error: Identity has no unique ID\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n<span class=\"token punctuation\">}</span></code></pre></div>\n<h3 id=\"event-count\">Event count</h3>\n<p>Retrieves the number of events present in the list.</p>\n<p><strong>Signature</strong>:</p>\n<ul>\n<li><code class=\"language-text\">eventCount()</code>: <code class=\"language-text\">Number</code></li>\n</ul>\n<p><strong>Return value</strong>:</p>\n<ul>\n<li>The number of events in the list</li>\n</ul>\n<p><strong>Parameters</strong>:</p>\n<ul>\n<li>none</li>\n</ul>\n<p><strong>Example call</strong>:</p>\n\n          <codeblockcopytag>var nb = dataset.eventCount();\r\n\r\nif (nb == 0) {\r\n  print(&quot;No event detected&quot;);\r\n}</codeblockcopytag>\n          \n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">var</span> nb <span class=\"token operator\">=</span> dataset<span class=\"token punctuation\">.</span><span class=\"token function\">eventCount</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n\r\n<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>nb <span class=\"token operator\">==</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\r\n  <span class=\"token function\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"No event detected\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n<span class=\"token punctuation\">}</span></code></pre></div>\n<h3 id=\"tostring\">ToString</h3>\n<p>Constructs a string giving the content of the dataset.</p>\n<p><strong>Signature</strong> :</p>\n<ul>\n<li><code class=\"language-text\">toString()</code>: <code class=\"language-text\">String</code></li>\n</ul>\n<p><strong>Return value</strong> :</p>\n<ul>\n<li>String containing the list of attribute names separated by commas</li>\n</ul>\n<p><strong>Parameters</strong> :</p>\n<ul>\n<li>none</li>\n</ul>\n<p><strong>Example call</strong>:</p>\n\n          <codeblockcopytag>print\\`\\`(&quot;Content of dataset: &quot; +\\` \\`dataset\\`\\`.toString());</codeblockcopytag>\n          \n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\">print<span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Content of dataset: \"</span> <span class=\"token operator\">+</span><span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\"> </span><span class=\"token template-punctuation string\">`</span></span>dataset<span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">.</span><span class=\"token function\">toString</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<h3 id=\"getevents-method\">GetEvents method</h3>\n<p>Retrieves the list of events.</p>\n<p><strong>Signature</strong>:</p>\n<ul>\n<li><code class=\"language-text\">getEvents()</code>: <code class=\"language-text\">Array</code></li>\n</ul>\n<p><strong>Return value</strong>:</p>\n<ul>\n<li>A table containing the events</li>\n</ul>\n<p><strong>Parameters</strong>:</p>\n<ul>\n<li>none</li>\n</ul>\n<p><strong>Example call</strong>:</p>\n\n          <codeblockcopytag>var events = dataset.getEvents();\r\n\r\nif (events != null) {\r\n    for (var event in events) {\r\n    print(&quot;Event &quot; + event + &quot; detected&quot;);\r\n    }\r\n}</codeblockcopytag>\n          \n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">var</span> events <span class=\"token operator\">=</span> dataset<span class=\"token punctuation\">.</span><span class=\"token function\">getEvents</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n\r\n<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>events <span class=\"token operator\">!=</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\r\n    <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">var</span> event <span class=\"token keyword\">in</span> events<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\r\n    <span class=\"token function\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Event \"</span> <span class=\"token operator\">+</span> event <span class=\"token operator\">+</span> <span class=\"token string\">\" detected\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n    <span class=\"token punctuation\">}</span>\r\n<span class=\"token punctuation\">}</span></code></pre></div>","htmlAst":{"type":"root","children":[{"type":"element","tagName":"h1","properties":{"id":"macros-and-scripts"},"children":[{"type":"text","value":"Macros and Scripts"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"h2","properties":{"id":"javascript-syntax"},"children":[{"type":"text","value":"JavaScript syntax"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"The APIs described in this chapter can be used in both macros in JavaScript."}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"A macro is a JavaScript expression inserted into a component property field. For example, the CSV source component asks for the name of a CSV file to be processed. An absolute path may be entered in this field. However, it is possible to insert a JavaScript expression to make the constitution of the file path dynamic. The expression must be enclosed in brackets to be identified as such by the collector engine when running. Everything between these brackets is executed and the result replaces the JavaScript expression as shown in the following example:"}]},{"type":"text","value":"\n\n          "},{"type":"element","tagName":"codeblockcopytag","properties":{},"children":[{"type":"text","value":"{config.my_directory}\\rh.csv"}]},{"type":"text","value":"\n          \n"},{"type":"element","tagName":"div","properties":{"className":["gatsby-highlight"],"dataLanguage":"javascript"},"children":[{"type":"element","tagName":"pre","properties":{"className":["language-javascript"]},"children":[{"type":"element","tagName":"code","properties":{"className":["language-javascript"]},"children":[{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":"{"}]},{"type":"text","value":"config"},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":"."}]},{"type":"text","value":"my_directory"},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":"}"}]},{"type":"text","value":"\\rh"},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":"."}]},{"type":"text","value":"csv"}]}]}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"In the example above, the "},{"type":"element","tagName":"code","properties":{"className":["language-text"]},"children":[{"type":"text","value":"my_directory"}]},{"type":"text","value":" configuration variable contains "},{"type":"element","tagName":"code","properties":{"className":["language-text"]},"children":[{"type":"text","value":"C:\\Users\\Paul"}]},{"type":"text","value":". At runtime, the collector engine replaces the expression in brackets with the result, which gives the following path: "},{"type":"element","tagName":"code","properties":{"className":["language-text"]},"children":[{"type":"text","value":"C:\\Users\\Paul\\rh.csv"}]}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"A JavaScript script is a file with the extension "},{"type":"element","tagName":"code","properties":{"className":["language-text"]},"children":[{"type":"text","value":".javascript"}]},{"type":"text","value":". This file is associated with the collector line and may contain all the functions called by components, for example, from a source script, a filter script, or a transition, to make its transfer conditional."}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"The major difference in syntax between a macro and a JavaScript script is that the macro can only contain an expression, not an entire script. This means that all the keywords such as "},{"type":"element","tagName":"code","properties":{"className":["language-text"]},"children":[{"type":"text","value":"for,while, if"}]},{"type":"text","value":" ... are forbidden in macros."}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"JavaScript syntax is not described in this document because it is standard, since the product uses the Mozilla Foundation's Rhino scripting engine. Note that ternary expressions may be used in macros and in JavaScript. The syntax is:"}]},{"type":"text","value":"\n\n          "},{"type":"element","tagName":"codeblockcopytag","properties":{},"children":[{"type":"text","value":"condition ? expression_if_true: expression_if_false"}]},{"type":"text","value":"\n          \n"},{"type":"element","tagName":"div","properties":{"className":["gatsby-highlight"],"dataLanguage":"javascript"},"children":[{"type":"element","tagName":"pre","properties":{"className":["language-javascript"]},"children":[{"type":"element","tagName":"code","properties":{"className":["language-javascript"]},"children":[{"type":"text","value":"condition "},{"type":"element","tagName":"span","properties":{"className":["token","operator"]},"children":[{"type":"text","value":"?"}]},{"type":"text","value":" expression_if_true"},{"type":"element","tagName":"span","properties":{"className":["token","operator"]},"children":[{"type":"text","value":":"}]},{"type":"text","value":" expression_if_false"}]}]}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"The following example shows how to test if "},{"type":"element","tagName":"code","properties":{"className":["language-text"]},"children":[{"type":"text","value":"my_directory"}]},{"type":"text","value":" variable is not empty. If the variable is empty, it is replaced by a default path in Windows. Ternary expressions are very useful in macros as they allow you to test without the if keyword, which is forbidden:"}]},{"type":"text","value":"\n\n          "},{"type":"element","tagName":"codeblockcopytag","properties":{},"children":[{"type":"text","value":"{config.my_directory.length != 0 ? config.my_directory : \"C:\\Windows\\Temp\\rh.csv\"}"}]},{"type":"text","value":"\n          \n"},{"type":"element","tagName":"div","properties":{"className":["gatsby-highlight"],"dataLanguage":"javascript"},"children":[{"type":"element","tagName":"pre","properties":{"className":["language-javascript"]},"children":[{"type":"element","tagName":"code","properties":{"className":["language-javascript"]},"children":[{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":"{"}]},{"type":"text","value":"config"},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":"."}]},{"type":"text","value":"my_directory"},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":"."}]},{"type":"text","value":"length "},{"type":"element","tagName":"span","properties":{"className":["token","operator"]},"children":[{"type":"text","value":"!="}]},{"type":"text","value":" "},{"type":"element","tagName":"span","properties":{"className":["token","number"]},"children":[{"type":"text","value":"0"}]},{"type":"text","value":" "},{"type":"element","tagName":"span","properties":{"className":["token","operator"]},"children":[{"type":"text","value":"?"}]},{"type":"text","value":" config"},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":"."}]},{"type":"text","value":"my_directory "},{"type":"element","tagName":"span","properties":{"className":["token","operator"]},"children":[{"type":"text","value":":"}]},{"type":"text","value":" "},{"type":"element","tagName":"span","properties":{"className":["token","string"]},"children":[{"type":"text","value":"\"C:\\Windows\\Temp\\rh.csv\""}]},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":"}"}]}]}]}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Ternary expressions may be nested. It is therefore important to use parentheses to clearly delimit each part and avoid any ambiguity during runtime."}]},{"type":"text","value":"\n"},{"type":"element","tagName":"h2","properties":{"id":"config-variable"},"children":[{"type":"text","value":"Config variable"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"The "},{"type":"element","tagName":"code","properties":{"className":["language-text"]},"children":[{"type":"text","value":"config"}]},{"type":"text","value":" variable is available when running the collector line, and contains all the configuration values of the line and of the project configuration. All the configuration settings are present in the "},{"type":"element","tagName":"code","properties":{"className":["language-text"]},"children":[{"type":"text","value":"config"}]},{"type":"text","value":" object and accessible as properties. Values are always "},{"type":"element","tagName":"code","properties":{"className":["language-text"]},"children":[{"type":"text","value":"String"}]},{"type":"text","value":" types."}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"These settings affect the behavior of the collector line. They allow us to avoid the presence of hard-coded values such as file names in the collector line settings. For example, for a CSV source, the "},{"type":"element","tagName":"code","properties":{"className":["language-text"]},"children":[{"type":"text","value":"CSVfile"}]},{"type":"text","value":" field may be filled with a macro instead of hard-coding "},{"type":"element","tagName":"code","properties":{"className":["language-text"]},"children":[{"type":"text","value":"C:\\data.csv"}]},{"type":"text","value":", as shown in the following example: "},{"type":"element","tagName":"code","properties":{"className":["language-text"]},"children":[{"type":"text","value":"{config.csvfile}"}]}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"The "},{"type":"element","tagName":"code","properties":{"className":["language-text"]},"children":[{"type":"text","value":"csvfile"}]},{"type":"text","value":" setting is declared in the collector line with "},{"type":"element","tagName":"code","properties":{"className":["language-text"]},"children":[{"type":"text","value":"C:\\data.csv"}]},{"type":"text","value":" as its value."}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"A configuration setting may be declared at the project level or at the collector line level. If a setting with the same name is declared on both levels, the collector level setting is used. This allows you to set a default value at the project level and override it in a collector line."}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"The "},{"type":"element","tagName":"code","properties":{"className":["language-text"]},"children":[{"type":"text","value":"config"}]},{"type":"text","value":" variable is also present in scripting: "},{"type":"element","tagName":"code","properties":{"className":["language-text"]},"children":[{"type":"text","value":"print(config.csvfile);"}]}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"There are two properties automatically filled in in the "},{"type":"element","tagName":"code","properties":{"className":["language-text"]},"children":[{"type":"text","value":"config"}]},{"type":"text","value":" variable:"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"ul","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"element","tagName":"code","properties":{"className":["language-text"]},"children":[{"type":"text","value":"projectPath"}]},{"type":"text","value":": is the absolute path of the project."}]},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"element","tagName":"code","properties":{"className":["language-text"]},"children":[{"type":"text","value":"databaseName"}]},{"type":"text","value":": is the name of the database configuration."}]},{"type":"text","value":"\n"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"h2","properties":{"id":"dataset-variables"},"children":[{"type":"text","value":"Dataset variables"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"A dataset is a collector of attributes, where each attribute may contain multiple values. The dataset is the element which is passed between the components of a collector line. It may be altered or completed by each component."}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"When a collector line runs, the "},{"type":"element","tagName":"code","properties":{"className":["language-text"]},"children":[{"type":"text","value":"dataset"}]},{"type":"text","value":" variable is implicitly declared and contains the current dataset. It is thus possible to reach the content of the dataset within a component (for example, in the modifying component in the form of a macro) or in JavaScript."}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"A collector line has a data pattern. The pattern lists all the attribute names declared in each component and their characteristics (type of attribute and multivalued indicator). The pattern helps to offer completion of the attributes in the collector line editor. It is also used when the collector line runs to performing implicit operations of data conversion. For example, when an attribute is declared by a source component as "},{"type":"element","tagName":"code","properties":{"className":["language-text"]},"children":[{"type":"text","value":"date"}]},{"type":"text","value":" type, it can be upgraded or modified by another component by passing a string. The collector engine converts the value according to the declaration in the pattern."}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"The pattern is shown in the collector line editor in the Properties view when no component is selected."}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"You cannot bypass the pattern while the line collector is running. An attribute can only receive values of the type declared in the pattern (after implicit conversion if needed). On the other hand, it is quite possible at runtime to dynamically add new attributes whose characteristics you specify (type of attribute and multivalued indicator) in the constructor of the "},{"type":"element","tagName":"code","properties":{"className":["language-text"]},"children":[{"type":"text","value":"Attribute"}]},{"type":"text","value":" class."}]},{"type":"text","value":"\n"},{"type":"element","tagName":"blockquote","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"[!warning] Having declared an attribute in the pattern (for example, in a source type component) does not add the attribute in the dataset at runtime. The attribute is only present if it is added by component or a script. The standard behavior of the source type components (for example, CSV) is to create the attribute in the dataset only if a value is present in the file. In the case of a CSV file, if the "},{"type":"element","tagName":"code","properties":{"className":["language-text"]},"children":[{"type":"text","value":"uniqueID"}]},{"type":"text","value":" column is empty for some records, the dataset will not contain the "},{"type":"element","tagName":"code","properties":{"className":["language-text"]},"children":[{"type":"text","value":"uniqueID"}]},{"type":"text","value":" attribute for records that have no value in this column. When trying to read an attribute not present in the dataset, "},{"type":"element","tagName":"code","properties":{"className":["language-text"]},"children":[{"type":"text","value":"null"}]},{"type":"text","value":" is returned. Therefore, we have to test this value before manipulating the data, as shown in the following code:"}]},{"type":"text","value":"\n\n          "},{"type":"element","tagName":"codeblockcopytag","properties":{},"children":[{"type":"text","value":"var attr = dataset.get(\"unique_ID\");"}]},{"type":"text","value":"\n          \n"},{"type":"element","tagName":"div","properties":{"className":["gatsby-highlight"],"dataLanguage":"javascript"},"children":[{"type":"element","tagName":"pre","properties":{"className":["language-javascript"]},"children":[{"type":"element","tagName":"code","properties":{"className":["language-javascript"]},"children":[{"type":"element","tagName":"span","properties":{"className":["token","keyword"]},"children":[{"type":"text","value":"var"}]},{"type":"text","value":" attr "},{"type":"element","tagName":"span","properties":{"className":["token","operator"]},"children":[{"type":"text","value":"="}]},{"type":"text","value":" dataset"},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":"."}]},{"type":"element","tagName":"span","properties":{"className":["token","function"]},"children":[{"type":"text","value":"get"}]},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":"("}]},{"type":"element","tagName":"span","properties":{"className":["token","string"]},"children":[{"type":"text","value":"\"unique_ID\""}]},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":")"}]},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":";"}]}]}]}]},{"type":"text","value":"\n"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"blockquote","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"if (attr != null) {\r\nprint(attr);\r\n}"}]},{"type":"text","value":"\n\n          "},{"type":"element","tagName":"codeblockcopytag","properties":{},"children":[]},{"type":"text","value":"\n          \n"},{"type":"element","tagName":"div","properties":{"className":["gatsby-highlight"],"dataLanguage":"text"},"children":[{"type":"element","tagName":"pre","properties":{"className":["language-text"]},"children":[{"type":"element","tagName":"code","properties":{"className":["language-text"]},"children":[]}]}]},{"type":"text","value":"\n"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"This test should also be done in macros, for example, in the modifying component. The following code is a macro component set in the modifying component in order to capitalize the "},{"type":"element","tagName":"code","properties":{"className":["language-text"]},"children":[{"type":"text","value":"unique_ID"}]},{"type":"text","value":". Since the unique ID may be absent, you must use a ternary expression to process the case of a "},{"type":"element","tagName":"code","properties":{"className":["language-text"]},"children":[{"type":"text","value":"null"}]},{"type":"text","value":" attribute:"}]},{"type":"text","value":"\n\n          "},{"type":"element","tagName":"codeblockcopytag","properties":{},"children":[{"type":"text","value":"{dataset.unique_ID != null ? dataset.unique_ID.get().toUpperCase(): ''}"}]},{"type":"text","value":"\n          \n"},{"type":"element","tagName":"div","properties":{"className":["gatsby-highlight"],"dataLanguage":"javascript"},"children":[{"type":"element","tagName":"pre","properties":{"className":["language-javascript"]},"children":[{"type":"element","tagName":"code","properties":{"className":["language-javascript"]},"children":[{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":"{"}]},{"type":"text","value":"dataset"},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":"."}]},{"type":"text","value":"unique_ID "},{"type":"element","tagName":"span","properties":{"className":["token","operator"]},"children":[{"type":"text","value":"!="}]},{"type":"text","value":" "},{"type":"element","tagName":"span","properties":{"className":["token","keyword"]},"children":[{"type":"text","value":"null"}]},{"type":"text","value":" "},{"type":"element","tagName":"span","properties":{"className":["token","operator"]},"children":[{"type":"text","value":"?"}]},{"type":"text","value":" dataset"},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":"."}]},{"type":"text","value":"unique_ID"},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":"."}]},{"type":"element","tagName":"span","properties":{"className":["token","function"]},"children":[{"type":"text","value":"get"}]},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":"("}]},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":")"}]},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":"."}]},{"type":"element","tagName":"span","properties":{"className":["token","function"]},"children":[{"type":"text","value":"toUpperCase"}]},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":"("}]},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":")"}]},{"type":"element","tagName":"span","properties":{"className":["token","operator"]},"children":[{"type":"text","value":":"}]},{"type":"text","value":" "},{"type":"element","tagName":"span","properties":{"className":["token","string"]},"children":[{"type":"text","value":"''"}]},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":"}"}]}]}]}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"This macro tests whether the attribute exists in the dataset. If it does, it returns the contents of the unique ID, capitalized. Otherwise, it returns an empty string."}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Let's take the example of an attribute called "},{"type":"element","tagName":"code","properties":{"className":["language-text"]},"children":[{"type":"text","value":"myAttribute"}]},{"type":"text","value":", declared in a modifying component and valuated by a script. The following code allows us to add the attribute to the dataset with a value:"}]},{"type":"text","value":"\n\n          "},{"type":"element","tagName":"codeblockcopytag","properties":{},"children":[{"type":"text","value":"var attr = new Attribute(\"myAttribute\");\n\nattr.set(\"Paul\");\ndataset.add(attr);"}]},{"type":"text","value":"\n          \n"},{"type":"element","tagName":"div","properties":{"className":["gatsby-highlight"],"dataLanguage":"javascript"},"children":[{"type":"element","tagName":"pre","properties":{"className":["language-javascript"]},"children":[{"type":"element","tagName":"code","properties":{"className":["language-javascript"]},"children":[{"type":"element","tagName":"span","properties":{"className":["token","keyword"]},"children":[{"type":"text","value":"var"}]},{"type":"text","value":" attr "},{"type":"element","tagName":"span","properties":{"className":["token","operator"]},"children":[{"type":"text","value":"="}]},{"type":"text","value":" "},{"type":"element","tagName":"span","properties":{"className":["token","keyword"]},"children":[{"type":"text","value":"new"}]},{"type":"text","value":" "},{"type":"element","tagName":"span","properties":{"className":["token","class-name"]},"children":[{"type":"text","value":"Attribute"}]},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":"("}]},{"type":"element","tagName":"span","properties":{"className":["token","string"]},"children":[{"type":"text","value":"\"myAttribute\""}]},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":")"}]},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":";"}]},{"type":"text","value":"\n\nattr"},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":"."}]},{"type":"element","tagName":"span","properties":{"className":["token","function"]},"children":[{"type":"text","value":"set"}]},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":"("}]},{"type":"element","tagName":"span","properties":{"className":["token","string"]},"children":[{"type":"text","value":"\"Paul\""}]},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":")"}]},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":";"}]},{"type":"text","value":"\ndataset"},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":"."}]},{"type":"element","tagName":"span","properties":{"className":["token","function"]},"children":[{"type":"text","value":"add"}]},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":"("}]},{"type":"text","value":"attr"},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":")"}]},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":";"}]}]}]}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"In the example above, the first line creates an attribute without specifying the type of data or the multivalued indicator, because with the name of the attribute, the collector engine finds this information in the pattern."}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"In the case of an attribute missing from the pattern, you must specify all the information as shown in the following example. The pattern is then completed dynamically with a new attribute."}]},{"type":"text","value":"\n\n          "},{"type":"element","tagName":"codeblockcopytag","properties":{},"children":[{"type":"text","value":"var attr = new Attribute(\"myAttribute\", \"String\", false);\n\nattr.set(\"Paul\");\ndataset.add(attr);"}]},{"type":"text","value":"\n          \n"},{"type":"element","tagName":"div","properties":{"className":["gatsby-highlight"],"dataLanguage":"javascript"},"children":[{"type":"element","tagName":"pre","properties":{"className":["language-javascript"]},"children":[{"type":"element","tagName":"code","properties":{"className":["language-javascript"]},"children":[{"type":"element","tagName":"span","properties":{"className":["token","keyword"]},"children":[{"type":"text","value":"var"}]},{"type":"text","value":" attr "},{"type":"element","tagName":"span","properties":{"className":["token","operator"]},"children":[{"type":"text","value":"="}]},{"type":"text","value":" "},{"type":"element","tagName":"span","properties":{"className":["token","keyword"]},"children":[{"type":"text","value":"new"}]},{"type":"text","value":" "},{"type":"element","tagName":"span","properties":{"className":["token","class-name"]},"children":[{"type":"text","value":"Attribute"}]},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":"("}]},{"type":"element","tagName":"span","properties":{"className":["token","string"]},"children":[{"type":"text","value":"\"myAttribute\""}]},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":","}]},{"type":"text","value":" "},{"type":"element","tagName":"span","properties":{"className":["token","string"]},"children":[{"type":"text","value":"\"String\""}]},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":","}]},{"type":"text","value":" "},{"type":"element","tagName":"span","properties":{"className":["token","boolean"]},"children":[{"type":"text","value":"false"}]},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":")"}]},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":";"}]},{"type":"text","value":"\n\nattr"},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":"."}]},{"type":"element","tagName":"span","properties":{"className":["token","function"]},"children":[{"type":"text","value":"set"}]},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":"("}]},{"type":"element","tagName":"span","properties":{"className":["token","string"]},"children":[{"type":"text","value":"\"Paul\""}]},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":")"}]},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":";"}]},{"type":"text","value":"\ndataset"},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":"."}]},{"type":"element","tagName":"span","properties":{"className":["token","function"]},"children":[{"type":"text","value":"add"}]},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":"("}]},{"type":"text","value":"attr"},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":")"}]},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":";"}]}]}]}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"In the example above, the first line creates an attribute that does not exist in the pattern. The attribute is declared as being a "},{"type":"element","tagName":"code","properties":{"className":["language-text"]},"children":[{"type":"text","value":"String"}]},{"type":"text","value":" type and single-valued (multivalued parameter set to "},{"type":"element","tagName":"code","properties":{"className":["language-text"]},"children":[{"type":"text","value":"false"}]},{"type":"text","value":")."}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"A dataset also contains a list of events. These events contribute to the identification of rejects or records with an anomaly. These events can be used in transitions between components to create conditional forking. Writing a JavaScript function is necessary to test for the presence of an event and to allow the transition to the next component or not. The following code shows a function that prevents it from moving to the next component if the "},{"type":"element","tagName":"code","properties":{"className":["language-text"]},"children":[{"type":"text","value":"empty_unique_ID"}]},{"type":"text","value":" event is detected:"}]},{"type":"text","value":"\n\n          "},{"type":"element","tagName":"codeblockcopytag","properties":{},"children":[{"type":"text","value":"function testUniqueID() {\n  return ! dataset.hasEvent(\"empty unique ID\");\n}"}]},{"type":"text","value":"\n          \n"},{"type":"element","tagName":"div","properties":{"className":["gatsby-highlight"],"dataLanguage":"javascript"},"children":[{"type":"element","tagName":"pre","properties":{"className":["language-javascript"]},"children":[{"type":"element","tagName":"code","properties":{"className":["language-javascript"]},"children":[{"type":"element","tagName":"span","properties":{"className":["token","keyword"]},"children":[{"type":"text","value":"function"}]},{"type":"text","value":" "},{"type":"element","tagName":"span","properties":{"className":["token","function"]},"children":[{"type":"text","value":"testUniqueID"}]},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":"("}]},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":")"}]},{"type":"text","value":" "},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":"{"}]},{"type":"text","value":"\n  "},{"type":"element","tagName":"span","properties":{"className":["token","keyword"]},"children":[{"type":"text","value":"return"}]},{"type":"text","value":" "},{"type":"element","tagName":"span","properties":{"className":["token","operator"]},"children":[{"type":"text","value":"!"}]},{"type":"text","value":" dataset"},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":"."}]},{"type":"element","tagName":"span","properties":{"className":["token","function"]},"children":[{"type":"text","value":"hasEvent"}]},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":"("}]},{"type":"element","tagName":"span","properties":{"className":["token","string"]},"children":[{"type":"text","value":"\"empty unique ID\""}]},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":")"}]},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":";"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":"}"}]}]}]}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"The "},{"type":"element","tagName":"code","properties":{"className":["language-text"]},"children":[{"type":"text","value":"testUniqueID"}]},{"type":"text","value":" function is configured in the transaction. When the dataset contains an "},{"type":"element","tagName":"code","properties":{"className":["language-text"]},"children":[{"type":"text","value":"empty_unique_ID"}]},{"type":"text","value":" event, the JavaScript function returns "},{"type":"element","tagName":"code","properties":{"className":["language-text"]},"children":[{"type":"text","value":"false"}]},{"type":"text","value":" which prohibits from moving on to the next component."}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"It is important to note that the events present in the dataset have a very limited lifespan because they are deleted upon entering each component to avoid their accumulation while running through the dataset of the whole collector line."}]},{"type":"text","value":"\n"},{"type":"element","tagName":"h2","properties":{"id":"dataset-class-api"},"children":[{"type":"text","value":"Dataset class API"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"The DataSet class contains the APIs to manipulate both the dataset (the attributes) and the events. It provides access to the attributes in the form of methods and properties."}]},{"type":"text","value":"\n"},{"type":"element","tagName":"h3","properties":{"id":"properties-corresponding-to-the-pattern"},"children":[{"type":"text","value":"Properties corresponding to the pattern"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"All the attributes of the dataset are available in the form of properties. This allows syntax like "},{"type":"element","tagName":"code","properties":{"className":["language-text"]},"children":[{"type":"text","value":"dataset.attribute"}]},{"type":"text","value":" as shown in the following example for the "},{"type":"element","tagName":"code","properties":{"className":["language-text"]},"children":[{"type":"text","value":"first_name"}]},{"type":"text","value":" attribute: "},{"type":"element","tagName":"code","properties":{"className":["language-text"]},"children":[{"type":"text","value":"var attr =dataset.first_name;"}]}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Note that the returned value is an "},{"type":"element","tagName":"code","properties":{"className":["language-text"]},"children":[{"type":"text","value":"Attribute"}]},{"type":"text","value":" type object, not the value of the attribute. So to retrieve the first name, you must use the "},{"type":"element","tagName":"code","properties":{"className":["language-text"]},"children":[{"type":"text","value":"get"}]},{"type":"text","value":" method like this:"}]},{"type":"text","value":"\n\n          "},{"type":"element","tagName":"codeblockcopytag","properties":{},"children":[{"type":"text","value":"var attr = dataset.first_name;\n\nif (attr != null) {\n  print(attr.get());\n"}]},{"type":"text","value":"\n          \n"},{"type":"element","tagName":"div","properties":{"className":["gatsby-highlight"],"dataLanguage":"javascript"},"children":[{"type":"element","tagName":"pre","properties":{"className":["language-javascript"]},"children":[{"type":"element","tagName":"code","properties":{"className":["language-javascript"]},"children":[{"type":"element","tagName":"span","properties":{"className":["token","keyword"]},"children":[{"type":"text","value":"var"}]},{"type":"text","value":" attr "},{"type":"element","tagName":"span","properties":{"className":["token","operator"]},"children":[{"type":"text","value":"="}]},{"type":"text","value":" dataset"},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":"."}]},{"type":"text","value":"first_name"},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":";"}]},{"type":"text","value":"\n\n"},{"type":"element","tagName":"span","properties":{"className":["token","keyword"]},"children":[{"type":"text","value":"if"}]},{"type":"text","value":" "},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":"("}]},{"type":"text","value":"attr "},{"type":"element","tagName":"span","properties":{"className":["token","operator"]},"children":[{"type":"text","value":"!="}]},{"type":"text","value":" "},{"type":"element","tagName":"span","properties":{"className":["token","keyword"]},"children":[{"type":"text","value":"null"}]},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":")"}]},{"type":"text","value":" "},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":"{"}]},{"type":"text","value":"\n  "},{"type":"element","tagName":"span","properties":{"className":["token","function"]},"children":[{"type":"text","value":"print"}]},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":"("}]},{"type":"text","value":"attr"},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":"."}]},{"type":"element","tagName":"span","properties":{"className":["token","function"]},"children":[{"type":"text","value":"get"}]},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":"("}]},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":")"}]},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":")"}]},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":";"}]},{"type":"text","value":"\n"}]}]}]},{"type":"text","value":"\n"},{"type":"element","tagName":"blockquote","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"[!warning] If the attribute does not exist in the dataset, the value returned is "},{"type":"element","tagName":"code","properties":{"className":["language-text"]},"children":[{"type":"text","value":"null"}]},{"type":"text","value":". It is therefore necessary to test whether the returned value is a valid attribute (not null) before using the "},{"type":"element","tagName":"code","properties":{"className":["language-text"]},"children":[{"type":"text","value":"get"}]},{"type":"text","value":" method."}]},{"type":"text","value":"\n"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Properties are read- and write-accessible. In write mode, the attribute is replaced by the new attribute. If the attribute does not exist in the dataset, it is added. The following example shows how to add a new single-valued "},{"type":"element","tagName":"code","properties":{"className":["language-text"]},"children":[{"type":"text","value":"String"}]},{"type":"text","value":" type attribute to the data set:"}]},{"type":"text","value":"\n\n          "},{"type":"element","tagName":"codeblockcopytag","properties":{},"children":[{"type":"text","value":"var attr = new Attribute(\"myAttribute\", \"String\", false);\n\nattr.set(\"Paul\");\ndataset.myAttribute = attr;"}]},{"type":"text","value":"\n          \n"},{"type":"element","tagName":"div","properties":{"className":["gatsby-highlight"],"dataLanguage":"javascript"},"children":[{"type":"element","tagName":"pre","properties":{"className":["language-javascript"]},"children":[{"type":"element","tagName":"code","properties":{"className":["language-javascript"]},"children":[{"type":"element","tagName":"span","properties":{"className":["token","keyword"]},"children":[{"type":"text","value":"var"}]},{"type":"text","value":" attr "},{"type":"element","tagName":"span","properties":{"className":["token","operator"]},"children":[{"type":"text","value":"="}]},{"type":"text","value":" "},{"type":"element","tagName":"span","properties":{"className":["token","keyword"]},"children":[{"type":"text","value":"new"}]},{"type":"text","value":" "},{"type":"element","tagName":"span","properties":{"className":["token","class-name"]},"children":[{"type":"text","value":"Attribute"}]},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":"("}]},{"type":"element","tagName":"span","properties":{"className":["token","string"]},"children":[{"type":"text","value":"\"myAttribute\""}]},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":","}]},{"type":"text","value":" "},{"type":"element","tagName":"span","properties":{"className":["token","string"]},"children":[{"type":"text","value":"\"String\""}]},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":","}]},{"type":"text","value":" "},{"type":"element","tagName":"span","properties":{"className":["token","boolean"]},"children":[{"type":"text","value":"false"}]},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":")"}]},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":";"}]},{"type":"text","value":"\n\nattr"},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":"."}]},{"type":"element","tagName":"span","properties":{"className":["token","function"]},"children":[{"type":"text","value":"set"}]},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":"("}]},{"type":"element","tagName":"span","properties":{"className":["token","string"]},"children":[{"type":"text","value":"\"Paul\""}]},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":")"}]},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":";"}]},{"type":"text","value":"\ndataset"},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":"."}]},{"type":"text","value":"myAttribute "},{"type":"element","tagName":"span","properties":{"className":["token","operator"]},"children":[{"type":"text","value":"="}]},{"type":"text","value":" attr"},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":";"}]}]}]}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"The first line creates a new attribute called "},{"type":"element","tagName":"em","properties":{},"children":[{"type":"text","value":"myAttribute"}]},{"type":"text","value":" but which is not yet added to the dataset. The second line sets the value of the attribute. The third line adds the attribute to the dataset. Note that the attribute name is repeated in the third line. This syntax allows you to replace or add an attribute regardless of whether the dataset contained an attribute with the same name or not."}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Syntax using the "},{"type":"element","tagName":"code","properties":{"className":["language-text"]},"children":[{"type":"text","value":"dataset"}]},{"type":"text","value":" APIs allows you to obtain the same result, as shown in the following code:"}]},{"type":"text","value":"\n\n          "},{"type":"element","tagName":"codeblockcopytag","properties":{},"children":[{"type":"text","value":"var attr = new Attribute(\"myAttribute\", \"String\", false);\n\nattr.set(\"Paul\");\ndataset.remove(\"myAttribute\");\ndataset.add(attr);"}]},{"type":"text","value":"\n          \n"},{"type":"element","tagName":"div","properties":{"className":["gatsby-highlight"],"dataLanguage":"javascript"},"children":[{"type":"element","tagName":"pre","properties":{"className":["language-javascript"]},"children":[{"type":"element","tagName":"code","properties":{"className":["language-javascript"]},"children":[{"type":"element","tagName":"span","properties":{"className":["token","keyword"]},"children":[{"type":"text","value":"var"}]},{"type":"text","value":" attr "},{"type":"element","tagName":"span","properties":{"className":["token","operator"]},"children":[{"type":"text","value":"="}]},{"type":"text","value":" "},{"type":"element","tagName":"span","properties":{"className":["token","keyword"]},"children":[{"type":"text","value":"new"}]},{"type":"text","value":" "},{"type":"element","tagName":"span","properties":{"className":["token","class-name"]},"children":[{"type":"text","value":"Attribute"}]},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":"("}]},{"type":"element","tagName":"span","properties":{"className":["token","string"]},"children":[{"type":"text","value":"\"myAttribute\""}]},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":","}]},{"type":"text","value":" "},{"type":"element","tagName":"span","properties":{"className":["token","string"]},"children":[{"type":"text","value":"\"String\""}]},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":","}]},{"type":"text","value":" "},{"type":"element","tagName":"span","properties":{"className":["token","boolean"]},"children":[{"type":"text","value":"false"}]},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":")"}]},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":";"}]},{"type":"text","value":"\n\nattr"},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":"."}]},{"type":"element","tagName":"span","properties":{"className":["token","function"]},"children":[{"type":"text","value":"set"}]},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":"("}]},{"type":"element","tagName":"span","properties":{"className":["token","string"]},"children":[{"type":"text","value":"\"Paul\""}]},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":")"}]},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":";"}]},{"type":"text","value":"\ndataset"},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":"."}]},{"type":"element","tagName":"span","properties":{"className":["token","function"]},"children":[{"type":"text","value":"remove"}]},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":"("}]},{"type":"element","tagName":"span","properties":{"className":["token","string"]},"children":[{"type":"text","value":"\"myAttribute\""}]},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":")"}]},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":";"}]},{"type":"text","value":"\ndataset"},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":"."}]},{"type":"element","tagName":"span","properties":{"className":["token","function"]},"children":[{"type":"text","value":"add"}]},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":"("}]},{"type":"text","value":"attr"},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":")"}]},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":";"}]}]}]}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"The "},{"type":"element","tagName":"code","properties":{"className":["language-text"]},"children":[{"type":"text","value":"add"}]},{"type":"text","value":" method of the "},{"type":"element","tagName":"code","properties":{"className":["language-text"]},"children":[{"type":"text","value":"dataset"}]},{"type":"text","value":" object adds an attribute to the dataset only if it does not already exist. You must therefore remove the attribute with the "},{"type":"element","tagName":"code","properties":{"className":["language-text"]},"children":[{"type":"text","value":"remove"}]},{"type":"text","value":" method before adding it to process a replacement."}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"It is also possible to add or replace an attribute by just providing a value, like this: "},{"type":"element","tagName":"code","properties":{"className":["language-text"]},"children":[{"type":"text","value":"dataset.myAttribute = \"Paul\";"}]}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Note that this is only a shortcut. In reality, the value is not added directly to the dataset. An attribute is created with the name "},{"type":"element","tagName":"code","properties":{"className":["language-text"]},"children":[{"type":"text","value":"myAttribute"}]},{"type":"text","value":", then the value is stored in the attribute, then the attribute is added to the dataset."}]},{"type":"text","value":"\n"},{"type":"element","tagName":"h3","properties":{"id":"length-property"},"children":[{"type":"text","value":"Length property"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"The length property returns the number of attributes present in the dataset. An attribute can be empty or contain one or more values."}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"This property may be used to list the attributes of the dataset using a for loop as in the following example:"}]},{"type":"text","value":"\n\n          "},{"type":"element","tagName":"codeblockcopytag","properties":{},"children":[{"type":"text","value":"for (var i = 0; i < dataset.length; i++) {\n  var attr = dataset.get(i);\n  print(attr);\n}"}]},{"type":"text","value":"\n          \n"},{"type":"element","tagName":"div","properties":{"className":["gatsby-highlight"],"dataLanguage":"javascript"},"children":[{"type":"element","tagName":"pre","properties":{"className":["language-javascript"]},"children":[{"type":"element","tagName":"code","properties":{"className":["language-javascript"]},"children":[{"type":"element","tagName":"span","properties":{"className":["token","keyword"]},"children":[{"type":"text","value":"for"}]},{"type":"text","value":" "},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":"("}]},{"type":"element","tagName":"span","properties":{"className":["token","keyword"]},"children":[{"type":"text","value":"var"}]},{"type":"text","value":" i "},{"type":"element","tagName":"span","properties":{"className":["token","operator"]},"children":[{"type":"text","value":"="}]},{"type":"text","value":" "},{"type":"element","tagName":"span","properties":{"className":["token","number"]},"children":[{"type":"text","value":"0"}]},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":";"}]},{"type":"text","value":" i "},{"type":"element","tagName":"span","properties":{"className":["token","operator"]},"children":[{"type":"text","value":"<"}]},{"type":"text","value":" dataset"},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":"."}]},{"type":"text","value":"length"},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":";"}]},{"type":"text","value":" i"},{"type":"element","tagName":"span","properties":{"className":["token","operator"]},"children":[{"type":"text","value":"++"}]},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":")"}]},{"type":"text","value":" "},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":"{"}]},{"type":"text","value":"\n  "},{"type":"element","tagName":"span","properties":{"className":["token","keyword"]},"children":[{"type":"text","value":"var"}]},{"type":"text","value":" attr "},{"type":"element","tagName":"span","properties":{"className":["token","operator"]},"children":[{"type":"text","value":"="}]},{"type":"text","value":" dataset"},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":"."}]},{"type":"element","tagName":"span","properties":{"className":["token","function"]},"children":[{"type":"text","value":"get"}]},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":"("}]},{"type":"text","value":"i"},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":")"}]},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":";"}]},{"type":"text","value":"\n  "},{"type":"element","tagName":"span","properties":{"className":["token","function"]},"children":[{"type":"text","value":"print"}]},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":"("}]},{"type":"text","value":"attr"},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":")"}]},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":";"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":"}"}]}]}]}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"An easier way to list the attributes of the dataset is to use another variant of the for loop like this:"}]},{"type":"text","value":"\n\n          "},{"type":"element","tagName":"codeblockcopytag","properties":{},"children":[{"type":"text","value":"for (var attr in dataset) {\n  print(attr);\n}"}]},{"type":"text","value":"\n          \n"},{"type":"element","tagName":"div","properties":{"className":["gatsby-highlight"],"dataLanguage":"javascript"},"children":[{"type":"element","tagName":"pre","properties":{"className":["language-javascript"]},"children":[{"type":"element","tagName":"code","properties":{"className":["language-javascript"]},"children":[{"type":"element","tagName":"span","properties":{"className":["token","keyword"]},"children":[{"type":"text","value":"for"}]},{"type":"text","value":" "},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":"("}]},{"type":"element","tagName":"span","properties":{"className":["token","keyword"]},"children":[{"type":"text","value":"var"}]},{"type":"text","value":" attr "},{"type":"element","tagName":"span","properties":{"className":["token","keyword"]},"children":[{"type":"text","value":"in"}]},{"type":"text","value":" dataset"},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":")"}]},{"type":"text","value":" "},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":"{"}]},{"type":"text","value":"\n  "},{"type":"element","tagName":"span","properties":{"className":["token","function"]},"children":[{"type":"text","value":"print"}]},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":"("}]},{"type":"text","value":"attr"},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":")"}]},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":";"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":"}"}]}]}]}]},{"type":"text","value":"\n"},{"type":"element","tagName":"h3","properties":{"id":"add-method"},"children":[{"type":"text","value":"Add method"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Adds an attribute in the dataset. The dataset does not accept duplicate attribute names. If an attribute with the same name already exists, the operation fails. To replace an attribute with the same name, you must first delete the data set with the "},{"type":"element","tagName":"code","properties":{"className":["language-text"]},"children":[{"type":"text","value":"remove"}]},{"type":"text","value":" method. The "},{"type":"element","tagName":"code","properties":{"className":["language-text"]},"children":[{"type":"text","value":"add"}]},{"type":"text","value":" method accepts either an "},{"type":"element","tagName":"code","properties":{"className":["language-text"]},"children":[{"type":"text","value":"Attribute"}]},{"type":"text","value":" type object or an attribute name. In the case of a call with an attribute name, the attribute will be created with the type declared in the pattern. If the pattern does not know the name, the created attribute is a "},{"type":"element","tagName":"code","properties":{"className":["language-text"]},"children":[{"type":"text","value":"String"}]},{"type":"text","value":" type, and single-valued. To change these characteristics, it is possible to pass two additional parameters."}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"element","tagName":"strong","properties":{},"children":[{"type":"text","value":"Signature"}]},{"type":"text","value":":"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"ul","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"element","tagName":"code","properties":{"className":["language-text"]},"children":[{"type":"text","value":"add(name_or_attribute, [type], [multivalued])"}]},{"type":"text","value":": Attribute"}]},{"type":"text","value":"\n"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"element","tagName":"strong","properties":{},"children":[{"type":"text","value":"Return value"}]},{"type":"text","value":":"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"ul","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"The attribute added or null if the add failed"}]},{"type":"text","value":"\n"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"element","tagName":"strong","properties":{},"children":[{"type":"text","value":"Parameters"}]},{"type":"text","value":":"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"ul","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"element","tagName":"code","properties":{"className":["language-text"]},"children":[{"type":"text","value":"name_or_attribute"}]},{"type":"text","value":": "},{"type":"element","tagName":"code","properties":{"className":["language-text"]},"children":[{"type":"text","value":"Attribute"}]},{"type":"text","value":" or "},{"type":"element","tagName":"code","properties":{"className":["language-text"]},"children":[{"type":"text","value":"String"}]},{"type":"text","value":". Name of the attribute or "},{"type":"element","tagName":"code","properties":{"className":["language-text"]},"children":[{"type":"text","value":"Attribute"}]},{"type":"text","value":" type object. If this parameter is a string, two additional parameters can specify the type and whether the attribute is multivalued."}]},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"element","tagName":"code","properties":{"className":["language-text"]},"children":[{"type":"text","value":"type"}]},{"type":"text","value":": "},{"type":"element","tagName":"code","properties":{"className":["language-text"]},"children":[{"type":"text","value":"String"}]},{"type":"text","value":" (optional) Attribute type ("},{"type":"element","tagName":"code","properties":{"className":["language-text"]},"children":[{"type":"text","value":"String, Boolean, Number"}]},{"type":"text","value":" or "},{"type":"element","tagName":"code","properties":{"className":["language-text"]},"children":[{"type":"text","value":"Date"}]},{"type":"text","value":"). Ignored if the parameter "},{"type":"element","tagName":"code","properties":{"className":["language-text"]},"children":[{"type":"text","value":"name_or_attribute"}]},{"type":"text","value":" is an "},{"type":"element","tagName":"code","properties":{"className":["language-text"]},"children":[{"type":"text","value":"Attribute"}]},{"type":"text","value":" type."}]},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"element","tagName":"code","properties":{"className":["language-text"]},"children":[{"type":"text","value":"multivalued: Boolean"}]},{"type":"text","value":" (optional). Indicates whether the attribute to be created should be multivalued. Ignored if the parameter "},{"type":"element","tagName":"code","properties":{"className":["language-text"]},"children":[{"type":"text","value":"name_or_attribute"}]},{"type":"text","value":" is an "},{"type":"element","tagName":"code","properties":{"className":["language-text"]},"children":[{"type":"text","value":"Attribute"}]},{"type":"text","value":" type."}]},{"type":"text","value":"\n"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"element","tagName":"strong","properties":{},"children":[{"type":"text","value":"Example call"}]},{"type":"text","value":":"}]},{"type":"text","value":"\n\n          "},{"type":"element","tagName":"codeblockcopytag","properties":{},"children":[{"type":"text","value":"var attr = new Attribute(\"myAttribute\", \"String\", false);\n\nattr.set(\"Paul\");\ndataset.add(attr);"}]},{"type":"text","value":"\n          \n"},{"type":"element","tagName":"div","properties":{"className":["gatsby-highlight"],"dataLanguage":"javascript"},"children":[{"type":"element","tagName":"pre","properties":{"className":["language-javascript"]},"children":[{"type":"element","tagName":"code","properties":{"className":["language-javascript"]},"children":[{"type":"element","tagName":"span","properties":{"className":["token","keyword"]},"children":[{"type":"text","value":"var"}]},{"type":"text","value":" attr "},{"type":"element","tagName":"span","properties":{"className":["token","operator"]},"children":[{"type":"text","value":"="}]},{"type":"text","value":" "},{"type":"element","tagName":"span","properties":{"className":["token","keyword"]},"children":[{"type":"text","value":"new"}]},{"type":"text","value":" "},{"type":"element","tagName":"span","properties":{"className":["token","class-name"]},"children":[{"type":"text","value":"Attribute"}]},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":"("}]},{"type":"element","tagName":"span","properties":{"className":["token","string"]},"children":[{"type":"text","value":"\"myAttribute\""}]},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":","}]},{"type":"text","value":" "},{"type":"element","tagName":"span","properties":{"className":["token","string"]},"children":[{"type":"text","value":"\"String\""}]},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":","}]},{"type":"text","value":" "},{"type":"element","tagName":"span","properties":{"className":["token","boolean"]},"children":[{"type":"text","value":"false"}]},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":")"}]},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":";"}]},{"type":"text","value":"\n\nattr"},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":"."}]},{"type":"element","tagName":"span","properties":{"className":["token","function"]},"children":[{"type":"text","value":"set"}]},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":"("}]},{"type":"element","tagName":"span","properties":{"className":["token","string"]},"children":[{"type":"text","value":"\"Paul\""}]},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":")"}]},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":";"}]},{"type":"text","value":"\ndataset"},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":"."}]},{"type":"element","tagName":"span","properties":{"className":["token","function"]},"children":[{"type":"text","value":"add"}]},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":"("}]},{"type":"text","value":"attr"},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":")"}]},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":";"}]}]}]}]},{"type":"text","value":"\n"},{"type":"element","tagName":"h3","properties":{"id":"duplicate-method"},"children":[{"type":"text","value":"Duplicate method"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Duplicates an attribute present in the dataset under a new name.\r\nThe new name must be unique. The set of values is duplicated so that the two do not share any attribute value. Note that both attributes are now considered different by the equals method because of their name."}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"element","tagName":"strong","properties":{},"children":[{"type":"text","value":"Signature"}]},{"type":"text","value":":"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"ul","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"element","tagName":"code","properties":{"className":["language-text"]},"children":[{"type":"text","value":"duplicate(oldName, newName)"}]},{"type":"text","value":": Attribute"}]},{"type":"text","value":"\n"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"element","tagName":"strong","properties":{},"children":[{"type":"text","value":"Return value"}]},{"type":"text","value":":"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"ul","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"The duplicated attribute or null if the duplication failed"}]},{"type":"text","value":"\n"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"element","tagName":"strong","properties":{},"children":[{"type":"text","value":"Parameters"}]},{"type":"text","value":":"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"ul","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"element","tagName":"code","properties":{"className":["language-text"]},"children":[{"type":"text","value":"oldName"}]},{"type":"text","value":": "},{"type":"element","tagName":"code","properties":{"className":["language-text"]},"children":[{"type":"text","value":"String"}]},{"type":"text","value":". Name of attribute to be duplicated."}]},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"element","tagName":"code","properties":{"className":["language-text"]},"children":[{"type":"text","value":"newName"}]},{"type":"text","value":": "},{"type":"element","tagName":"code","properties":{"className":["language-text"]},"children":[{"type":"text","value":"String"}]},{"type":"text","value":". New name of duplicated attribute."}]},{"type":"text","value":"\n"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"element","tagName":"strong","properties":{},"children":[{"type":"text","value":"Example call"}]},{"type":"text","value":":"}]},{"type":"text","value":"\n\n          "},{"type":"element","tagName":"codeblockcopytag","properties":{},"children":[{"type":"text","value":"var newAttr = dataset.duplicate(\"old\", \"new\");\n\nif (newAttr == null) {\n  print(\"Error: the dataset does not contain the attribute 'old' or\n  it already contains an attribute 'new'\");\n}"}]},{"type":"text","value":"\n          \n"},{"type":"element","tagName":"div","properties":{"className":["gatsby-highlight"],"dataLanguage":"javascript"},"children":[{"type":"element","tagName":"pre","properties":{"className":["language-javascript"]},"children":[{"type":"element","tagName":"code","properties":{"className":["language-javascript"]},"children":[{"type":"element","tagName":"span","properties":{"className":["token","keyword"]},"children":[{"type":"text","value":"var"}]},{"type":"text","value":" newAttr "},{"type":"element","tagName":"span","properties":{"className":["token","operator"]},"children":[{"type":"text","value":"="}]},{"type":"text","value":" dataset"},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":"."}]},{"type":"element","tagName":"span","properties":{"className":["token","function"]},"children":[{"type":"text","value":"duplicate"}]},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":"("}]},{"type":"element","tagName":"span","properties":{"className":["token","string"]},"children":[{"type":"text","value":"\"old\""}]},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":","}]},{"type":"text","value":" "},{"type":"element","tagName":"span","properties":{"className":["token","string"]},"children":[{"type":"text","value":"\"new\""}]},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":")"}]},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":";"}]},{"type":"text","value":"\n\n"},{"type":"element","tagName":"span","properties":{"className":["token","keyword"]},"children":[{"type":"text","value":"if"}]},{"type":"text","value":" "},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":"("}]},{"type":"text","value":"newAttr "},{"type":"element","tagName":"span","properties":{"className":["token","operator"]},"children":[{"type":"text","value":"=="}]},{"type":"text","value":" "},{"type":"element","tagName":"span","properties":{"className":["token","keyword"]},"children":[{"type":"text","value":"null"}]},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":")"}]},{"type":"text","value":" "},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":"{"}]},{"type":"text","value":"\n  "},{"type":"element","tagName":"span","properties":{"className":["token","function"]},"children":[{"type":"text","value":"print"}]},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":"("}]},{"type":"text","value":"\"Error"},{"type":"element","tagName":"span","properties":{"className":["token","operator"]},"children":[{"type":"text","value":":"}]},{"type":"text","value":" the dataset does not contain the attribute "},{"type":"element","tagName":"span","properties":{"className":["token","string"]},"children":[{"type":"text","value":"'old'"}]},{"type":"text","value":" or\n  it already contains an attribute "},{"type":"element","tagName":"span","properties":{"className":["token","string"]},"children":[{"type":"text","value":"'new'"}]},{"type":"text","value":"\""},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":")"}]},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":";"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":"}"}]}]}]}]},{"type":"text","value":"\n"},{"type":"element","tagName":"h3","properties":{"id":"equals-method"},"children":[{"type":"text","value":"Equals method"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Checks equality with another object. A dataset is considered equal to another if the two datasets have the same attributes (characteristics and list of values)"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"element","tagName":"strong","properties":{},"children":[{"type":"text","value":"Signature"}]},{"type":"text","value":":"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"ul","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"element","tagName":"code","properties":{"className":["language-text"]},"children":[{"type":"text","value":"equals(object)"}]},{"type":"text","value":": "},{"type":"element","tagName":"code","properties":{"className":["language-text"]},"children":[{"type":"text","value":"Boolean"}]}]},{"type":"text","value":"\n"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"element","tagName":"strong","properties":{},"children":[{"type":"text","value":"Return value"}]},{"type":"text","value":":"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"ul","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"element","tagName":"code","properties":{"className":["language-text"]},"children":[{"type":"text","value":"true"}]},{"type":"text","value":" if the object passed as a parameter is a dataset with the same attributes"}]},{"type":"text","value":"\n"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"element","tagName":"strong","properties":{},"children":[{"type":"text","value":"Parameters"}]},{"type":"text","value":":"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"ul","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"element","tagName":"code","properties":{"className":["language-text"]},"children":[{"type":"text","value":"object"}]},{"type":"text","value":": "},{"type":"element","tagName":"code","properties":{"className":["language-text"]},"children":[{"type":"text","value":"Object"}]},{"type":"text","value":". The object to compare with the dataset."}]},{"type":"text","value":"\n"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"element","tagName":"strong","properties":{},"children":[{"type":"text","value":"Example call"}]},{"type":"text","value":":"}]},{"type":"text","value":"\n\n          "},{"type":"element","tagName":"codeblockcopytag","properties":{},"children":[{"type":"text","value":"var same = dataset.equals(otherDataset);\n\nif (! same) {\n  print(\"The two datasets are different\");\n}"}]},{"type":"text","value":"\n          \n"},{"type":"element","tagName":"div","properties":{"className":["gatsby-highlight"],"dataLanguage":"javascript"},"children":[{"type":"element","tagName":"pre","properties":{"className":["language-javascript"]},"children":[{"type":"element","tagName":"code","properties":{"className":["language-javascript"]},"children":[{"type":"element","tagName":"span","properties":{"className":["token","keyword"]},"children":[{"type":"text","value":"var"}]},{"type":"text","value":" same "},{"type":"element","tagName":"span","properties":{"className":["token","operator"]},"children":[{"type":"text","value":"="}]},{"type":"text","value":" dataset"},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":"."}]},{"type":"element","tagName":"span","properties":{"className":["token","function"]},"children":[{"type":"text","value":"equals"}]},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":"("}]},{"type":"text","value":"otherDataset"},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":")"}]},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":";"}]},{"type":"text","value":"\n\n"},{"type":"element","tagName":"span","properties":{"className":["token","keyword"]},"children":[{"type":"text","value":"if"}]},{"type":"text","value":" "},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":"("}]},{"type":"element","tagName":"span","properties":{"className":["token","operator"]},"children":[{"type":"text","value":"!"}]},{"type":"text","value":" same"},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":")"}]},{"type":"text","value":" "},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":"{"}]},{"type":"text","value":"\n  "},{"type":"element","tagName":"span","properties":{"className":["token","function"]},"children":[{"type":"text","value":"print"}]},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":"("}]},{"type":"element","tagName":"span","properties":{"className":["token","string"]},"children":[{"type":"text","value":"\"The two datasets are different\""}]},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":")"}]},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":";"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":"}"}]}]}]}]},{"type":"text","value":"\n"},{"type":"element","tagName":"h3","properties":{"id":"get-method"},"children":[{"type":"text","value":"Get method"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Retrieves an attribute by its name."}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"element","tagName":"strong","properties":{},"children":[{"type":"text","value":"Signature"}]},{"type":"text","value":":"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"ul","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"element","tagName":"code","properties":{"className":["language-text"]},"children":[{"type":"text","value":"get(name)"}]},{"type":"text","value":": "},{"type":"element","tagName":"code","properties":{"className":["language-text"]},"children":[{"type":"text","value":"Attribute"}]}]},{"type":"text","value":"\n"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"element","tagName":"strong","properties":{},"children":[{"type":"text","value":"Return value"}]},{"type":"text","value":":"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"ul","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"The attribute or null if no attribute corresponds to the name sent as a parameter"}]},{"type":"text","value":"\n"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"element","tagName":"strong","properties":{},"children":[{"type":"text","value":"Parameters"}]},{"type":"text","value":":"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"ul","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"element","tagName":"code","properties":{"className":["language-text"]},"children":[{"type":"text","value":"name"}]},{"type":"text","value":": "},{"type":"element","tagName":"code","properties":{"className":["language-text"]},"children":[{"type":"text","value":"String"}]},{"type":"text","value":". Name of the attribute sought."}]},{"type":"text","value":"\n"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"element","tagName":"strong","properties":{},"children":[{"type":"text","value":"Example call"}]},{"type":"text","value":":"}]},{"type":"text","value":"\n\n          "},{"type":"element","tagName":"codeblockcopytag","properties":{},"children":[{"type":"text","value":"var attr = dataset.get(\"myAttribute\");\n\nif (attr == null) {\n  print(\"The attribute 'myAttribute' does not exist in the dataset\");\n}"}]},{"type":"text","value":"\n          \n"},{"type":"element","tagName":"div","properties":{"className":["gatsby-highlight"],"dataLanguage":"javascript"},"children":[{"type":"element","tagName":"pre","properties":{"className":["language-javascript"]},"children":[{"type":"element","tagName":"code","properties":{"className":["language-javascript"]},"children":[{"type":"element","tagName":"span","properties":{"className":["token","keyword"]},"children":[{"type":"text","value":"var"}]},{"type":"text","value":" attr "},{"type":"element","tagName":"span","properties":{"className":["token","operator"]},"children":[{"type":"text","value":"="}]},{"type":"text","value":" dataset"},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":"."}]},{"type":"element","tagName":"span","properties":{"className":["token","function"]},"children":[{"type":"text","value":"get"}]},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":"("}]},{"type":"element","tagName":"span","properties":{"className":["token","string"]},"children":[{"type":"text","value":"\"myAttribute\""}]},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":")"}]},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":";"}]},{"type":"text","value":"\n\n"},{"type":"element","tagName":"span","properties":{"className":["token","keyword"]},"children":[{"type":"text","value":"if"}]},{"type":"text","value":" "},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":"("}]},{"type":"text","value":"attr "},{"type":"element","tagName":"span","properties":{"className":["token","operator"]},"children":[{"type":"text","value":"=="}]},{"type":"text","value":" "},{"type":"element","tagName":"span","properties":{"className":["token","keyword"]},"children":[{"type":"text","value":"null"}]},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":")"}]},{"type":"text","value":" "},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":"{"}]},{"type":"text","value":"\n  "},{"type":"element","tagName":"span","properties":{"className":["token","function"]},"children":[{"type":"text","value":"print"}]},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":"("}]},{"type":"element","tagName":"span","properties":{"className":["token","string"]},"children":[{"type":"text","value":"\"The attribute 'myAttribute' does not exist in the dataset\""}]},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":")"}]},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":";"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":"}"}]}]}]}]},{"type":"text","value":"\n"},{"type":"element","tagName":"h3","properties":{"id":"remove-method"},"children":[{"type":"text","value":"Remove method"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Deletes an attribute from the dataset by its name."}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"element","tagName":"strong","properties":{},"children":[{"type":"text","value":"Signature"}]},{"type":"text","value":":"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"ul","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"element","tagName":"code","properties":{"className":["language-text"]},"children":[{"type":"text","value":"remove(name)"}]},{"type":"text","value":": "},{"type":"element","tagName":"code","properties":{"className":["language-text"]},"children":[{"type":"text","value":"Attribute"}]}]},{"type":"text","value":"\n"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"element","tagName":"strong","properties":{},"children":[{"type":"text","value":"Return value"}]},{"type":"text","value":":"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"ul","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"The deleted attribute, or null if the deletion failed"}]},{"type":"text","value":"\n"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"element","tagName":"strong","properties":{},"children":[{"type":"text","value":"Parameters"}]},{"type":"text","value":":"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"ul","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"element","tagName":"code","properties":{"className":["language-text"]},"children":[{"type":"text","value":"name"}]},{"type":"text","value":": "},{"type":"element","tagName":"code","properties":{"className":["language-text"]},"children":[{"type":"text","value":"String"}]},{"type":"text","value":". Name of the attribute to delete."}]},{"type":"text","value":"\n"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"element","tagName":"strong","properties":{},"children":[{"type":"text","value":"Example call"}]},{"type":"text","value":":"}]},{"type":"text","value":"\n\n          "},{"type":"element","tagName":"codeblockcopytag","properties":{},"children":[{"type":"text","value":"var attr = dataset.remove(\"myAttribute\");\n\nif (attr == null) {\n  print(\"The attribute 'myAttribute' does not exist in the dataset\");\n}"}]},{"type":"text","value":"\n          \n"},{"type":"element","tagName":"div","properties":{"className":["gatsby-highlight"],"dataLanguage":"javascript"},"children":[{"type":"element","tagName":"pre","properties":{"className":["language-javascript"]},"children":[{"type":"element","tagName":"code","properties":{"className":["language-javascript"]},"children":[{"type":"element","tagName":"span","properties":{"className":["token","keyword"]},"children":[{"type":"text","value":"var"}]},{"type":"text","value":" attr "},{"type":"element","tagName":"span","properties":{"className":["token","operator"]},"children":[{"type":"text","value":"="}]},{"type":"text","value":" dataset"},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":"."}]},{"type":"element","tagName":"span","properties":{"className":["token","function"]},"children":[{"type":"text","value":"remove"}]},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":"("}]},{"type":"element","tagName":"span","properties":{"className":["token","string"]},"children":[{"type":"text","value":"\"myAttribute\""}]},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":")"}]},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":";"}]},{"type":"text","value":"\n\n"},{"type":"element","tagName":"span","properties":{"className":["token","keyword"]},"children":[{"type":"text","value":"if"}]},{"type":"text","value":" "},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":"("}]},{"type":"text","value":"attr "},{"type":"element","tagName":"span","properties":{"className":["token","operator"]},"children":[{"type":"text","value":"=="}]},{"type":"text","value":" "},{"type":"element","tagName":"span","properties":{"className":["token","keyword"]},"children":[{"type":"text","value":"null"}]},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":")"}]},{"type":"text","value":" "},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":"{"}]},{"type":"text","value":"\n  "},{"type":"element","tagName":"span","properties":{"className":["token","function"]},"children":[{"type":"text","value":"print"}]},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":"("}]},{"type":"element","tagName":"span","properties":{"className":["token","string"]},"children":[{"type":"text","value":"\"The attribute 'myAttribute' does not exist in the dataset\""}]},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":")"}]},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":";"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":"}"}]}]}]}]},{"type":"text","value":"\n"},{"type":"element","tagName":"h3","properties":{"id":"rename-method"},"children":[{"type":"text","value":"Rename method"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Renames an attribute. The new name must be unique."}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"element","tagName":"strong","properties":{},"children":[{"type":"text","value":"Signature"}]},{"type":"text","value":":"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"ul","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"element","tagName":"code","properties":{"className":["language-text"]},"children":[{"type":"text","value":"rename(oldName, newName)"}]},{"type":"text","value":": Attribute"}]},{"type":"text","value":"\n"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"element","tagName":"strong","properties":{},"children":[{"type":"text","value":"Return value"}]},{"type":"text","value":":"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"ul","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"The renamed attribute or "},{"type":"element","tagName":"code","properties":{"className":["language-text"]},"children":[{"type":"text","value":"null"}]},{"type":"text","value":" if the renaming failed"}]},{"type":"text","value":"\n"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"element","tagName":"strong","properties":{},"children":[{"type":"text","value":"Parameters"}]},{"type":"text","value":":"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"ul","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"element","tagName":"code","properties":{"className":["language-text"]},"children":[{"type":"text","value":"oldName"}]},{"type":"text","value":": String Name of the attribute to rename."}]},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"element","tagName":"code","properties":{"className":["language-text"]},"children":[{"type":"text","value":"newName"}]},{"type":"text","value":": String New attribute name."}]},{"type":"text","value":"\n"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"element","tagName":"strong","properties":{},"children":[{"type":"text","value":"Example call"}]},{"type":"text","value":":"}]},{"type":"text","value":"\n\n          "},{"type":"element","tagName":"codeblockcopytag","properties":{},"children":[{"type":"text","value":"var attr = dataset.rename(\"old\", \"new\");\n\nif (attr == null) {\n  print(\"Error: the dataset does not contain the attribute 'old' or\n  it already contains an attribute 'new'\");\n}"}]},{"type":"text","value":"\n          \n"},{"type":"element","tagName":"div","properties":{"className":["gatsby-highlight"],"dataLanguage":"javascript"},"children":[{"type":"element","tagName":"pre","properties":{"className":["language-javascript"]},"children":[{"type":"element","tagName":"code","properties":{"className":["language-javascript"]},"children":[{"type":"element","tagName":"span","properties":{"className":["token","keyword"]},"children":[{"type":"text","value":"var"}]},{"type":"text","value":" attr "},{"type":"element","tagName":"span","properties":{"className":["token","operator"]},"children":[{"type":"text","value":"="}]},{"type":"text","value":" dataset"},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":"."}]},{"type":"element","tagName":"span","properties":{"className":["token","function"]},"children":[{"type":"text","value":"rename"}]},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":"("}]},{"type":"element","tagName":"span","properties":{"className":["token","string"]},"children":[{"type":"text","value":"\"old\""}]},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":","}]},{"type":"text","value":" "},{"type":"element","tagName":"span","properties":{"className":["token","string"]},"children":[{"type":"text","value":"\"new\""}]},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":")"}]},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":";"}]},{"type":"text","value":"\n\n"},{"type":"element","tagName":"span","properties":{"className":["token","keyword"]},"children":[{"type":"text","value":"if"}]},{"type":"text","value":" "},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":"("}]},{"type":"text","value":"attr "},{"type":"element","tagName":"span","properties":{"className":["token","operator"]},"children":[{"type":"text","value":"=="}]},{"type":"text","value":" "},{"type":"element","tagName":"span","properties":{"className":["token","keyword"]},"children":[{"type":"text","value":"null"}]},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":")"}]},{"type":"text","value":" "},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":"{"}]},{"type":"text","value":"\n  "},{"type":"element","tagName":"span","properties":{"className":["token","function"]},"children":[{"type":"text","value":"print"}]},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":"("}]},{"type":"text","value":"\"Error"},{"type":"element","tagName":"span","properties":{"className":["token","operator"]},"children":[{"type":"text","value":":"}]},{"type":"text","value":" the dataset does not contain the attribute "},{"type":"element","tagName":"span","properties":{"className":["token","string"]},"children":[{"type":"text","value":"'old'"}]},{"type":"text","value":" or\n  it already contains an attribute "},{"type":"element","tagName":"span","properties":{"className":["token","string"]},"children":[{"type":"text","value":"'new'"}]},{"type":"text","value":"\""},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":")"}]},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":";"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":"}"}]}]}]}]},{"type":"text","value":"\n"},{"type":"element","tagName":"h3","properties":{"id":"isempty-method"},"children":[{"type":"text","value":"IsEmpty method"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Verifies if the attribute contains a non-empty value"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"element","tagName":"strong","properties":{},"children":[{"type":"text","value":"Signature"}]},{"type":"text","value":":"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"ul","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"element","tagName":"code","properties":{"className":["language-text"]},"children":[{"type":"text","value":"isEmpty(name_or_attribute)"}]},{"type":"text","value":": "},{"type":"element","tagName":"code","properties":{"className":["language-text"]},"children":[{"type":"text","value":"Boolean"}]}]},{"type":"text","value":"\n"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"element","tagName":"strong","properties":{},"children":[{"type":"text","value":"Return value"}]},{"type":"text","value":":"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"ul","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"element","tagName":"code","properties":{"className":["language-text"]},"children":[{"type":"text","value":"true"}]},{"type":"text","value":" if the attribute contains at least non-empty value"}]},{"type":"text","value":"\n"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"element","tagName":"strong","properties":{},"children":[{"type":"text","value":"Parameters"}]},{"type":"text","value":":"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"ul","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"element","tagName":"code","properties":{"className":["language-text"]},"children":[{"type":"text","value":"name_or_attribute"}]},{"type":"text","value":": "},{"type":"element","tagName":"code","properties":{"className":["language-text"]},"children":[{"type":"text","value":"String"}]},{"type":"text","value":" or "},{"type":"element","tagName":"code","properties":{"className":["language-text"]},"children":[{"type":"text","value":"Attribute"}]},{"type":"text","value":". Name of the attribute or Attribute type object."}]},{"type":"text","value":"\n"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"element","tagName":"strong","properties":{},"children":[{"type":"text","value":"Example call"}]},{"type":"text","value":":"}]},{"type":"text","value":"\n\n          "},{"type":"element","tagName":"codeblockcopytag","properties":{},"children":[{"type":"text","value":"var vide = dataset.isEmpty(\"myAttribute\");\n\nif (vide) {\n  print(\"The attribute 'myAttribute' of the dataset is empty\");\n}"}]},{"type":"text","value":"\n          \n"},{"type":"element","tagName":"div","properties":{"className":["gatsby-highlight"],"dataLanguage":"javascript"},"children":[{"type":"element","tagName":"pre","properties":{"className":["language-javascript"]},"children":[{"type":"element","tagName":"code","properties":{"className":["language-javascript"]},"children":[{"type":"element","tagName":"span","properties":{"className":["token","keyword"]},"children":[{"type":"text","value":"var"}]},{"type":"text","value":" vide "},{"type":"element","tagName":"span","properties":{"className":["token","operator"]},"children":[{"type":"text","value":"="}]},{"type":"text","value":" dataset"},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":"."}]},{"type":"element","tagName":"span","properties":{"className":["token","function"]},"children":[{"type":"text","value":"isEmpty"}]},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":"("}]},{"type":"element","tagName":"span","properties":{"className":["token","string"]},"children":[{"type":"text","value":"\"myAttribute\""}]},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":")"}]},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":";"}]},{"type":"text","value":"\n\n"},{"type":"element","tagName":"span","properties":{"className":["token","keyword"]},"children":[{"type":"text","value":"if"}]},{"type":"text","value":" "},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":"("}]},{"type":"text","value":"vide"},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":")"}]},{"type":"text","value":" "},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":"{"}]},{"type":"text","value":"\n  "},{"type":"element","tagName":"span","properties":{"className":["token","function"]},"children":[{"type":"text","value":"print"}]},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":"("}]},{"type":"element","tagName":"span","properties":{"className":["token","string"]},"children":[{"type":"text","value":"\"The attribute 'myAttribute' of the dataset is empty\""}]},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":")"}]},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":";"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":"}"}]}]}]}]},{"type":"text","value":"\n"},{"type":"element","tagName":"h3","properties":{"id":"clear-events"},"children":[{"type":"text","value":"Clear events"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Erases all the events detected"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"element","tagName":"strong","properties":{},"children":[{"type":"text","value":"Signature"}]},{"type":"text","value":":"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"ul","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"element","tagName":"code","properties":{"className":["language-text"]},"children":[{"type":"text","value":"clearEvents(): Void"}]}]},{"type":"text","value":"\n"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"element","tagName":"strong","properties":{},"children":[{"type":"text","value":"Return value"}]},{"type":"text","value":":"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"ul","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"none"}]},{"type":"text","value":"\n"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"element","tagName":"strong","properties":{},"children":[{"type":"text","value":"Parameters"}]},{"type":"text","value":":"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"ul","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"none"}]},{"type":"text","value":"\n"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"element","tagName":"strong","properties":{},"children":[{"type":"text","value":"Example call"}]},{"type":"text","value":":"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"element","tagName":"code","properties":{"className":["language-text"]},"children":[{"type":"text","value":"dataset.clearEvents();"}]}]},{"type":"text","value":"\n"},{"type":"element","tagName":"h3","properties":{"id":"add-event"},"children":[{"type":"text","value":"Add event"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Add an event to the list"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"element","tagName":"strong","properties":{},"children":[{"type":"text","value":"Signature"}]},{"type":"text","value":":"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"ul","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"element","tagName":"code","properties":{"className":["language-text"]},"children":[{"type":"text","value":"addEvent(name)"}]},{"type":"text","value":": "},{"type":"element","tagName":"code","properties":{"className":["language-text"]},"children":[{"type":"text","value":"Void"}]}]},{"type":"text","value":"\n"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"element","tagName":"strong","properties":{},"children":[{"type":"text","value":"Return value"}]},{"type":"text","value":":"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"ul","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"none"}]},{"type":"text","value":"\n"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"element","tagName":"strong","properties":{},"children":[{"type":"text","value":"Parameters"}]},{"type":"text","value":":"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"ul","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"name: String Name of the event to add."}]},{"type":"text","value":"\n"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"element","tagName":"strong","properties":{},"children":[{"type":"text","value":"Example call"}]},{"type":"text","value":":"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"element","tagName":"code","properties":{"className":["language-text"]},"children":[{"type":"text","value":"dataset.addEvent(\"no unique ID\");"}]}]},{"type":"text","value":"\n"},{"type":"element","tagName":"h3","properties":{"id":"remove-event"},"children":[{"type":"text","value":"Remove event"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Deletes an event from the list."}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"element","tagName":"strong","properties":{},"children":[{"type":"text","value":"Signature"}]},{"type":"text","value":":"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"ul","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"element","tagName":"code","properties":{"className":["language-text"]},"children":[{"type":"text","value":"removeEvent(name)"}]},{"type":"text","value":": "},{"type":"element","tagName":"code","properties":{"className":["language-text"]},"children":[{"type":"text","value":"Void"}]}]},{"type":"text","value":"\n"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"element","tagName":"strong","properties":{},"children":[{"type":"text","value":"Return value"}]},{"type":"text","value":":"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"ul","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"none"}]},{"type":"text","value":"\n"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"element","tagName":"strong","properties":{},"children":[{"type":"text","value":"Parameters"}]},{"type":"text","value":":"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"ul","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"element","tagName":"code","properties":{"className":["language-text"]},"children":[{"type":"text","value":"name"}]},{"type":"text","value":": "},{"type":"element","tagName":"code","properties":{"className":["language-text"]},"children":[{"type":"text","value":"String"}]},{"type":"text","value":". Name of the event to delete."}]},{"type":"text","value":"\n"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"element","tagName":"strong","properties":{},"children":[{"type":"text","value":"Example call"}]},{"type":"text","value":":"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"element","tagName":"code","properties":{"className":["language-text"]},"children":[{"type":"text","value":"dataset.removeEvent(\"no unique ID\");"}]}]},{"type":"text","value":"\n"},{"type":"element","tagName":"h3","properties":{"id":"has-event"},"children":[{"type":"text","value":"Has event"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Verifies the presence of an event in the list"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"element","tagName":"strong","properties":{},"children":[{"type":"text","value":"Signature"}]},{"type":"text","value":":"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"ul","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"element","tagName":"code","properties":{"className":["language-text"]},"children":[{"type":"text","value":"hasEvent(name)"}]},{"type":"text","value":": "},{"type":"element","tagName":"code","properties":{"className":["language-text"]},"children":[{"type":"text","value":"Boolean"}]}]},{"type":"text","value":"\n"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"element","tagName":"strong","properties":{},"children":[{"type":"text","value":"Return value"}]},{"type":"text","value":":"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"ul","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"true if the event is present in the list"}]},{"type":"text","value":"\n"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"element","tagName":"strong","properties":{},"children":[{"type":"text","value":"Parameters"}]},{"type":"text","value":":"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"ul","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"name: String Name of the event to verify."}]},{"type":"text","value":"\n"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"element","tagName":"strong","properties":{},"children":[{"type":"text","value":"Example call"}]},{"type":"text","value":":"}]},{"type":"text","value":"\n\n          "},{"type":"element","tagName":"codeblockcopytag","properties":{},"children":[{"type":"text","value":"var EmptyUniqueID = dataset.hasEvent(\"no unique ID\");\n\nif (EmptyUniqueID) {\n  print(\"Error: Identity has no unique ID\");\n}"}]},{"type":"text","value":"\n          \n"},{"type":"element","tagName":"div","properties":{"className":["gatsby-highlight"],"dataLanguage":"javascript"},"children":[{"type":"element","tagName":"pre","properties":{"className":["language-javascript"]},"children":[{"type":"element","tagName":"code","properties":{"className":["language-javascript"]},"children":[{"type":"element","tagName":"span","properties":{"className":["token","keyword"]},"children":[{"type":"text","value":"var"}]},{"type":"text","value":" EmptyUniqueID "},{"type":"element","tagName":"span","properties":{"className":["token","operator"]},"children":[{"type":"text","value":"="}]},{"type":"text","value":" dataset"},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":"."}]},{"type":"element","tagName":"span","properties":{"className":["token","function"]},"children":[{"type":"text","value":"hasEvent"}]},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":"("}]},{"type":"element","tagName":"span","properties":{"className":["token","string"]},"children":[{"type":"text","value":"\"no unique ID\""}]},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":")"}]},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":";"}]},{"type":"text","value":"\n\n"},{"type":"element","tagName":"span","properties":{"className":["token","keyword"]},"children":[{"type":"text","value":"if"}]},{"type":"text","value":" "},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":"("}]},{"type":"text","value":"EmptyUniqueID"},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":")"}]},{"type":"text","value":" "},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":"{"}]},{"type":"text","value":"\n  "},{"type":"element","tagName":"span","properties":{"className":["token","function"]},"children":[{"type":"text","value":"print"}]},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":"("}]},{"type":"element","tagName":"span","properties":{"className":["token","string"]},"children":[{"type":"text","value":"\"Error: Identity has no unique ID\""}]},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":")"}]},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":";"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":"}"}]}]}]}]},{"type":"text","value":"\n"},{"type":"element","tagName":"h3","properties":{"id":"event-count"},"children":[{"type":"text","value":"Event count"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Retrieves the number of events present in the list."}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"element","tagName":"strong","properties":{},"children":[{"type":"text","value":"Signature"}]},{"type":"text","value":":"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"ul","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"element","tagName":"code","properties":{"className":["language-text"]},"children":[{"type":"text","value":"eventCount()"}]},{"type":"text","value":": "},{"type":"element","tagName":"code","properties":{"className":["language-text"]},"children":[{"type":"text","value":"Number"}]}]},{"type":"text","value":"\n"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"element","tagName":"strong","properties":{},"children":[{"type":"text","value":"Return value"}]},{"type":"text","value":":"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"ul","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"The number of events in the list"}]},{"type":"text","value":"\n"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"element","tagName":"strong","properties":{},"children":[{"type":"text","value":"Parameters"}]},{"type":"text","value":":"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"ul","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"none"}]},{"type":"text","value":"\n"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"element","tagName":"strong","properties":{},"children":[{"type":"text","value":"Example call"}]},{"type":"text","value":":"}]},{"type":"text","value":"\n\n          "},{"type":"element","tagName":"codeblockcopytag","properties":{},"children":[{"type":"text","value":"var nb = dataset.eventCount();\n\nif (nb == 0) {\n  print(\"No event detected\");\n}"}]},{"type":"text","value":"\n          \n"},{"type":"element","tagName":"div","properties":{"className":["gatsby-highlight"],"dataLanguage":"javascript"},"children":[{"type":"element","tagName":"pre","properties":{"className":["language-javascript"]},"children":[{"type":"element","tagName":"code","properties":{"className":["language-javascript"]},"children":[{"type":"element","tagName":"span","properties":{"className":["token","keyword"]},"children":[{"type":"text","value":"var"}]},{"type":"text","value":" nb "},{"type":"element","tagName":"span","properties":{"className":["token","operator"]},"children":[{"type":"text","value":"="}]},{"type":"text","value":" dataset"},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":"."}]},{"type":"element","tagName":"span","properties":{"className":["token","function"]},"children":[{"type":"text","value":"eventCount"}]},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":"("}]},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":")"}]},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":";"}]},{"type":"text","value":"\n\n"},{"type":"element","tagName":"span","properties":{"className":["token","keyword"]},"children":[{"type":"text","value":"if"}]},{"type":"text","value":" "},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":"("}]},{"type":"text","value":"nb "},{"type":"element","tagName":"span","properties":{"className":["token","operator"]},"children":[{"type":"text","value":"=="}]},{"type":"text","value":" "},{"type":"element","tagName":"span","properties":{"className":["token","number"]},"children":[{"type":"text","value":"0"}]},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":")"}]},{"type":"text","value":" "},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":"{"}]},{"type":"text","value":"\n  "},{"type":"element","tagName":"span","properties":{"className":["token","function"]},"children":[{"type":"text","value":"print"}]},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":"("}]},{"type":"element","tagName":"span","properties":{"className":["token","string"]},"children":[{"type":"text","value":"\"No event detected\""}]},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":")"}]},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":";"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":"}"}]}]}]}]},{"type":"text","value":"\n"},{"type":"element","tagName":"h3","properties":{"id":"tostring"},"children":[{"type":"text","value":"ToString"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Constructs a string giving the content of the dataset."}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"element","tagName":"strong","properties":{},"children":[{"type":"text","value":"Signature"}]},{"type":"text","value":" :"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"ul","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"element","tagName":"code","properties":{"className":["language-text"]},"children":[{"type":"text","value":"toString()"}]},{"type":"text","value":": "},{"type":"element","tagName":"code","properties":{"className":["language-text"]},"children":[{"type":"text","value":"String"}]}]},{"type":"text","value":"\n"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"element","tagName":"strong","properties":{},"children":[{"type":"text","value":"Return value"}]},{"type":"text","value":" :"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"ul","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"String containing the list of attribute names separated by commas"}]},{"type":"text","value":"\n"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"element","tagName":"strong","properties":{},"children":[{"type":"text","value":"Parameters"}]},{"type":"text","value":" :"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"ul","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"none"}]},{"type":"text","value":"\n"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"element","tagName":"strong","properties":{},"children":[{"type":"text","value":"Example call"}]},{"type":"text","value":":"}]},{"type":"text","value":"\n\n          "},{"type":"element","tagName":"codeblockcopytag","properties":{},"children":[{"type":"text","value":"print\\`\\`(\"Content of dataset: \" +\\` \\`dataset\\`\\`.toString());"}]},{"type":"text","value":"\n          \n"},{"type":"element","tagName":"div","properties":{"className":["gatsby-highlight"],"dataLanguage":"javascript"},"children":[{"type":"element","tagName":"pre","properties":{"className":["language-javascript"]},"children":[{"type":"element","tagName":"code","properties":{"className":["language-javascript"]},"children":[{"type":"text","value":"print"},{"type":"element","tagName":"span","properties":{"className":["token","template-string"]},"children":[{"type":"element","tagName":"span","properties":{"className":["token","template-punctuation","string"]},"children":[{"type":"text","value":"`"}]},{"type":"element","tagName":"span","properties":{"className":["token","template-punctuation","string"]},"children":[{"type":"text","value":"`"}]}]},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":"("}]},{"type":"element","tagName":"span","properties":{"className":["token","string"]},"children":[{"type":"text","value":"\"Content of dataset: \""}]},{"type":"text","value":" "},{"type":"element","tagName":"span","properties":{"className":["token","operator"]},"children":[{"type":"text","value":"+"}]},{"type":"element","tagName":"span","properties":{"className":["token","template-string"]},"children":[{"type":"element","tagName":"span","properties":{"className":["token","template-punctuation","string"]},"children":[{"type":"text","value":"`"}]},{"type":"element","tagName":"span","properties":{"className":["token","string"]},"children":[{"type":"text","value":" "}]},{"type":"element","tagName":"span","properties":{"className":["token","template-punctuation","string"]},"children":[{"type":"text","value":"`"}]}]},{"type":"text","value":"dataset"},{"type":"element","tagName":"span","properties":{"className":["token","template-string"]},"children":[{"type":"element","tagName":"span","properties":{"className":["token","template-punctuation","string"]},"children":[{"type":"text","value":"`"}]},{"type":"element","tagName":"span","properties":{"className":["token","template-punctuation","string"]},"children":[{"type":"text","value":"`"}]}]},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":"."}]},{"type":"element","tagName":"span","properties":{"className":["token","function"]},"children":[{"type":"text","value":"toString"}]},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":"("}]},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":")"}]},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":")"}]},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":";"}]}]}]}]},{"type":"text","value":"\n"},{"type":"element","tagName":"h3","properties":{"id":"getevents-method"},"children":[{"type":"text","value":"GetEvents method"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Retrieves the list of events."}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"element","tagName":"strong","properties":{},"children":[{"type":"text","value":"Signature"}]},{"type":"text","value":":"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"ul","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"element","tagName":"code","properties":{"className":["language-text"]},"children":[{"type":"text","value":"getEvents()"}]},{"type":"text","value":": "},{"type":"element","tagName":"code","properties":{"className":["language-text"]},"children":[{"type":"text","value":"Array"}]}]},{"type":"text","value":"\n"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"element","tagName":"strong","properties":{},"children":[{"type":"text","value":"Return value"}]},{"type":"text","value":":"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"ul","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"A table containing the events"}]},{"type":"text","value":"\n"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"element","tagName":"strong","properties":{},"children":[{"type":"text","value":"Parameters"}]},{"type":"text","value":":"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"ul","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"none"}]},{"type":"text","value":"\n"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"element","tagName":"strong","properties":{},"children":[{"type":"text","value":"Example call"}]},{"type":"text","value":":"}]},{"type":"text","value":"\n\n          "},{"type":"element","tagName":"codeblockcopytag","properties":{},"children":[{"type":"text","value":"var events = dataset.getEvents();\n\nif (events != null) {\n    for (var event in events) {\n    print(\"Event \" + event + \" detected\");\n    }\n}"}]},{"type":"text","value":"\n          \n"},{"type":"element","tagName":"div","properties":{"className":["gatsby-highlight"],"dataLanguage":"javascript"},"children":[{"type":"element","tagName":"pre","properties":{"className":["language-javascript"]},"children":[{"type":"element","tagName":"code","properties":{"className":["language-javascript"]},"children":[{"type":"element","tagName":"span","properties":{"className":["token","keyword"]},"children":[{"type":"text","value":"var"}]},{"type":"text","value":" events "},{"type":"element","tagName":"span","properties":{"className":["token","operator"]},"children":[{"type":"text","value":"="}]},{"type":"text","value":" dataset"},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":"."}]},{"type":"element","tagName":"span","properties":{"className":["token","function"]},"children":[{"type":"text","value":"getEvents"}]},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":"("}]},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":")"}]},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":";"}]},{"type":"text","value":"\n\n"},{"type":"element","tagName":"span","properties":{"className":["token","keyword"]},"children":[{"type":"text","value":"if"}]},{"type":"text","value":" "},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":"("}]},{"type":"text","value":"events "},{"type":"element","tagName":"span","properties":{"className":["token","operator"]},"children":[{"type":"text","value":"!="}]},{"type":"text","value":" "},{"type":"element","tagName":"span","properties":{"className":["token","keyword"]},"children":[{"type":"text","value":"null"}]},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":")"}]},{"type":"text","value":" "},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":"{"}]},{"type":"text","value":"\n    "},{"type":"element","tagName":"span","properties":{"className":["token","keyword"]},"children":[{"type":"text","value":"for"}]},{"type":"text","value":" "},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":"("}]},{"type":"element","tagName":"span","properties":{"className":["token","keyword"]},"children":[{"type":"text","value":"var"}]},{"type":"text","value":" event "},{"type":"element","tagName":"span","properties":{"className":["token","keyword"]},"children":[{"type":"text","value":"in"}]},{"type":"text","value":" events"},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":")"}]},{"type":"text","value":" "},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":"{"}]},{"type":"text","value":"\n    "},{"type":"element","tagName":"span","properties":{"className":["token","function"]},"children":[{"type":"text","value":"print"}]},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":"("}]},{"type":"element","tagName":"span","properties":{"className":["token","string"]},"children":[{"type":"text","value":"\"Event \""}]},{"type":"text","value":" "},{"type":"element","tagName":"span","properties":{"className":["token","operator"]},"children":[{"type":"text","value":"+"}]},{"type":"text","value":" event "},{"type":"element","tagName":"span","properties":{"className":["token","operator"]},"children":[{"type":"text","value":"+"}]},{"type":"text","value":" "},{"type":"element","tagName":"span","properties":{"className":["token","string"]},"children":[{"type":"text","value":"\" detected\""}]},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":")"}]},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":";"}]},{"type":"text","value":"\n    "},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":"}"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":"}"}]}]}]}]}],"data":{"quirksMode":false}},"fileAbsolutePath":"/home/runner/work/developer-site/developer-site/.cache/gatsby-source-git/ia/descartes/documentation/igrc-platform/collector/05-macros-and-scripts.md","frontmatter":{"title":"Macros and scripts"},"headings":[{"id":"macros-and-scripts","value":"Macros and Scripts","depth":1},{"id":"javascript-syntax","value":"JavaScript syntax","depth":2},{"id":"config-variable","value":"Config variable","depth":2},{"id":"dataset-variables","value":"Dataset variables","depth":2},{"id":"dataset-class-api","value":"Dataset class API","depth":2},{"id":"properties-corresponding-to-the-pattern","value":"Properties corresponding to the pattern","depth":3},{"id":"length-property","value":"Length property","depth":3},{"id":"add-method","value":"Add method","depth":3},{"id":"duplicate-method","value":"Duplicate method","depth":3},{"id":"equals-method","value":"Equals method","depth":3},{"id":"get-method","value":"Get method","depth":3},{"id":"remove-method","value":"Remove method","depth":3},{"id":"rename-method","value":"Rename method","depth":3},{"id":"isempty-method","value":"IsEmpty method","depth":3},{"id":"clear-events","value":"Clear events","depth":3},{"id":"add-event","value":"Add event","depth":3},{"id":"remove-event","value":"Remove event","depth":3},{"id":"has-event","value":"Has event","depth":3},{"id":"event-count","value":"Event count","depth":3},{"id":"tostring","value":"ToString","depth":3},{"id":"getevents-method","value":"GetEvents method","depth":3}]},"toc":null},"pageContext":{"urlPrefix":"ia/descartes","absolutePath":"/home/runner/work/developer-site/developer-site/.cache/gatsby-source-git/ia/descartes/documentation/igrc-platform/collector/05-macros-and-scripts.md","tocRegex":"/(ia/)(descartes/)?(documentation/)?(igrc-platform/)?(collector/)?(05-macros-and-scripts.md/)?(TOC.md)/ig","versions":[{"name":"descartes","displayName":"Descartes"}],"currentRepo":{"name":"ia","displayName":"Identity Analytics","description":"This guide provides a high-level overview of Identity Analytics. This documentation includes the user guides, integration guides for Identity Analytics along with the different modules included.","links":[{"text":"SEE DEVELOPER DOCUMENTATION","href":"/ia/descartes/#1"}],"remote":"https://github.com/radiantlogic-v8/documentation-ia-product.git","patterns":["home-pages/**","documentation/**"],"deployBranches":[{"name":"descartes","displayName":"Descartes"}]},"currentRepoWebLink":"https://github.com/radiantlogic-v8/documentation-ia-product","currentVersion":{"name":"descartes","displayName":"Descartes"},"title":"Macros and scripts","description":"Macros and scripts","tocForCurrentSection":{"textElement":"Igrc platform","href":null,"children":[{"textElement":"Add ons","href":"igrc-platform/add-ons/","children":[{"textElement":"Add on creation","href":"igrc-platform/add-ons/add-on-creation","children":[]},{"textElement":"Add on migration","href":"igrc-platform/add-ons/add-on-migration","children":[]}]},{"textElement":"Audit logs","href":"igrc-platform/audit-logs/","children":[{"textElement":"Data collection configuration","href":"igrc-platform/audit-logs/01-data-collection-configuration","children":[]},{"textElement":"Auditlog execution plan","href":"igrc-platform/audit-logs/02-auditlog-execution-plan","children":[]},{"textElement":"Database configuration","href":"igrc-platform/audit-logs/03-database-configuration","children":[]},{"textElement":"Usage","href":"igrc-platform/audit-logs/04-usage","children":[]}]},{"textElement":"Audit rules","href":"igrc-platform/audit-rules/","children":[{"textElement":"Search dimensions","href":"igrc-platform/audit-rules/01-search-dimensions","children":[]},{"textElement":"Advanced concepts","href":"igrc-platform/audit-rules/02-advanced-concepts","children":[]},{"textElement":"Time management","href":"igrc-platform/audit-rules/03-time-management","children":[]},{"textElement":"Best practices","href":"igrc-platform/audit-rules/04-best-practices","children":[]}]},{"textElement":"Business view","href":"igrc-platform/business-view/","children":[{"textElement":"Main concepts","href":"igrc-platform/business-view/01-main-concepts","children":[]},{"textElement":"Business view editor","href":"igrc-platform/business-view/02-business-view-editor","children":[]},{"textElement":"Common features","href":"igrc-platform/business-view/03-common-features","children":[]},{"textElement":"Components","href":"igrc-platform/business-view/04-components","children":[]},{"textElement":"Filter components","href":"igrc-platform/business-view/05-filter-components","children":[]},{"textElement":"Debugging","href":"igrc-platform/business-view/06-debugging","children":[]},{"textElement":"Optimization","href":"igrc-platform/business-view/07-optimization","children":[]}]},{"textElement":"Collect wizard","href":"igrc-platform/collect-wizard/","children":[{"textElement":"Discorvery mapping","href":"igrc-platform/collect-wizard/01-discorvery-mapping","children":[]},{"textElement":"Application model editor","href":"igrc-platform/collect-wizard/02-application-model-editor","children":[]},{"textElement":"Templates","href":"igrc-platform/collect-wizard/03-templates","children":[]}]},{"textElement":"Collector","href":"igrc-platform/collector/","children":[{"textElement":"Engine states","href":"igrc-platform/collector/01-engine-states","children":[]},{"textElement":"Data flow","href":"igrc-platform/collector/02-data-flow","children":[]},{"textElement":"Logs","href":"igrc-platform/collector/03-logs","children":[]},{"textElement":"Components","href":"igrc-platform/collector/04-components/","children":[{"textElement":"Filters","href":"igrc-platform/collector/04-components/filters","children":[]},{"textElement":"Sources","href":"igrc-platform/collector/04-components/sources","children":[]},{"textElement":"Target","href":"igrc-platform/collector/04-components/target","children":[]}]},{"textElement":"Macros and scripts","href":"igrc-platform/collector/05-macros-and-scripts","children":[]},{"textElement":"Sql filtering","href":"igrc-platform/collector/06-sql-filtering","children":[]}]},{"textElement":"Controls","href":"igrc-platform/controls/","children":[{"textElement":"Permission impact","href":"igrc-platform/controls/01-permission-impact","children":[]},{"textElement":"Theoretical rights","href":"igrc-platform/controls/02-theoretical-rights","children":[]},{"textElement":"Default tag","href":"igrc-platform/controls/03-default-tag","children":[]}]},{"textElement":"Dashboards","href":"igrc-platform/dashboards/","children":[{"textElement":"Components","href":"igrc-platform/dashboards/01-components","children":[]},{"textElement":"Publication","href":"igrc-platform/dashboards/02-publication","children":[]},{"textElement":"Advanced configation","href":"igrc-platform/dashboards/03-advanced-configation","children":[]},{"textElement":"Customization","href":"igrc-platform/dashboards/04-customization","children":[]}]},{"textElement":"Data discovery","href":"igrc-platform/data-discovery/","children":[{"textElement":"Basic concepts","href":"igrc-platform/data-discovery/01-basic-concepts","children":[]},{"textElement":"Advanced concepts","href":"igrc-platform/data-discovery/02-advanced-concepts","children":[]}]},{"textElement":"Getting started","href":"igrc-platform/getting-started/","children":[{"textElement":"Timeslots","href":"igrc-platform/getting-started/01-timeslots","children":[]},{"textElement":"Execution plan","href":"igrc-platform/getting-started/02-execution-plan","children":[]},{"textElement":"Default project","href":"igrc-platform/getting-started/03-default-project","children":[]},{"textElement":"Creation configuration","href":"igrc-platform/getting-started/04-creation-configuration","children":[]},{"textElement":"Studio editors","href":"igrc-platform/getting-started/05-studio-editors","children":[]},{"textElement":"Project archives","href":"igrc-platform/getting-started/06-project-archives","children":[]},{"textElement":"Tutorial","href":"igrc-platform/getting-started/07-tutorial","children":[]}]},{"textElement":"Installation and deployment","href":"igrc-platform/installation-and-deployment/","children":[{"textElement":"Batch configuration and usage","href":"igrc-platform/installation-and-deployment/02-batch-configuration-and-usage","children":[]},{"textElement":"Brainwaves web portal","href":"igrc-platform/installation-and-deployment/03-brainwaves-web-portal/","children":[{"textElement":"Deployment","href":"igrc-platform/installation-and-deployment/03-brainwaves-web-portal/01-deployment","children":[]},{"textElement":"Parametrization","href":"igrc-platform/installation-and-deployment/03-brainwaves-web-portal/02-parametrization/","children":[{"textElement":"Basic","href":"igrc-platform/installation-and-deployment/03-brainwaves-web-portal/02-parametrization/01-basic","children":[]},{"textElement":"Ldap","href":"igrc-platform/installation-and-deployment/03-brainwaves-web-portal/02-parametrization/02-ldap","children":[]},{"textElement":"Saml","href":"igrc-platform/installation-and-deployment/03-brainwaves-web-portal/02-parametrization/03-saml/","children":[{"textElement":"Adfs","href":"igrc-platform/installation-and-deployment/03-brainwaves-web-portal/02-parametrization/03-saml/adfs","children":[]},{"textElement":"Gsuite","href":"igrc-platform/installation-and-deployment/03-brainwaves-web-portal/02-parametrization/03-saml/gsuite","children":[]},{"textElement":"Inwebo","href":"igrc-platform/installation-and-deployment/03-brainwaves-web-portal/02-parametrization/03-saml/inwebo","children":[]},{"textElement":"Okta","href":"igrc-platform/installation-and-deployment/03-brainwaves-web-portal/02-parametrization/03-saml/okta","children":[]},{"textElement":"Saml authenticators properties","href":"igrc-platform/installation-and-deployment/03-brainwaves-web-portal/02-parametrization/03-saml/saml-authenticators-properties","children":[]}]},{"textElement":"Http headers","href":"igrc-platform/installation-and-deployment/03-brainwaves-web-portal/02-parametrization/04-http-headers","children":[]}]},{"textElement":"Diagnostic","href":"igrc-platform/installation-and-deployment/03-brainwaves-web-portal/03-diagnostic","children":[]},{"textElement":"Troubleshooting","href":"igrc-platform/installation-and-deployment/03-brainwaves-web-portal/04-troubleshooting","children":[]},{"textElement":"Web portal theme customization","href":"igrc-platform/installation-and-deployment/03-brainwaves-web-portal/05-web-portal-theme-customization/","children":[{"textElement":"Level 1","href":"igrc-platform/installation-and-deployment/03-brainwaves-web-portal/05-web-portal-theme-customization/level-1","children":[]},{"textElement":"Level 2 customization via ss","href":"igrc-platform/installation-and-deployment/03-brainwaves-web-portal/05-web-portal-theme-customization/level-2-customization-via-ss","children":[]},{"textElement":"Level 3 customization via css with resources","href":"igrc-platform/installation-and-deployment/03-brainwaves-web-portal/05-web-portal-theme-customization/level-3-customization-via-css-with-resources","children":[]},{"textElement":"Level 4 customization via scripting","href":"igrc-platform/installation-and-deployment/03-brainwaves-web-portal/05-web-portal-theme-customization/level-4-customization-via-scripting","children":[]}]},{"textElement":"Dedicated instance","href":"igrc-platform/installation-and-deployment/03-brainwaves-web-portal/06-dedicated-instance","children":[]}]},{"textElement":"Brainwave grc certified environments","href":"igrc-platform/installation-and-deployment/04-brainwave-grc-certified-environments","children":[]},{"textElement":"Legacy property files","href":"igrc-platform/installation-and-deployment/05-legacy-property-files","children":[]},{"textElement":"Ssh git connection","href":"igrc-platform/installation-and-deployment/06-ssh-git-connection","children":[]},{"textElement":"Database","href":"igrc-platform/installation-and-deployment/07-database/","children":[{"textElement":"Microsoft integrated authenitcation","href":"igrc-platform/installation-and-deployment/07-database/02-Microsoft-integrated-authenitcation","children":[]},{"textElement":"Index management","href":"igrc-platform/installation-and-deployment/07-database/03-index-management","children":[]},{"textElement":"Schema 35 upgrade procedure","href":"igrc-platform/installation-and-deployment/07-database/04-schema-35-upgrade-procedure/","children":[{"textElement":"Sqlserver","href":"igrc-platform/installation-and-deployment/07-database/04-schema-35-upgrade-procedure/01-sqlserver/","children":[{"textElement":"Large migrations","href":"igrc-platform/installation-and-deployment/07-database/04-schema-35-upgrade-procedure/01-sqlserver/large-migrations","children":[]}]},{"textElement":"Postgresql","href":"igrc-platform/installation-and-deployment/07-database/04-schema-35-upgrade-procedure/02-postgresql","children":[]},{"textElement":"Oracle","href":"igrc-platform/installation-and-deployment/07-database/04-schema-35-upgrade-procedure/03-oracle","children":[]}]},{"textElement":"Clean temporary iap metadata","href":"igrc-platform/installation-and-deployment/07-database/05-clean-temporary-iap-metadata/","children":[]}]}]},{"textElement":"Manager policy","href":"igrc-platform/manager-policy/","children":[]},{"textElement":"Metadata","href":"igrc-platform/metadata/","children":[{"textElement":"Concept","href":"igrc-platform/metadata/01-concept","children":[]},{"textElement":"Use cases","href":"igrc-platform/metadata/02-use-cases","children":[]},{"textElement":"Life cycle","href":"igrc-platform/metadata/03-life-cycle","children":[]},{"textElement":"Editor","href":"igrc-platform/metadata/04-editor","children":[]},{"textElement":"Collect","href":"igrc-platform/metadata/05-collect","children":[]},{"textElement":"Compute","href":"igrc-platform/metadata/06-compute","children":[]},{"textElement":"Workflow","href":"igrc-platform/metadata/07-workflow","children":[]},{"textElement":"Rules views","href":"igrc-platform/metadata/08-rules-views","children":[]},{"textElement":"Review","href":"igrc-platform/metadata/09-review","children":[]},{"textElement":"Examples","href":"igrc-platform/metadata/10-examples","children":[]}]},{"textElement":"Notification rules","href":"igrc-platform/notification-rules/","children":[{"textElement":"Using the editor","href":"igrc-platform/notification-rules/01-using-the-editor","children":[]},{"textElement":"Selecting recipients","href":"igrc-platform/notification-rules/02-selecting-recipients","children":[]},{"textElement":"Macros","href":"igrc-platform/notification-rules/03-macros","children":[]},{"textElement":"Reports as attachments","href":"igrc-platform/notification-rules/04-reports-as-attachments","children":[]},{"textElement":"Notification batch mode","href":"igrc-platform/notification-rules/05-notification-batch-mode","children":[]},{"textElement":"Internationalization of notification rules","href":"igrc-platform/notification-rules/06-internationalization-of-notification-rules","children":[]}]},{"textElement":"Pages","href":"igrc-platform/pages/","children":[{"textElement":"Using the wizard","href":"igrc-platform/pages/01-using-the-wizard","children":[]},{"textElement":"Home pages","href":"igrc-platform/pages/02-home-pages","children":[]},{"textElement":"Parameters","href":"igrc-platform/pages/03-parameters","children":[]},{"textElement":"Data binding","href":"igrc-platform/pages/04-data-binding","children":[]},{"textElement":"Advanced data binding","href":"igrc-platform/pages/05-advanced-data-binding","children":[]},{"textElement":"Variables","href":"igrc-platform/pages/06-variables","children":[]},{"textElement":"Widgets","href":"igrc-platform/pages/07-widgets","children":[]},{"textElement":"Containers widgets","href":"igrc-platform/pages/08-containers-widgets","children":[]},{"textElement":"Display widgets","href":"igrc-platform/pages/09-display-widgets","children":[]},{"textElement":"Selection widgets","href":"igrc-platform/pages/10-selection-widgets","children":[]},{"textElement":"Edition widgets","href":"igrc-platform/pages/11-edition-widgets","children":[]},{"textElement":"Chart widgets","href":"igrc-platform/pages/12-chart-widgets","children":[]},{"textElement":"Iterable widgets","href":"igrc-platform/pages/13-iterable-widgets","children":[]},{"textElement":"Special widgets","href":"igrc-platform/pages/14-special-widgets","children":[]},{"textElement":"Reports in pages","href":"igrc-platform/pages/15-reports-in-pages","children":[]},{"textElement":"Predicate functions","href":"igrc-platform/pages/16-predicate-functions","children":[]},{"textElement":"Mapping functions","href":"igrc-platform/pages/17-mapping-functions","children":[]},{"textElement":"Transform functions","href":"igrc-platform/pages/18-transform-functions","children":[]},{"textElement":"Dialog boxes","href":"igrc-platform/pages/19-dialog-boxes","children":[]},{"textElement":"Events and actions","href":"igrc-platform/pages/20-events-and-actions","children":[]},{"textElement":"Features and roles","href":"igrc-platform/pages/21-features-and-roles/","children":[{"textElement":"Label localisation","href":"igrc-platform/pages/21-features-and-roles/label-localisation","children":[]}]},{"textElement":"Advanced concepts","href":"igrc-platform/pages/22-advanced-concepts","children":[]},{"textElement":"Page fragments","href":"igrc-platform/pages/23-page-fragments","children":[]},{"textElement":"Cross table","href":"igrc-platform/pages/24-cross-table","children":[]},{"textElement":"Internationalisation","href":"igrc-platform/pages/25-internationalisation","children":[]},{"textElement":"Accessibility","href":"igrc-platform/pages/26-accessibility","children":[]},{"textElement":"Images and colors","href":"igrc-platform/pages/27-images-and-colors","children":[]},{"textElement":"Webportal features","href":"igrc-platform/pages/28-webportal-features/","children":[{"textElement":"Detail pages","href":"igrc-platform/pages/28-webportal-features/01-detail-pages","children":[]},{"textElement":"General menu","href":"igrc-platform/pages/28-webportal-features/02-general-menu","children":[]},{"textElement":"Search pages","href":"igrc-platform/pages/28-webportal-features/03-search-pages","children":[]},{"textElement":"Analytics section","href":"igrc-platform/pages/28-webportal-features/04-analytics-section","children":[]}]}]},{"textElement":"Reconciliation","href":"igrc-platform/reconciliation/","children":[{"textElement":"Reconciliation policies","href":"igrc-platform/reconciliation/01-reconciliation-policies","children":[]}]},{"textElement":"Reports","href":"igrc-platform/reports/","children":[{"textElement":"Advanced concepts","href":"igrc-platform/reports/01-advanced-concepts","children":[]},{"textElement":"Best practice","href":"igrc-platform/reports/02-best-practice","children":[]}]},{"textElement":"Review wizard","href":"igrc-platform/review-wizard/","children":[{"textElement":"Generation","href":"igrc-platform/review-wizard/01-generation","children":[]},{"textElement":"Structure","href":"igrc-platform/review-wizard/02-structure","children":[]},{"textElement":"Editor","href":"igrc-platform/review-wizard/03-editor","children":[]},{"textElement":"Build","href":"igrc-platform/review-wizard/04-build","children":[]},{"textElement":"Migration","href":"igrc-platform/review-wizard/05-migration","children":[]}]},{"textElement":"Silos","href":"igrc-platform/silos/","children":[]},{"textElement":"Smart search","href":"igrc-platform/smart-search/","children":[]},{"textElement":"Technical configuration","href":"igrc-platform/technical-configuration/","children":[]},{"textElement":"Theoretical rights","href":"igrc-platform/theoretical-rights/","children":[]},{"textElement":"Timeslots and execution plan","href":"igrc-platform/timeslots-and-execution-plan/","children":[{"textElement":"Collect and silos","href":"igrc-platform/timeslots-and-execution-plan/01-collect-and-silos/","children":[{"textElement":"Dependances","href":"igrc-platform/timeslots-and-execution-plan/01-collect-and-silos/01-dependances","children":[]},{"textElement":"Silo execution plan","href":"igrc-platform/timeslots-and-execution-plan/01-collect-and-silos/02-silo-execution-plan","children":[]},{"textElement":"Iteration","href":"igrc-platform/timeslots-and-execution-plan/01-collect-and-silos/03-iteration","children":[]},{"textElement":"Dynamically change silos name","href":"igrc-platform/timeslots-and-execution-plan/01-collect-and-silos/04-dynamically-change-silos-name","children":[]},{"textElement":"Using silo contants","href":"igrc-platform/timeslots-and-execution-plan/01-collect-and-silos/05-using-silo-contants","children":[]},{"textElement":"Using silos within the ledger","href":"igrc-platform/timeslots-and-execution-plan/01-collect-and-silos/06-using-silos-within-the-ledger","children":[]},{"textElement":"Input file validation","href":"igrc-platform/timeslots-and-execution-plan/01-collect-and-silos/07-input-file-validation","children":[]}]},{"textElement":"Purge of timeslots","href":"igrc-platform/timeslots-and-execution-plan/02-purge-of-timeslots","children":[]}]},{"textElement":"Views","href":"igrc-platform/views/","children":[{"textElement":"Managing attributes","href":"igrc-platform/views/01-managing-attributes","children":[]},{"textElement":"Sorting the results","href":"igrc-platform/views/02-sorting-the-results","children":[]},{"textElement":"Configuring joins","href":"igrc-platform/views/03-configuring-joins","children":[]},{"textElement":"Filtering results","href":"igrc-platform/views/04-filtering-results","children":[]},{"textElement":"Advanced concepts","href":"igrc-platform/views/05-advanced-concepts","children":[]},{"textElement":"Tips and best practice","href":"igrc-platform/views/06-tips-and-best-practice","children":[]},{"textElement":"Standard views","href":"igrc-platform/views/07-standard-views","children":[]}]},{"textElement":"Workflow","href":"igrc-platform/workflow/","children":[{"textElement":"Workflow configuration","href":"igrc-platform/workflow/01-workflow-configuration","children":[]},{"textElement":"Workflow editor user guide","href":"igrc-platform/workflow/02-workflow-editor-user-guide","children":[]},{"textElement":"Roles","href":"igrc-platform/workflow/03-roles","children":[]},{"textElement":"Variables","href":"igrc-platform/workflow/04-variables","children":[]},{"textElement":"Manual tasks","href":"igrc-platform/workflow/05-manual-tasks","children":[]},{"textElement":"Iterations and subprocesses","href":"igrc-platform/workflow/06-iterations-and-subprocesses","children":[]},{"textElement":"Email notifications","href":"igrc-platform/workflow/07-email-notifications","children":[]},{"textElement":"Time management","href":"igrc-platform/workflow/08-time-management","children":[]},{"textElement":"Tickets and workflows","href":"igrc-platform/workflow/09-tickets-and-workflows","children":[]},{"textElement":"Tickets","href":"igrc-platform/workflow/10-tickets","children":[]},{"textElement":"Components","href":"igrc-platform/workflow/11-components","children":[]},{"textElement":"Debugging","href":"igrc-platform/workflow/12-debugging","children":[]},{"textElement":"Exception management","href":"igrc-platform/workflow/13-exception-management","children":[]},{"textElement":"Workflows and timeslots","href":"igrc-platform/workflow/14-workflows-and-timeslots","children":[]},{"textElement":"Running campaigns","href":"igrc-platform/workflow/15-running-campaigns","children":[]}]}]}}},"staticQueryHashes":["63159454"],"slicesMap":{"footer":"footer","header":"header"}}