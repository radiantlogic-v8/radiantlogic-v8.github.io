{"componentChunkName":"component---src-templates-base-page-js","path":"/ia/descartes/igrc-platform/pages/22-advanced-concepts/","result":{"data":{"pageContent":{"html":"<h1 id=\"advanced-concepts\">Advanced Concepts</h1>\n<h2 id=\"javascript-expressions\">JavaScript expressions</h2>\n<p>Since version 2017 R3, you can use JavaScript expressions directly in pages, both in bindings and in predicates.</p>\n<h3 id=\"bindings\">Bindings</h3>\n<p>You can either use string interpolation, for example in:<br>\n<code class=\"language-text\">Set \"Infos: {param1.get()} - {config.logPath} - {principal.login}\" to var3</code></p>\n<p>Inside the string, expressions enclosed between { and } are evaluated as JavaScript expressions and their value replace the expression.</p>\n<p>You can also use expressions with the Eval keyword as in:<br>\n<code class=\"language-text\">Join Eval \"'a,b,c,d'.split(',', 2)\" using \"|\"</code></p>\n<p>will evaluate to the string <code class=\"language-text\">a|b</code>.</p>\n<h3 id=\"predicates\">Predicates</h3>\n<p>You can also use JavaScript expressions in a predicate (an expression evaluating to a Boolean value):<br>\n<code class=\"language-text\">disabled: Eval \"var1.isEmpty() || var2.isEmpty()\"</code></p>\n<h3 id=\"accessible-objects\">Accessible objects</h3>\n<p>Inside a JavaScript expression, you can use:</p>\n<ul>\n<li>variables (for example <code class=\"language-text\">\"{var1.get()}\"</code>),</li>\n<li>parameters (for example <code class=\"language-text\">\"{param2.get()}\"</code>),</li>\n<li>record columns using &#x3C;record name>.&#x3C;column name> (for example <code class=\"language-text\">\"{identity.fullname}\"</code>),</li>\n<li>task record attributes using &#x3C;task name>.&#x3C;attribute name> (for example <code class=\"language-text\">\"{task.org_uids.length}\"</code>),</li>\n<li>process record attributes using &#x3C;process record name>.&#x3C;attribute name> (for example <code class=\"language-text\">\"{process.uids.get()}\"</code>),</li>\n<li>user variables using uservariable.&#x3C;user variable name> (for example <code class=\"language-text\">\"{uservariable.selectedApplications.get()}\"</code>)</li>\n<li>current values in a dataset iteration using current.&#x3C;column name> (for example <code class=\"language-text\">\"{!current.altname.isEmpty()}\"</code>),</li>\n<li>configuration variables using config.&#x3C;variable name> (for example <code class=\"language-text\">\"{config.logPath}\"</code>),</li>\n<li>principal attributes using principal.&#x3C;attribute name> (for example <code class=\"language-text\">\"{principal.login}\"</code>).</li>\n</ul>\n<blockquote>\n<p>For record columns, current values, configuration variables and principal attributes the value can only be mono-valued by construction, so it is already a simple type (string, date, boolean, etc...).</p>\n</blockquote>\n<h2 id=\"javascript-services\">Javascript Services</h2>\n<p>Javascript files can now be created inside the webportal/pages directory (and any sub-directories) and methods from these files can be referenced by services. The extension of these files must be '.javascript'.</p>\n<p>The service declaration block now allows the new attributes:</p>\n<ul>\n<li>javascript-file: the name of the javascript file, relative to the root of the project,</li>\n<li>javascript-method: the name of a method in the previously specified file.</li>\n</ul>\n<p>The method should not have parameters and, for StringService, IntService and BooleanService, return a value of the appropriate type. For EventService any return value is ignored.</p>\n<p>Inside the method, the dataset object already contains attributes for any input or output parameter specified in the service declaration.</p>\n<p>For example in the <code class=\"language-text\">/webportal/pages/test_js.javascript</code> file</p>\n\n          <codeblockcopytag>function test12() {\n    if (dataset.invert.get()) {\n        return dataset.surname.get() + &quot; &quot; + dataset.givenname.get();\n    }\n    return dataset.givenname.get() + &quot; &quot; + dataset.surname.get();\n}</codeblockcopytag>\n          \n<div class=\"gatsby-highlight\" data-language=\"page\"><pre class=\"language-page\"><code class=\"language-page\">function test12() {\n    if (dataset.invert.get()) {\n        return dataset.surname.get() + &quot; &quot; + dataset.givenname.get();\n    }\n    return dataset.givenname.get() + &quot; &quot; + dataset.surname.get();\n}</code></pre></div>\n<p>and in a <code class=\"language-text\">.page</code> file</p>\n\n          <codeblockcopytag>js12 = StringService {\n    javascript-file: &quot;/webportal/pages/test_js.javascript&quot;\n    javascript-method: test12\n\n    givenname = Input {\n        type: String\n        mandatory: True\n    }\n    surname = Input {\n        type: String\n        mandatory: True\n    }\n    invert = Input {\n        type: Boolean\n        default: False\n    }\n}\n\ntest_js3 = Page {\n    title: &quot;[JS] Assignable Services in Table&quot;\n    tags: &quot;TEST&quot;, &quot;GENERAL&quot;\n\n    invert = Variable {\n        type: Boolean\n        initial: False\n    }\n\n    identities = Dataset {\n        view: br_identity\n    }\n\n    Checkbox {\n        variable: invert\n        text: &quot;Invert&quot;\n        modify-event: ReloadData(identities)\n    }\n    Table {\n        data: identities\n        label: Label {\n            break: True\n        }\n        layout: Layout {\n            grab: horizontal True vertical True\n        }\n        show-count: True\n\n        Column {\n            column: uid\n            header: &quot;UID&quot;\n            width: 300px\n        }\n        Column {\n            column: fullname\n            text: @js12(Current givenname to givenname, Current surname to surname, invert to invert)\n            header: &quot;Name&quot;\n            width: 100%\n        }\n    }\n\n}</codeblockcopytag>\n          \n<div class=\"gatsby-highlight\" data-language=\"page\"><pre class=\"language-page\"><code class=\"language-page\">js12 = StringService {\n    javascript-file: &quot;/webportal/pages/test_js.javascript&quot;\n    javascript-method: test12\n\n    givenname = Input {\n        type: String\n        mandatory: True\n    }\n    surname = Input {\n        type: String\n        mandatory: True\n    }\n    invert = Input {\n        type: Boolean\n        default: False\n    }\n}\n\ntest_js3 = Page {\n    title: &quot;[JS] Assignable Services in Table&quot;\n    tags: &quot;TEST&quot;, &quot;GENERAL&quot;\n\n    invert = Variable {\n        type: Boolean\n        initial: False\n    }\n\n    identities = Dataset {\n        view: br_identity\n    }\n\n    Checkbox {\n        variable: invert\n        text: &quot;Invert&quot;\n        modify-event: ReloadData(identities)\n    }\n    Table {\n        data: identities\n        label: Label {\n            break: True\n        }\n        layout: Layout {\n            grab: horizontal True vertical True\n        }\n        show-count: True\n\n        Column {\n            column: uid\n            header: &quot;UID&quot;\n            width: 300px\n        }\n        Column {\n            column: fullname\n            text: @js12(Current givenname to givenname, Current surname to surname, invert to invert)\n            header: &quot;Name&quot;\n            width: 100%\n        }\n    }\n\n}</code></pre></div>\n<p>The config object can be used to retrieve project global variable as defined in the configuration files, as well as four other attributes:</p>\n<ul>\n<li><code class=\"language-text\">__PRINCIPAL_UID</code> is the uid of the user viewing the page,</li>\n<li><code class=\"language-text\">__PRINCIPAL_FULLNAME</code> is the full name of the user viewing the page,</li>\n<li><code class=\"language-text\">__PRINCIPAL_LANGUAGE</code> is the language of the user viewing the page,</li>\n<li><code class=\"language-text\">__TIMESLOT_UID</code> is the timeslot of the current page.</li>\n</ul>\n<p>For example, in the javascript file:</p>\n\n          <codeblockcopytag>function test11() {\n    dataset.out_val = config.__PRINCIPAL_UID + &quot;/&quot; + config.__PRINCIPAL_FULLNAME\n    + &quot; (&quot; + config.__TIMESLOT_UID + &quot;)&quot;;\n}</codeblockcopytag>\n          \n<div class=\"gatsby-highlight\" data-language=\"page\"><pre class=\"language-page\"><code class=\"language-page\">function test11() {\n    dataset.out_val = config.__PRINCIPAL_UID + &quot;/&quot; + config.__PRINCIPAL_FULLNAME\n    + &quot; (&quot; + config.__TIMESLOT_UID + &quot;)&quot;;\n}</code></pre></div>\n<p>and in the page</p>\n\n          <codeblockcopytag>js11 = EventService {\n    javascript-file: &quot;/webportal/pages/test_js.javascript&quot;\n    javascript-method: test11\n\n    out_val = Output {\n        type: String\n    }\n}\n\ntest_js2 = Page {\n    title: &quot;[JS] Event Services&quot;\n    tags: &quot;TEST&quot;, &quot;GENERAL&quot;\n    enter-event: Call js11(out_val from out_val)\n\n    out_val = Variable {\n        type: String\n    }\n\n...\n\n}</codeblockcopytag>\n          \n<div class=\"gatsby-highlight\" data-language=\"page\"><pre class=\"language-page\"><code class=\"language-page\">js11 = EventService {\n    javascript-file: &quot;/webportal/pages/test_js.javascript&quot;\n    javascript-method: test11\n\n    out_val = Output {\n        type: String\n    }\n}\n\ntest_js2 = Page {\n    title: &quot;[JS] Event Services&quot;\n    tags: &quot;TEST&quot;, &quot;GENERAL&quot;\n    enter-event: Call js11(out_val from out_val)\n\n    out_val = Variable {\n        type: String\n    }\n\n...\n\n}</code></pre></div>\n<p>You can call a View or a Rule by using the following syntax:</p>\n\n          <codeblockcopytag>function getTotalAccounts ( file_uid , extras ) {\n var params = new java.util.HashMap();\n  params.put(&quot;uid&quot;, file_uid );\n  var res = connector.executeView(config.__TIMESLOT_UID, &quot;files_countaccounts&quot; , params);\n  extras[0]  = res[0].get(&quot;share_displayname&quot;).toString();\n  extras[1]  = res[0].get(&quot;code&quot;).toString();\n  return Number(res[0].get(&quot;total_active_accounts&quot;));\n}</codeblockcopytag>\n          \n<div class=\"gatsby-highlight\" data-language=\"page\"><pre class=\"language-page\"><code class=\"language-page\">function getTotalAccounts ( file_uid , extras ) {\n var params = new java.util.HashMap();\n  params.put(&quot;uid&quot;, file_uid );\n  var res = connector.executeView(config.__TIMESLOT_UID, &quot;files_countaccounts&quot; , params);\n  extras[0]  = res[0].get(&quot;share_displayname&quot;).toString();\n  extras[1]  = res[0].get(&quot;code&quot;).toString();\n  return Number(res[0].get(&quot;total_active_accounts&quot;));\n}</code></pre></div>\n<p>Inside the javascript, any print call will be redirected to the igrcportal.log file. The debugger; token can be used to dump a bunch of information in the log file (which must allow debug level).</p>\n<h2 id=\"nationalization-strings-with-parameters\">Nationalization strings with parameters</h2>\n<p>You can be in a situation where you want to create dynamic nationalized texts, including some information extracted from a variable, a record, ...</p>\n<p>one method could be to use the Concat keyword :</p>\n\n          <codeblockcopytag>parts = NLS {\n  part1 [en &quot;the account &quot; fr &quot;le compte &quot;]\n  part2 [en &quot; has too many permissions&quot; fr &quot; a trop de droits&quot;]\n}\n\ndemo = Page {\n title:'test'\n\n login = Variable{initial:'jdoe'}\n\n Text {\n    value:Concat(\\$parts.part1, login, \\$parts.part2)\n }\n}</codeblockcopytag>\n          \n<div class=\"gatsby-highlight\" data-language=\"page\"><pre class=\"language-page\"><code class=\"language-page\">parts = NLS {\n  part1 [en &quot;the account &quot; fr &quot;le compte &quot;]\n  part2 [en &quot; has too many permissions&quot; fr &quot; a trop de droits&quot;]\n}\n\ndemo = Page {\n title:&#39;test&#39;\n\n login = Variable{initial:&#39;jdoe&#39;}\n\n Text {\n    value:Concat($parts.part1, login, $parts.part2)\n }\n}</code></pre></div>\n<p>This is not a good practice as it implies that you specifically code the concatenation, thus you won't be able to update the labels easily.<br>\nYou can instead use NLS parameters.</p>\n<p>NLS strings accept parameters, those parameters are leveraged by the {NUMBER} pattern, starting with 0.</p>\n<p>We can rewrite the above example in the following form:</p>\n\n          <codeblockcopytag>parts = NLS {\n  part [en &quot;the account {0} has too many permissions&quot; fr &quot;le compte {0} a trop de droits&quot;]\n}\n\ndemo = Page {\n title:'test'\n\n login = Variable{initial:'jdoe'}\n\n Text {\n    value:\\$parts.part(login)\n }\n}</codeblockcopytag>\n          \n<div class=\"gatsby-highlight\" data-language=\"page\"><pre class=\"language-page\"><code class=\"language-page\">parts = NLS {\n  part [en &quot;the account {0} has too many permissions&quot; fr &quot;le compte {0} a trop de droits&quot;]\n}\n\ndemo = Page {\n title:&#39;test&#39;\n\n login = Variable{initial:&#39;jdoe&#39;}\n\n Text {\n    value:$parts.part(login)\n }\n}</code></pre></div>\n<p>As you can see, <code class=\"language-text\">{0}</code> is used to specify where the dynamic value will be located in the string.<br>\nThis dynamic value is passed as a parameter of the NLS entry: <code class=\"language-text\">$parts.part(login)</code></p>\n<p>You can have several parameters as well:</p>\n\n          <codeblockcopytag>parts = NLS {\n  part [en &quot;the account {0} from {1} has too many permissions&quot; fr &quot;le compte {0} de {1} a trop de droits&quot;]\n}\n\ndemo = Page {\n title:'test'\n\n login = Variable{initial:'jdoe'}\n name = Variable{initial:'John Doe'}\n\n Text {\n    value:\\$parts.part(login, name)\n }\n}</codeblockcopytag>\n          \n<div class=\"gatsby-highlight\" data-language=\"page\"><pre class=\"language-page\"><code class=\"language-page\">parts = NLS {\n  part [en &quot;the account {0} from {1} has too many permissions&quot; fr &quot;le compte {0} de {1} a trop de droits&quot;]\n}\n\ndemo = Page {\n title:&#39;test&#39;\n\n login = Variable{initial:&#39;jdoe&#39;}\n name = Variable{initial:&#39;John Doe&#39;}\n\n Text {\n    value:$parts.part(login, name)\n }\n}</code></pre></div>\n<p>You just have to increment the index within the {...} and to specify several parameters separated by a ','  .<br>\nYou can also apply a specific text formatting for integer, boolean or date parameters.</p>\n<p>Here is an example:</p>\n\n          <codeblockcopytag>parts = NLS {\n  part [en &quot;Orphan account ratio {0,number,#.##}%&quot; fr &quot;Ratio de comptes orphelins {0,number,#.##}%&quot;]\n}\n\ndemo = Page {\n title:'test'\n\n val = Variable{initial:77.54678}\n\n Text {\n    value:\\$parts.part(val)\n }</codeblockcopytag>\n          \n<div class=\"gatsby-highlight\" data-language=\"page\"><pre class=\"language-page\"><code class=\"language-page\">parts = NLS {\n  part [en &quot;Orphan account ratio {0,number,#.##}%&quot; fr &quot;Ratio de comptes orphelins {0,number,#.##}%&quot;]\n}\n\ndemo = Page {\n title:&#39;test&#39;\n\n val = Variable{initial:77.54678}\n\n Text {\n    value:$parts.part(val)\n }</code></pre></div>\n<p>You can refer to <a href=\"https://docs.oracle.com/javase/7/docs/api/java/text/MessageFormat.html\">Java 7 Message Format</a> for more details about this.</p>\n<h2 id=\"conditional-nationalization\">Conditional nationalization</h2>\n<p>You can embed tests in your nationalization strings in order to build different strings depending on its dynamic content.</p>\n<p>Let's take a simple example: You can to display a warning dialog box if some entries still need to be reviewed.<br>\nYou want to display a different message depending on the number of elements left for review: 1 or several elements.</p>\n<p>Here is an example:</p>\n\n          <codeblockcopytag>reviewNLS = NLS {\n    commitwarning [en &quot;{0,choice,1#{0} entry still need to be reviewed|1&lt;{0} entries still need to be reviewed}&quot; fr &quot;{0,choice,1#Il reste {0} entrée à revoir|1&lt;Il reste {0} entrées à revoir}&quot;]\n}\n\n\nreview = Page {\n    title:'demo'\n\n    nbelements = Variable{initial:3}\n\n\n    Button {\n        actions:Confirm \\$reviewNLS.commitwarning(nbelements)\n    }\n}</codeblockcopytag>\n          \n<div class=\"gatsby-highlight\" data-language=\"page\"><pre class=\"language-page\"><code class=\"language-page\">reviewNLS = NLS {\n    commitwarning [en &quot;{0,choice,1#{0} entry still need to be reviewed|1&lt;{0} entries still need to be reviewed}&quot; fr &quot;{0,choice,1#Il reste {0} entrée à revoir|1&lt;Il reste {0} entrées à revoir}&quot;]\n}\n\n\nreview = Page {\n    title:&#39;demo&#39;\n\n    nbelements = Variable{initial:3}\n\n\n    Button {\n        actions:Confirm $reviewNLS.commitwarning(nbelements)\n    }\n}</code></pre></div>\n<p>As you can see, you can add a context within {...} such as conditions.</p>\n<p>You can refer to <a href=\"https://docs.oracle.com/javase/7/docs/api/java/text/MessageFormat.html\">Java 7 Message Format</a> and <a href=\"https://docs.oracle.com/javase/7/docs/api/java/text/ChoiceFormat.html\">Java 7 Choice Format</a> for more details about this.</p>\n<h2 id=\"conditional-redirect\">Conditional Redirect</h2>\n<p>You can attach a condition on a Page or a Report in order to trigger a redirect based on a condition.<br>\nThe condition will be tested once the page has been loaded, it means that this condition can leverage data from the Identity Ledger through Dataset and Record objects.</p>\n<p>This can be useful for instance if you want to redirect the user based on the kind of data that he tries to access to.</p>\n<p>Let's take a simple example:</p>\n<p>you create 3 Account Analytics pages:</p>\n<ul>\n<li>one page which will be the default analytics page</li>\n<li>one page dedicated to SAP accounts</li>\n<li>one page dedicated to Active Directory accounts</li>\n</ul>\n<p>When you redirect the user to this accounts analytics section, you want to dynamically display the right content based on the account repository.</p>\n<p>You can do it by redirecting the user to the default analytics page, and by attaching  a conditional redirect in the default analytics page to redirect the user to the SAP page or the Active Directory page, depending on the account repository.</p>\n<p>What you can do as well is to dynamically compute a parameter based on another parameter, here is an example:</p>\n\n          <codeblockcopytag>accountDetailsPageRecorduid = Page {\n title: &quot;Recorduid redirection (account)&quot;\n conditional-redirect: ConditionalRedirect { condition: True target: Page accountDetailsPage with accountUid.uid to paramAccountUid }\n\n recorduid = Parameter {\n type: Integer\n hidden: True\n recorduid-of: Account\n mandatory: True\n }\n\n accountUid = Record {\n view: br_accountDetail_uid with recorduid to recorduid\n }\n}</codeblockcopytag>\n          \n<div class=\"gatsby-highlight\" data-language=\"page\"><pre class=\"language-page\"><code class=\"language-page\">accountDetailsPageRecorduid = Page {\n title: &quot;Recorduid redirection (account)&quot;\n conditional-redirect: ConditionalRedirect { condition: True target: Page accountDetailsPage with accountUid.uid to paramAccountUid }\n\n recorduid = Parameter {\n type: Integer\n hidden: True\n recorduid-of: Account\n mandatory: True\n }\n\n accountUid = Record {\n view: br_accountDetail_uid with recorduid to recorduid\n }\n}</code></pre></div>\n<p>When you redirect a user on this page with a recorduid parameter, it automatically retrieve the uid based on the recorduid and redirect the user back to the account details page.</p>\n<p>As you can see, you only have to fulfill the conditional-redirect property with a ConditionalRedirect object.<br>\n<strong>condition</strong>: contains the condition (must return true or false, see <a href=\"./20-events-and-actions.md\">conditions</a>for more details)<br>\n<strong>target</strong>: contains the target (see the <a href=\"./20-events-and-actions.md\">GoTo</a> instruction for more details)</p>","htmlAst":{"type":"root","children":[{"type":"element","tagName":"h1","properties":{"id":"advanced-concepts"},"children":[{"type":"text","value":"Advanced Concepts"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"h2","properties":{"id":"javascript-expressions"},"children":[{"type":"text","value":"JavaScript expressions"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Since version 2017 R3, you can use JavaScript expressions directly in pages, both in bindings and in predicates."}]},{"type":"text","value":"\n"},{"type":"element","tagName":"h3","properties":{"id":"bindings"},"children":[{"type":"text","value":"Bindings"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"You can either use string interpolation, for example in:"},{"type":"element","tagName":"br","properties":{},"children":[]},{"type":"text","value":"\n"},{"type":"element","tagName":"code","properties":{"className":["language-text"]},"children":[{"type":"text","value":"Set \"Infos: {param1.get()} - {config.logPath} - {principal.login}\" to var3"}]}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Inside the string, expressions enclosed between { and } are evaluated as JavaScript expressions and their value replace the expression."}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"You can also use expressions with the Eval keyword as in:"},{"type":"element","tagName":"br","properties":{},"children":[]},{"type":"text","value":"\n"},{"type":"element","tagName":"code","properties":{"className":["language-text"]},"children":[{"type":"text","value":"Join Eval \"'a,b,c,d'.split(',', 2)\" using \"|\""}]}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"will evaluate to the string "},{"type":"element","tagName":"code","properties":{"className":["language-text"]},"children":[{"type":"text","value":"a|b"}]},{"type":"text","value":"."}]},{"type":"text","value":"\n"},{"type":"element","tagName":"h3","properties":{"id":"predicates"},"children":[{"type":"text","value":"Predicates"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"You can also use JavaScript expressions in a predicate (an expression evaluating to a Boolean value):"},{"type":"element","tagName":"br","properties":{},"children":[]},{"type":"text","value":"\n"},{"type":"element","tagName":"code","properties":{"className":["language-text"]},"children":[{"type":"text","value":"disabled: Eval \"var1.isEmpty() || var2.isEmpty()\""}]}]},{"type":"text","value":"\n"},{"type":"element","tagName":"h3","properties":{"id":"accessible-objects"},"children":[{"type":"text","value":"Accessible objects"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Inside a JavaScript expression, you can use:"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"ul","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"variables (for example "},{"type":"element","tagName":"code","properties":{"className":["language-text"]},"children":[{"type":"text","value":"\"{var1.get()}\""}]},{"type":"text","value":"),"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"parameters (for example "},{"type":"element","tagName":"code","properties":{"className":["language-text"]},"children":[{"type":"text","value":"\"{param2.get()}\""}]},{"type":"text","value":"),"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"record columns using <record name>.<column name> (for example "},{"type":"element","tagName":"code","properties":{"className":["language-text"]},"children":[{"type":"text","value":"\"{identity.fullname}\""}]},{"type":"text","value":"),"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"task record attributes using <task name>.<attribute name> (for example "},{"type":"element","tagName":"code","properties":{"className":["language-text"]},"children":[{"type":"text","value":"\"{task.org_uids.length}\""}]},{"type":"text","value":"),"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"process record attributes using <process record name>.<attribute name> (for example "},{"type":"element","tagName":"code","properties":{"className":["language-text"]},"children":[{"type":"text","value":"\"{process.uids.get()}\""}]},{"type":"text","value":"),"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"user variables using uservariable.<user variable name> (for example "},{"type":"element","tagName":"code","properties":{"className":["language-text"]},"children":[{"type":"text","value":"\"{uservariable.selectedApplications.get()}\""}]},{"type":"text","value":")"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"current values in a dataset iteration using current.<column name> (for example "},{"type":"element","tagName":"code","properties":{"className":["language-text"]},"children":[{"type":"text","value":"\"{!current.altname.isEmpty()}\""}]},{"type":"text","value":"),"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"configuration variables using config.<variable name> (for example "},{"type":"element","tagName":"code","properties":{"className":["language-text"]},"children":[{"type":"text","value":"\"{config.logPath}\""}]},{"type":"text","value":"),"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"principal attributes using principal.<attribute name> (for example "},{"type":"element","tagName":"code","properties":{"className":["language-text"]},"children":[{"type":"text","value":"\"{principal.login}\""}]},{"type":"text","value":")."}]},{"type":"text","value":"\n"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"blockquote","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"For record columns, current values, configuration variables and principal attributes the value can only be mono-valued by construction, so it is already a simple type (string, date, boolean, etc...)."}]},{"type":"text","value":"\n"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"h2","properties":{"id":"javascript-services"},"children":[{"type":"text","value":"Javascript Services"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Javascript files can now be created inside the webportal/pages directory (and any sub-directories) and methods from these files can be referenced by services. The extension of these files must be '.javascript'."}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"The service declaration block now allows the new attributes:"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"ul","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"javascript-file: the name of the javascript file, relative to the root of the project,"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"javascript-method: the name of a method in the previously specified file."}]},{"type":"text","value":"\n"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"The method should not have parameters and, for StringService, IntService and BooleanService, return a value of the appropriate type. For EventService any return value is ignored."}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Inside the method, the dataset object already contains attributes for any input or output parameter specified in the service declaration."}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"For example in the "},{"type":"element","tagName":"code","properties":{"className":["language-text"]},"children":[{"type":"text","value":"/webportal/pages/test_js.javascript"}]},{"type":"text","value":" file"}]},{"type":"text","value":"\n\n          "},{"type":"element","tagName":"codeblockcopytag","properties":{},"children":[{"type":"text","value":"function test12() {\n    if (dataset.invert.get()) {\n        return dataset.surname.get() + \" \" + dataset.givenname.get();\n    }\n    return dataset.givenname.get() + \" \" + dataset.surname.get();\n}"}]},{"type":"text","value":"\n          \n"},{"type":"element","tagName":"div","properties":{"className":["gatsby-highlight"],"dataLanguage":"page"},"children":[{"type":"element","tagName":"pre","properties":{"className":["language-page"]},"children":[{"type":"element","tagName":"code","properties":{"className":["language-page"]},"children":[{"type":"text","value":"function test12() {\n    if (dataset.invert.get()) {\n        return dataset.surname.get() + \" \" + dataset.givenname.get();\n    }\n    return dataset.givenname.get() + \" \" + dataset.surname.get();\n}"}]}]}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"and in a "},{"type":"element","tagName":"code","properties":{"className":["language-text"]},"children":[{"type":"text","value":".page"}]},{"type":"text","value":" file"}]},{"type":"text","value":"\n\n          "},{"type":"element","tagName":"codeblockcopytag","properties":{},"children":[{"type":"text","value":"js12 = StringService {\n    javascript-file: \"/webportal/pages/test_js.javascript\"\n    javascript-method: test12\n\n    givenname = Input {\n        type: String\n        mandatory: True\n    }\n    surname = Input {\n        type: String\n        mandatory: True\n    }\n    invert = Input {\n        type: Boolean\n        default: False\n    }\n}\n\ntest_js3 = Page {\n    title: \"[JS] Assignable Services in Table\"\n    tags: \"TEST\", \"GENERAL\"\n\n    invert = Variable {\n        type: Boolean\n        initial: False\n    }\n\n    identities = Dataset {\n        view: br_identity\n    }\n\n    Checkbox {\n        variable: invert\n        text: \"Invert\"\n        modify-event: ReloadData(identities)\n    }\n    Table {\n        data: identities\n        label: Label {\n            break: True\n        }\n        layout: Layout {\n            grab: horizontal True vertical True\n        }\n        show-count: True\n\n        Column {\n            column: uid\n            header: \"UID\"\n            width: 300px\n        }\n        Column {\n            column: fullname\n            text: @js12(Current givenname to givenname, Current surname to surname, invert to invert)\n            header: \"Name\"\n            width: 100%\n        }\n    }\n\n}"}]},{"type":"text","value":"\n          \n"},{"type":"element","tagName":"div","properties":{"className":["gatsby-highlight"],"dataLanguage":"page"},"children":[{"type":"element","tagName":"pre","properties":{"className":["language-page"]},"children":[{"type":"element","tagName":"code","properties":{"className":["language-page"]},"children":[{"type":"text","value":"js12 = StringService {\n    javascript-file: \"/webportal/pages/test_js.javascript\"\n    javascript-method: test12\n\n    givenname = Input {\n        type: String\n        mandatory: True\n    }\n    surname = Input {\n        type: String\n        mandatory: True\n    }\n    invert = Input {\n        type: Boolean\n        default: False\n    }\n}\n\ntest_js3 = Page {\n    title: \"[JS] Assignable Services in Table\"\n    tags: \"TEST\", \"GENERAL\"\n\n    invert = Variable {\n        type: Boolean\n        initial: False\n    }\n\n    identities = Dataset {\n        view: br_identity\n    }\n\n    Checkbox {\n        variable: invert\n        text: \"Invert\"\n        modify-event: ReloadData(identities)\n    }\n    Table {\n        data: identities\n        label: Label {\n            break: True\n        }\n        layout: Layout {\n            grab: horizontal True vertical True\n        }\n        show-count: True\n\n        Column {\n            column: uid\n            header: \"UID\"\n            width: 300px\n        }\n        Column {\n            column: fullname\n            text: @js12(Current givenname to givenname, Current surname to surname, invert to invert)\n            header: \"Name\"\n            width: 100%\n        }\n    }\n\n}"}]}]}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"The config object can be used to retrieve project global variable as defined in the configuration files, as well as four other attributes:"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"ul","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"element","tagName":"code","properties":{"className":["language-text"]},"children":[{"type":"text","value":"__PRINCIPAL_UID"}]},{"type":"text","value":" is the uid of the user viewing the page,"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"element","tagName":"code","properties":{"className":["language-text"]},"children":[{"type":"text","value":"__PRINCIPAL_FULLNAME"}]},{"type":"text","value":" is the full name of the user viewing the page,"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"element","tagName":"code","properties":{"className":["language-text"]},"children":[{"type":"text","value":"__PRINCIPAL_LANGUAGE"}]},{"type":"text","value":" is the language of the user viewing the page,"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"element","tagName":"code","properties":{"className":["language-text"]},"children":[{"type":"text","value":"__TIMESLOT_UID"}]},{"type":"text","value":" is the timeslot of the current page."}]},{"type":"text","value":"\n"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"For example, in the javascript file:"}]},{"type":"text","value":"\n\n          "},{"type":"element","tagName":"codeblockcopytag","properties":{},"children":[{"type":"text","value":"function test11() {\n    dataset.out_val = config.__PRINCIPAL_UID + \"/\" + config.__PRINCIPAL_FULLNAME\n    + \" (\" + config.__TIMESLOT_UID + \")\";\n}"}]},{"type":"text","value":"\n          \n"},{"type":"element","tagName":"div","properties":{"className":["gatsby-highlight"],"dataLanguage":"page"},"children":[{"type":"element","tagName":"pre","properties":{"className":["language-page"]},"children":[{"type":"element","tagName":"code","properties":{"className":["language-page"]},"children":[{"type":"text","value":"function test11() {\n    dataset.out_val = config.__PRINCIPAL_UID + \"/\" + config.__PRINCIPAL_FULLNAME\n    + \" (\" + config.__TIMESLOT_UID + \")\";\n}"}]}]}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"and in the page"}]},{"type":"text","value":"\n\n          "},{"type":"element","tagName":"codeblockcopytag","properties":{},"children":[{"type":"text","value":"js11 = EventService {\n    javascript-file: \"/webportal/pages/test_js.javascript\"\n    javascript-method: test11\n\n    out_val = Output {\n        type: String\n    }\n}\n\ntest_js2 = Page {\n    title: \"[JS] Event Services\"\n    tags: \"TEST\", \"GENERAL\"\n    enter-event: Call js11(out_val from out_val)\n\n    out_val = Variable {\n        type: String\n    }\n\n...\n\n}"}]},{"type":"text","value":"\n          \n"},{"type":"element","tagName":"div","properties":{"className":["gatsby-highlight"],"dataLanguage":"page"},"children":[{"type":"element","tagName":"pre","properties":{"className":["language-page"]},"children":[{"type":"element","tagName":"code","properties":{"className":["language-page"]},"children":[{"type":"text","value":"js11 = EventService {\n    javascript-file: \"/webportal/pages/test_js.javascript\"\n    javascript-method: test11\n\n    out_val = Output {\n        type: String\n    }\n}\n\ntest_js2 = Page {\n    title: \"[JS] Event Services\"\n    tags: \"TEST\", \"GENERAL\"\n    enter-event: Call js11(out_val from out_val)\n\n    out_val = Variable {\n        type: String\n    }\n\n...\n\n}"}]}]}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"You can call a View or a Rule by using the following syntax:"}]},{"type":"text","value":"\n\n          "},{"type":"element","tagName":"codeblockcopytag","properties":{},"children":[{"type":"text","value":"function getTotalAccounts ( file_uid , extras ) {\n var params = new java.util.HashMap();\n  params.put(\"uid\", file_uid );\n  var res = connector.executeView(config.__TIMESLOT_UID, \"files_countaccounts\" , params);\n  extras[0]  = res[0].get(\"share_displayname\").toString();\n  extras[1]  = res[0].get(\"code\").toString();\n  return Number(res[0].get(\"total_active_accounts\"));\n}"}]},{"type":"text","value":"\n          \n"},{"type":"element","tagName":"div","properties":{"className":["gatsby-highlight"],"dataLanguage":"page"},"children":[{"type":"element","tagName":"pre","properties":{"className":["language-page"]},"children":[{"type":"element","tagName":"code","properties":{"className":["language-page"]},"children":[{"type":"text","value":"function getTotalAccounts ( file_uid , extras ) {\n var params = new java.util.HashMap();\n  params.put(\"uid\", file_uid );\n  var res = connector.executeView(config.__TIMESLOT_UID, \"files_countaccounts\" , params);\n  extras[0]  = res[0].get(\"share_displayname\").toString();\n  extras[1]  = res[0].get(\"code\").toString();\n  return Number(res[0].get(\"total_active_accounts\"));\n}"}]}]}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Inside the javascript, any print call will be redirected to the igrcportal.log file. The debugger; token can be used to dump a bunch of information in the log file (which must allow debug level)."}]},{"type":"text","value":"\n"},{"type":"element","tagName":"h2","properties":{"id":"nationalization-strings-with-parameters"},"children":[{"type":"text","value":"Nationalization strings with parameters"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"You can be in a situation where you want to create dynamic nationalized texts, including some information extracted from a variable, a record, ..."}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"one method could be to use the Concat keyword :"}]},{"type":"text","value":"\n\n          "},{"type":"element","tagName":"codeblockcopytag","properties":{},"children":[{"type":"text","value":"parts = NLS {\n  part1 [en \"the account \" fr \"le compte \"]\n  part2 [en \" has too many permissions\" fr \" a trop de droits\"]\n}\n\ndemo = Page {\n title:'test'\n\n login = Variable{initial:'jdoe'}\n\n Text {\n    value:Concat(\\$parts.part1, login, \\$parts.part2)\n }\n}"}]},{"type":"text","value":"\n          \n"},{"type":"element","tagName":"div","properties":{"className":["gatsby-highlight"],"dataLanguage":"page"},"children":[{"type":"element","tagName":"pre","properties":{"className":["language-page"]},"children":[{"type":"element","tagName":"code","properties":{"className":["language-page"]},"children":[{"type":"text","value":"parts = NLS {\n  part1 [en \"the account \" fr \"le compte \"]\n  part2 [en \" has too many permissions\" fr \" a trop de droits\"]\n}\n\ndemo = Page {\n title:'test'\n\n login = Variable{initial:'jdoe'}\n\n Text {\n    value:Concat($parts.part1, login, $parts.part2)\n }\n}"}]}]}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"This is not a good practice as it implies that you specifically code the concatenation, thus you won't be able to update the labels easily."},{"type":"element","tagName":"br","properties":{},"children":[]},{"type":"text","value":"\nYou can instead use NLS parameters."}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"NLS strings accept parameters, those parameters are leveraged by the {NUMBER} pattern, starting with 0."}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"We can rewrite the above example in the following form:"}]},{"type":"text","value":"\n\n          "},{"type":"element","tagName":"codeblockcopytag","properties":{},"children":[{"type":"text","value":"parts = NLS {\n  part [en \"the account {0} has too many permissions\" fr \"le compte {0} a trop de droits\"]\n}\n\ndemo = Page {\n title:'test'\n\n login = Variable{initial:'jdoe'}\n\n Text {\n    value:\\$parts.part(login)\n }\n}"}]},{"type":"text","value":"\n          \n"},{"type":"element","tagName":"div","properties":{"className":["gatsby-highlight"],"dataLanguage":"page"},"children":[{"type":"element","tagName":"pre","properties":{"className":["language-page"]},"children":[{"type":"element","tagName":"code","properties":{"className":["language-page"]},"children":[{"type":"text","value":"parts = NLS {\n  part [en \"the account {0} has too many permissions\" fr \"le compte {0} a trop de droits\"]\n}\n\ndemo = Page {\n title:'test'\n\n login = Variable{initial:'jdoe'}\n\n Text {\n    value:$parts.part(login)\n }\n}"}]}]}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"As you can see, "},{"type":"element","tagName":"code","properties":{"className":["language-text"]},"children":[{"type":"text","value":"{0}"}]},{"type":"text","value":" is used to specify where the dynamic value will be located in the string."},{"type":"element","tagName":"br","properties":{},"children":[]},{"type":"text","value":"\nThis dynamic value is passed as a parameter of the NLS entry: "},{"type":"element","tagName":"code","properties":{"className":["language-text"]},"children":[{"type":"text","value":"$parts.part(login)"}]}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"You can have several parameters as well:"}]},{"type":"text","value":"\n\n          "},{"type":"element","tagName":"codeblockcopytag","properties":{},"children":[{"type":"text","value":"parts = NLS {\n  part [en \"the account {0} from {1} has too many permissions\" fr \"le compte {0} de {1} a trop de droits\"]\n}\n\ndemo = Page {\n title:'test'\n\n login = Variable{initial:'jdoe'}\n name = Variable{initial:'John Doe'}\n\n Text {\n    value:\\$parts.part(login, name)\n }\n}"}]},{"type":"text","value":"\n          \n"},{"type":"element","tagName":"div","properties":{"className":["gatsby-highlight"],"dataLanguage":"page"},"children":[{"type":"element","tagName":"pre","properties":{"className":["language-page"]},"children":[{"type":"element","tagName":"code","properties":{"className":["language-page"]},"children":[{"type":"text","value":"parts = NLS {\n  part [en \"the account {0} from {1} has too many permissions\" fr \"le compte {0} de {1} a trop de droits\"]\n}\n\ndemo = Page {\n title:'test'\n\n login = Variable{initial:'jdoe'}\n name = Variable{initial:'John Doe'}\n\n Text {\n    value:$parts.part(login, name)\n }\n}"}]}]}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"You just have to increment the index within the {...} and to specify several parameters separated by a ','  ."},{"type":"element","tagName":"br","properties":{},"children":[]},{"type":"text","value":"\nYou can also apply a specific text formatting for integer, boolean or date parameters."}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Here is an example:"}]},{"type":"text","value":"\n\n          "},{"type":"element","tagName":"codeblockcopytag","properties":{},"children":[{"type":"text","value":"parts = NLS {\n  part [en \"Orphan account ratio {0,number,#.##}%\" fr \"Ratio de comptes orphelins {0,number,#.##}%\"]\n}\n\ndemo = Page {\n title:'test'\n\n val = Variable{initial:77.54678}\n\n Text {\n    value:\\$parts.part(val)\n }"}]},{"type":"text","value":"\n          \n"},{"type":"element","tagName":"div","properties":{"className":["gatsby-highlight"],"dataLanguage":"page"},"children":[{"type":"element","tagName":"pre","properties":{"className":["language-page"]},"children":[{"type":"element","tagName":"code","properties":{"className":["language-page"]},"children":[{"type":"text","value":"parts = NLS {\n  part [en \"Orphan account ratio {0,number,#.##}%\" fr \"Ratio de comptes orphelins {0,number,#.##}%\"]\n}\n\ndemo = Page {\n title:'test'\n\n val = Variable{initial:77.54678}\n\n Text {\n    value:$parts.part(val)\n }"}]}]}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"You can refer to "},{"type":"element","tagName":"a","properties":{"href":"https://docs.oracle.com/javase/7/docs/api/java/text/MessageFormat.html"},"children":[{"type":"text","value":"Java 7 Message Format"}]},{"type":"text","value":" for more details about this."}]},{"type":"text","value":"\n"},{"type":"element","tagName":"h2","properties":{"id":"conditional-nationalization"},"children":[{"type":"text","value":"Conditional nationalization"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"You can embed tests in your nationalization strings in order to build different strings depending on its dynamic content."}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Let's take a simple example: You can to display a warning dialog box if some entries still need to be reviewed."},{"type":"element","tagName":"br","properties":{},"children":[]},{"type":"text","value":"\nYou want to display a different message depending on the number of elements left for review: 1 or several elements."}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Here is an example:"}]},{"type":"text","value":"\n\n          "},{"type":"element","tagName":"codeblockcopytag","properties":{},"children":[{"type":"text","value":"reviewNLS = NLS {\n    commitwarning [en \"{0,choice,1#{0} entry still need to be reviewed|1<{0} entries still need to be reviewed}\" fr \"{0,choice,1#Il reste {0} entrée à revoir|1<Il reste {0} entrées à revoir}\"]\n}\n\n\nreview = Page {\n    title:'demo'\n\n    nbelements = Variable{initial:3}\n\n\n    Button {\n        actions:Confirm \\$reviewNLS.commitwarning(nbelements)\n    }\n}"}]},{"type":"text","value":"\n          \n"},{"type":"element","tagName":"div","properties":{"className":["gatsby-highlight"],"dataLanguage":"page"},"children":[{"type":"element","tagName":"pre","properties":{"className":["language-page"]},"children":[{"type":"element","tagName":"code","properties":{"className":["language-page"]},"children":[{"type":"text","value":"reviewNLS = NLS {\n    commitwarning [en \"{0,choice,1#{0} entry still need to be reviewed|1<{0} entries still need to be reviewed}\" fr \"{0,choice,1#Il reste {0} entrée à revoir|1<Il reste {0} entrées à revoir}\"]\n}\n\n\nreview = Page {\n    title:'demo'\n\n    nbelements = Variable{initial:3}\n\n\n    Button {\n        actions:Confirm $reviewNLS.commitwarning(nbelements)\n    }\n}"}]}]}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"As you can see, you can add a context within {...} such as conditions."}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"You can refer to "},{"type":"element","tagName":"a","properties":{"href":"https://docs.oracle.com/javase/7/docs/api/java/text/MessageFormat.html"},"children":[{"type":"text","value":"Java 7 Message Format"}]},{"type":"text","value":" and "},{"type":"element","tagName":"a","properties":{"href":"https://docs.oracle.com/javase/7/docs/api/java/text/ChoiceFormat.html"},"children":[{"type":"text","value":"Java 7 Choice Format"}]},{"type":"text","value":" for more details about this."}]},{"type":"text","value":"\n"},{"type":"element","tagName":"h2","properties":{"id":"conditional-redirect"},"children":[{"type":"text","value":"Conditional Redirect"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"You can attach a condition on a Page or a Report in order to trigger a redirect based on a condition."},{"type":"element","tagName":"br","properties":{},"children":[]},{"type":"text","value":"\nThe condition will be tested once the page has been loaded, it means that this condition can leverage data from the Identity Ledger through Dataset and Record objects."}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"This can be useful for instance if you want to redirect the user based on the kind of data that he tries to access to."}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Let's take a simple example:"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"you create 3 Account Analytics pages:"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"ul","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"one page which will be the default analytics page"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"one page dedicated to SAP accounts"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"one page dedicated to Active Directory accounts"}]},{"type":"text","value":"\n"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"When you redirect the user to this accounts analytics section, you want to dynamically display the right content based on the account repository."}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"You can do it by redirecting the user to the default analytics page, and by attaching  a conditional redirect in the default analytics page to redirect the user to the SAP page or the Active Directory page, depending on the account repository."}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"What you can do as well is to dynamically compute a parameter based on another parameter, here is an example:"}]},{"type":"text","value":"\n\n          "},{"type":"element","tagName":"codeblockcopytag","properties":{},"children":[{"type":"text","value":"accountDetailsPageRecorduid = Page {\n title: \"Recorduid redirection (account)\"\n conditional-redirect: ConditionalRedirect { condition: True target: Page accountDetailsPage with accountUid.uid to paramAccountUid }\n\n recorduid = Parameter {\n type: Integer\n hidden: True\n recorduid-of: Account\n mandatory: True\n }\n\n accountUid = Record {\n view: br_accountDetail_uid with recorduid to recorduid\n }\n}"}]},{"type":"text","value":"\n          \n"},{"type":"element","tagName":"div","properties":{"className":["gatsby-highlight"],"dataLanguage":"page"},"children":[{"type":"element","tagName":"pre","properties":{"className":["language-page"]},"children":[{"type":"element","tagName":"code","properties":{"className":["language-page"]},"children":[{"type":"text","value":"accountDetailsPageRecorduid = Page {\n title: \"Recorduid redirection (account)\"\n conditional-redirect: ConditionalRedirect { condition: True target: Page accountDetailsPage with accountUid.uid to paramAccountUid }\n\n recorduid = Parameter {\n type: Integer\n hidden: True\n recorduid-of: Account\n mandatory: True\n }\n\n accountUid = Record {\n view: br_accountDetail_uid with recorduid to recorduid\n }\n}"}]}]}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"When you redirect a user on this page with a recorduid parameter, it automatically retrieve the uid based on the recorduid and redirect the user back to the account details page."}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"As you can see, you only have to fulfill the conditional-redirect property with a ConditionalRedirect object."},{"type":"element","tagName":"br","properties":{},"children":[]},{"type":"text","value":"\n"},{"type":"element","tagName":"strong","properties":{},"children":[{"type":"text","value":"condition"}]},{"type":"text","value":": contains the condition (must return true or false, see "},{"type":"element","tagName":"a","properties":{"href":"./20-events-and-actions.md"},"children":[{"type":"text","value":"conditions"}]},{"type":"text","value":"for more details)"},{"type":"element","tagName":"br","properties":{},"children":[]},{"type":"text","value":"\n"},{"type":"element","tagName":"strong","properties":{},"children":[{"type":"text","value":"target"}]},{"type":"text","value":": contains the target (see the "},{"type":"element","tagName":"a","properties":{"href":"./20-events-and-actions.md"},"children":[{"type":"text","value":"GoTo"}]},{"type":"text","value":" instruction for more details)"}]}],"data":{"quirksMode":false}},"fileAbsolutePath":"/home/runner/work/developer-site/developer-site/.cache/gatsby-source-git/ia/descartes/documentation/igrc-platform/pages/22-advanced-concepts.md","frontmatter":{"title":"Advanced Concepts"},"headings":[{"id":"advanced-concepts","value":"Advanced Concepts","depth":1},{"id":"javascript-expressions","value":"JavaScript expressions","depth":2},{"id":"bindings","value":"Bindings","depth":3},{"id":"predicates","value":"Predicates","depth":3},{"id":"accessible-objects","value":"Accessible objects","depth":3},{"id":"javascript-services","value":"Javascript Services","depth":2},{"id":"nationalization-strings-with-parameters","value":"Nationalization strings with parameters","depth":2},{"id":"conditional-nationalization","value":"Conditional nationalization","depth":2},{"id":"conditional-redirect","value":"Conditional Redirect","depth":2}]},"toc":null},"pageContext":{"urlPrefix":"ia/descartes","absolutePath":"/home/runner/work/developer-site/developer-site/.cache/gatsby-source-git/ia/descartes/documentation/igrc-platform/pages/22-advanced-concepts.md","tocRegex":"/(ia/)(descartes/)?(documentation/)?(igrc-platform/)?(pages/)?(22-advanced-concepts.md/)?(TOC.md)/ig","versions":[{"name":"descartes","displayName":"Descartes"}],"currentRepo":{"name":"ia","displayName":"Identity Analytics","description":"This guide provides a high-level overview of Identity Analytics. This documentation includes the user guides, integration guides for Identity Analytics along with the different modules included.","links":[{"text":"SEE DEVELOPER DOCUMENTATION","href":"/ia/descartes/#1"}],"remote":"https://github.com/radiantlogic-v8/documentation-ia-product.git","patterns":["home-pages/**","documentation/**"],"deployBranches":[{"name":"descartes","displayName":"Descartes"}]},"currentRepoWebLink":"https://github.com/radiantlogic-v8/documentation-ia-product","currentVersion":{"name":"descartes","displayName":"Descartes"},"title":"Advanced Concepts","description":"Advanced Concepts","tocForCurrentSection":{"textElement":"Igrc platform","href":null,"children":[{"textElement":"Add ons","href":"igrc-platform/add-ons/","children":[{"textElement":"Add on creation","href":"igrc-platform/add-ons/add-on-creation","children":[]},{"textElement":"Add on migration","href":"igrc-platform/add-ons/add-on-migration","children":[]}]},{"textElement":"Audit logs","href":"igrc-platform/audit-logs/","children":[{"textElement":"Data collection configuration","href":"igrc-platform/audit-logs/01-data-collection-configuration","children":[]},{"textElement":"Auditlog execution plan","href":"igrc-platform/audit-logs/02-auditlog-execution-plan","children":[]},{"textElement":"Database configuration","href":"igrc-platform/audit-logs/03-database-configuration","children":[]},{"textElement":"Usage","href":"igrc-platform/audit-logs/04-usage","children":[]}]},{"textElement":"Audit rules","href":"igrc-platform/audit-rules/","children":[{"textElement":"Search dimensions","href":"igrc-platform/audit-rules/01-search-dimensions","children":[]},{"textElement":"Advanced concepts","href":"igrc-platform/audit-rules/02-advanced-concepts","children":[]},{"textElement":"Time management","href":"igrc-platform/audit-rules/03-time-management","children":[]},{"textElement":"Best practices","href":"igrc-platform/audit-rules/04-best-practices","children":[]}]},{"textElement":"Business view","href":"igrc-platform/business-view/","children":[{"textElement":"Main concepts","href":"igrc-platform/business-view/01-main-concepts","children":[]},{"textElement":"Business view editor","href":"igrc-platform/business-view/02-business-view-editor","children":[]},{"textElement":"Common features","href":"igrc-platform/business-view/03-common-features","children":[]},{"textElement":"Components","href":"igrc-platform/business-view/04-components","children":[]},{"textElement":"Filter components","href":"igrc-platform/business-view/05-filter-components","children":[]},{"textElement":"Debugging","href":"igrc-platform/business-view/06-debugging","children":[]},{"textElement":"Optimization","href":"igrc-platform/business-view/07-optimization","children":[]}]},{"textElement":"Collect wizard","href":"igrc-platform/collect-wizard/","children":[{"textElement":"Discorvery mapping","href":"igrc-platform/collect-wizard/01-discorvery-mapping","children":[]},{"textElement":"Application model editor","href":"igrc-platform/collect-wizard/02-application-model-editor","children":[]},{"textElement":"Templates","href":"igrc-platform/collect-wizard/03-templates","children":[]}]},{"textElement":"Collector","href":"igrc-platform/collector/","children":[{"textElement":"Engine states","href":"igrc-platform/collector/01-engine-states","children":[]},{"textElement":"Data flow","href":"igrc-platform/collector/02-data-flow","children":[]},{"textElement":"Logs","href":"igrc-platform/collector/03-logs","children":[]},{"textElement":"Components","href":"igrc-platform/collector/04-components/","children":[{"textElement":"Filters","href":"igrc-platform/collector/04-components/filters","children":[]},{"textElement":"Sources","href":"igrc-platform/collector/04-components/sources","children":[]},{"textElement":"Target","href":"igrc-platform/collector/04-components/target","children":[]}]},{"textElement":"Macros and scripts","href":"igrc-platform/collector/05-macros-and-scripts","children":[]},{"textElement":"Sql filtering","href":"igrc-platform/collector/06-sql-filtering","children":[]}]},{"textElement":"Controls","href":"igrc-platform/controls/","children":[{"textElement":"Permission impact","href":"igrc-platform/controls/01-permission-impact","children":[]},{"textElement":"Theoretical rights","href":"igrc-platform/controls/02-theoretical-rights","children":[]},{"textElement":"Default tag","href":"igrc-platform/controls/03-default-tag","children":[]}]},{"textElement":"Dashboards","href":"igrc-platform/dashboards/","children":[{"textElement":"Components","href":"igrc-platform/dashboards/01-components","children":[]},{"textElement":"Publication","href":"igrc-platform/dashboards/02-publication","children":[]},{"textElement":"Advanced configation","href":"igrc-platform/dashboards/03-advanced-configation","children":[]},{"textElement":"Customization","href":"igrc-platform/dashboards/04-customization","children":[]}]},{"textElement":"Data discovery","href":"igrc-platform/data-discovery/","children":[{"textElement":"Basic concepts","href":"igrc-platform/data-discovery/01-basic-concepts","children":[]},{"textElement":"Advanced concepts","href":"igrc-platform/data-discovery/02-advanced-concepts","children":[]}]},{"textElement":"Getting started","href":"igrc-platform/getting-started/","children":[{"textElement":"Timeslots","href":"igrc-platform/getting-started/01-timeslots","children":[]},{"textElement":"Execution plan","href":"igrc-platform/getting-started/02-execution-plan","children":[]},{"textElement":"Default project","href":"igrc-platform/getting-started/03-default-project","children":[]},{"textElement":"Creation configuration","href":"igrc-platform/getting-started/04-creation-configuration","children":[]},{"textElement":"Studio editors","href":"igrc-platform/getting-started/05-studio-editors","children":[]},{"textElement":"Project archives","href":"igrc-platform/getting-started/06-project-archives","children":[]},{"textElement":"Tutorial","href":"igrc-platform/getting-started/07-tutorial","children":[]}]},{"textElement":"Installation and deployment","href":"igrc-platform/installation-and-deployment/","children":[{"textElement":"Batch configuration and usage","href":"igrc-platform/installation-and-deployment/02-batch-configuration-and-usage","children":[]},{"textElement":"Brainwaves web portal","href":"igrc-platform/installation-and-deployment/03-brainwaves-web-portal/","children":[{"textElement":"Deployment","href":"igrc-platform/installation-and-deployment/03-brainwaves-web-portal/01-deployment","children":[]},{"textElement":"Parametrization","href":"igrc-platform/installation-and-deployment/03-brainwaves-web-portal/02-parametrization/","children":[{"textElement":"Basic","href":"igrc-platform/installation-and-deployment/03-brainwaves-web-portal/02-parametrization/01-basic","children":[]},{"textElement":"Ldap","href":"igrc-platform/installation-and-deployment/03-brainwaves-web-portal/02-parametrization/02-ldap","children":[]},{"textElement":"Saml","href":"igrc-platform/installation-and-deployment/03-brainwaves-web-portal/02-parametrization/03-saml/","children":[{"textElement":"Adfs","href":"igrc-platform/installation-and-deployment/03-brainwaves-web-portal/02-parametrization/03-saml/adfs","children":[]},{"textElement":"Gsuite","href":"igrc-platform/installation-and-deployment/03-brainwaves-web-portal/02-parametrization/03-saml/gsuite","children":[]},{"textElement":"Inwebo","href":"igrc-platform/installation-and-deployment/03-brainwaves-web-portal/02-parametrization/03-saml/inwebo","children":[]},{"textElement":"Okta","href":"igrc-platform/installation-and-deployment/03-brainwaves-web-portal/02-parametrization/03-saml/okta","children":[]},{"textElement":"Saml authenticators properties","href":"igrc-platform/installation-and-deployment/03-brainwaves-web-portal/02-parametrization/03-saml/saml-authenticators-properties","children":[]}]},{"textElement":"Http headers","href":"igrc-platform/installation-and-deployment/03-brainwaves-web-portal/02-parametrization/04-http-headers","children":[]}]},{"textElement":"Diagnostic","href":"igrc-platform/installation-and-deployment/03-brainwaves-web-portal/03-diagnostic","children":[]},{"textElement":"Troubleshooting","href":"igrc-platform/installation-and-deployment/03-brainwaves-web-portal/04-troubleshooting","children":[]},{"textElement":"Web portal theme customization","href":"igrc-platform/installation-and-deployment/03-brainwaves-web-portal/05-web-portal-theme-customization/","children":[{"textElement":"Level 1","href":"igrc-platform/installation-and-deployment/03-brainwaves-web-portal/05-web-portal-theme-customization/level-1","children":[]},{"textElement":"Level 2 customization via ss","href":"igrc-platform/installation-and-deployment/03-brainwaves-web-portal/05-web-portal-theme-customization/level-2-customization-via-ss","children":[]},{"textElement":"Level 3 customization via css with resources","href":"igrc-platform/installation-and-deployment/03-brainwaves-web-portal/05-web-portal-theme-customization/level-3-customization-via-css-with-resources","children":[]},{"textElement":"Level 4 customization via scripting","href":"igrc-platform/installation-and-deployment/03-brainwaves-web-portal/05-web-portal-theme-customization/level-4-customization-via-scripting","children":[]}]},{"textElement":"Dedicated instance","href":"igrc-platform/installation-and-deployment/03-brainwaves-web-portal/06-dedicated-instance","children":[]}]},{"textElement":"Brainwave grc certified environments","href":"igrc-platform/installation-and-deployment/04-brainwave-grc-certified-environments","children":[]},{"textElement":"Legacy property files","href":"igrc-platform/installation-and-deployment/05-legacy-property-files","children":[]},{"textElement":"Ssh git connection","href":"igrc-platform/installation-and-deployment/06-ssh-git-connection","children":[]},{"textElement":"Database","href":"igrc-platform/installation-and-deployment/07-database/","children":[{"textElement":"Microsoft integrated authenitcation","href":"igrc-platform/installation-and-deployment/07-database/02-Microsoft-integrated-authenitcation","children":[]},{"textElement":"Index management","href":"igrc-platform/installation-and-deployment/07-database/03-index-management","children":[]},{"textElement":"Schema 35 upgrade procedure","href":"igrc-platform/installation-and-deployment/07-database/04-schema-35-upgrade-procedure/","children":[{"textElement":"Sqlserver","href":"igrc-platform/installation-and-deployment/07-database/04-schema-35-upgrade-procedure/01-sqlserver/","children":[{"textElement":"Large migrations","href":"igrc-platform/installation-and-deployment/07-database/04-schema-35-upgrade-procedure/01-sqlserver/large-migrations","children":[]}]},{"textElement":"Postgresql","href":"igrc-platform/installation-and-deployment/07-database/04-schema-35-upgrade-procedure/02-postgresql","children":[]},{"textElement":"Oracle","href":"igrc-platform/installation-and-deployment/07-database/04-schema-35-upgrade-procedure/03-oracle","children":[]}]},{"textElement":"Clean temporary iap metadata","href":"igrc-platform/installation-and-deployment/07-database/05-clean-temporary-iap-metadata/","children":[]}]}]},{"textElement":"Manager policy","href":"igrc-platform/manager-policy/","children":[]},{"textElement":"Metadata","href":"igrc-platform/metadata/","children":[{"textElement":"Concept","href":"igrc-platform/metadata/01-concept","children":[]},{"textElement":"Use cases","href":"igrc-platform/metadata/02-use-cases","children":[]},{"textElement":"Life cycle","href":"igrc-platform/metadata/03-life-cycle","children":[]},{"textElement":"Editor","href":"igrc-platform/metadata/04-editor","children":[]},{"textElement":"Collect","href":"igrc-platform/metadata/05-collect","children":[]},{"textElement":"Compute","href":"igrc-platform/metadata/06-compute","children":[]},{"textElement":"Workflow","href":"igrc-platform/metadata/07-workflow","children":[]},{"textElement":"Rules views","href":"igrc-platform/metadata/08-rules-views","children":[]},{"textElement":"Review","href":"igrc-platform/metadata/09-review","children":[]},{"textElement":"Examples","href":"igrc-platform/metadata/10-examples","children":[]}]},{"textElement":"Notification rules","href":"igrc-platform/notification-rules/","children":[{"textElement":"Using the editor","href":"igrc-platform/notification-rules/01-using-the-editor","children":[]},{"textElement":"Selecting recipients","href":"igrc-platform/notification-rules/02-selecting-recipients","children":[]},{"textElement":"Macros","href":"igrc-platform/notification-rules/03-macros","children":[]},{"textElement":"Reports as attachments","href":"igrc-platform/notification-rules/04-reports-as-attachments","children":[]},{"textElement":"Notification batch mode","href":"igrc-platform/notification-rules/05-notification-batch-mode","children":[]},{"textElement":"Internationalization of notification rules","href":"igrc-platform/notification-rules/06-internationalization-of-notification-rules","children":[]}]},{"textElement":"Pages","href":"igrc-platform/pages/","children":[{"textElement":"Using the wizard","href":"igrc-platform/pages/01-using-the-wizard","children":[]},{"textElement":"Home pages","href":"igrc-platform/pages/02-home-pages","children":[]},{"textElement":"Parameters","href":"igrc-platform/pages/03-parameters","children":[]},{"textElement":"Data binding","href":"igrc-platform/pages/04-data-binding","children":[]},{"textElement":"Advanced data binding","href":"igrc-platform/pages/05-advanced-data-binding","children":[]},{"textElement":"Variables","href":"igrc-platform/pages/06-variables","children":[]},{"textElement":"Widgets","href":"igrc-platform/pages/07-widgets","children":[]},{"textElement":"Containers widgets","href":"igrc-platform/pages/08-containers-widgets","children":[]},{"textElement":"Display widgets","href":"igrc-platform/pages/09-display-widgets","children":[]},{"textElement":"Selection widgets","href":"igrc-platform/pages/10-selection-widgets","children":[]},{"textElement":"Edition widgets","href":"igrc-platform/pages/11-edition-widgets","children":[]},{"textElement":"Chart widgets","href":"igrc-platform/pages/12-chart-widgets","children":[]},{"textElement":"Iterable widgets","href":"igrc-platform/pages/13-iterable-widgets","children":[]},{"textElement":"Special widgets","href":"igrc-platform/pages/14-special-widgets","children":[]},{"textElement":"Reports in pages","href":"igrc-platform/pages/15-reports-in-pages","children":[]},{"textElement":"Predicate functions","href":"igrc-platform/pages/16-predicate-functions","children":[]},{"textElement":"Mapping functions","href":"igrc-platform/pages/17-mapping-functions","children":[]},{"textElement":"Transform functions","href":"igrc-platform/pages/18-transform-functions","children":[]},{"textElement":"Dialog boxes","href":"igrc-platform/pages/19-dialog-boxes","children":[]},{"textElement":"Events and actions","href":"igrc-platform/pages/20-events-and-actions","children":[]},{"textElement":"Features and roles","href":"igrc-platform/pages/21-features-and-roles/","children":[{"textElement":"Label localisation","href":"igrc-platform/pages/21-features-and-roles/label-localisation","children":[]}]},{"textElement":"Advanced concepts","href":"igrc-platform/pages/22-advanced-concepts","children":[]},{"textElement":"Page fragments","href":"igrc-platform/pages/23-page-fragments","children":[]},{"textElement":"Cross table","href":"igrc-platform/pages/24-cross-table","children":[]},{"textElement":"Internationalisation","href":"igrc-platform/pages/25-internationalisation","children":[]},{"textElement":"Accessibility","href":"igrc-platform/pages/26-accessibility","children":[]},{"textElement":"Images and colors","href":"igrc-platform/pages/27-images-and-colors","children":[]}]},{"textElement":"Reconciliation","href":"igrc-platform/reconciliation/","children":[{"textElement":"Reconciliation policies","href":"igrc-platform/reconciliation/01-reconciliation-policies","children":[]}]},{"textElement":"Reports","href":"igrc-platform/reports/","children":[{"textElement":"Advanced concepts","href":"igrc-platform/reports/01-advanced-concepts","children":[]},{"textElement":"Best practice","href":"igrc-platform/reports/02-best-practice","children":[]}]},{"textElement":"Review wizard","href":"igrc-platform/review-wizard/","children":[{"textElement":"Generation","href":"igrc-platform/review-wizard/01-generation","children":[]},{"textElement":"Structure","href":"igrc-platform/review-wizard/02-structure","children":[]},{"textElement":"Editor","href":"igrc-platform/review-wizard/03-editor","children":[]},{"textElement":"Build","href":"igrc-platform/review-wizard/04-build","children":[]},{"textElement":"Migration","href":"igrc-platform/review-wizard/05-migration","children":[]}]},{"textElement":"Silos","href":"igrc-platform/silos/","children":[]},{"textElement":"Smart search","href":"igrc-platform/smart-search/","children":[]},{"textElement":"Technical configuration","href":"igrc-platform/technical-configuration/","children":[]},{"textElement":"Theoretical rights","href":"igrc-platform/theoretical-rights/","children":[]},{"textElement":"Timeslots and execution plan","href":"igrc-platform/timeslots-and-execution-plan/","children":[{"textElement":"Collect and silos","href":"igrc-platform/timeslots-and-execution-plan/01-collect-and-silos/","children":[{"textElement":"Dependances","href":"igrc-platform/timeslots-and-execution-plan/01-collect-and-silos/01-dependances","children":[]},{"textElement":"Silo execution plan","href":"igrc-platform/timeslots-and-execution-plan/01-collect-and-silos/02-silo-execution-plan","children":[]},{"textElement":"Iteration","href":"igrc-platform/timeslots-and-execution-plan/01-collect-and-silos/03-iteration","children":[]},{"textElement":"Dynamically change silos name","href":"igrc-platform/timeslots-and-execution-plan/01-collect-and-silos/04-dynamically-change-silos-name","children":[]},{"textElement":"Using silo contants","href":"igrc-platform/timeslots-and-execution-plan/01-collect-and-silos/05-using-silo-contants","children":[]},{"textElement":"Using silos within the ledger","href":"igrc-platform/timeslots-and-execution-plan/01-collect-and-silos/06-using-silos-within-the-ledger","children":[]},{"textElement":"Input file validation","href":"igrc-platform/timeslots-and-execution-plan/01-collect-and-silos/07-input-file-validation","children":[]}]},{"textElement":"Purge of timeslots","href":"igrc-platform/timeslots-and-execution-plan/02-purge-of-timeslots","children":[]}]},{"textElement":"Views","href":"igrc-platform/views/","children":[{"textElement":"Managing attributes","href":"igrc-platform/views/01-managing-attributes","children":[]},{"textElement":"Sorting the results","href":"igrc-platform/views/02-sorting-the-results","children":[]},{"textElement":"Configuring joins","href":"igrc-platform/views/03-configuring-joins","children":[]},{"textElement":"Filtering results","href":"igrc-platform/views/04-filtering-results","children":[]},{"textElement":"Advanced concepts","href":"igrc-platform/views/05-advanced-concepts","children":[]},{"textElement":"Tips and best practice","href":"igrc-platform/views/06-tips-and-best-practice","children":[]},{"textElement":"Standard views","href":"igrc-platform/views/07-standard-views","children":[]}]},{"textElement":"Workflow","href":"igrc-platform/workflow/","children":[{"textElement":"Workflow configuration","href":"igrc-platform/workflow/01-workflow-configuration","children":[]},{"textElement":"Workflow editor user guide","href":"igrc-platform/workflow/02-workflow-editor-user-guide","children":[]},{"textElement":"Roles","href":"igrc-platform/workflow/03-roles","children":[]},{"textElement":"Variables","href":"igrc-platform/workflow/04-variables","children":[]},{"textElement":"Manual tasks","href":"igrc-platform/workflow/05-manual-tasks","children":[]},{"textElement":"Iterations and subprocesses","href":"igrc-platform/workflow/06-iterations-and-subprocesses","children":[]},{"textElement":"Email notifications","href":"igrc-platform/workflow/07-email-notifications","children":[]},{"textElement":"Time management","href":"igrc-platform/workflow/08-time-management","children":[]},{"textElement":"Tickets and workflows","href":"igrc-platform/workflow/09-tickets-and-workflows","children":[]},{"textElement":"Tickets","href":"igrc-platform/workflow/10-tickets","children":[]},{"textElement":"Components","href":"igrc-platform/workflow/11-components","children":[]},{"textElement":"Debugging","href":"igrc-platform/workflow/12-debugging","children":[]},{"textElement":"Exception management","href":"igrc-platform/workflow/13-exception-management","children":[]},{"textElement":"Workflows and timeslots","href":"igrc-platform/workflow/14-workflows-and-timeslots","children":[]},{"textElement":"Running campaigns","href":"igrc-platform/workflow/15-running-campaigns","children":[]}]}]}}},"staticQueryHashes":["63159454"],"slicesMap":{"footer":"footer","header":"header"}}