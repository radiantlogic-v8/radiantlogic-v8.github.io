{"componentChunkName":"component---src-templates-base-page-js","path":"/ia/descartes/igrc-platform/pages/16-predicate-functions/","result":{"data":{"pageContent":{"html":"<h1 id=\"predicate-functions\">Predicate functions</h1>\n<p>In many cases we have some attributes that require Boolean values.\nFor example: hidden or disabled<br>\nOf course we can always set this value directly to True or False, in to make these functionalities useful, we will need to test the values of variables, parameters or records.<br>\nBeing able to test those values and to specify the conditions that will lead to True or False allows us to implement useful interfaces.</p>\n<p>For example, we can hide or display a group based on the value of a variable. This variable can be set as the target of a selection widget for instance. This way, we can adjust the interface responding to user interaction.<br>\nThe structures to test values are called Predicates and we have many options depending of the variable type.</p>\n<h2 id=\"stringpredicate\">StringPredicate</h2>\n<p>The string predicate takes as a parameter one string variable,  parameter or record column. The general structure is :</p>\n\n          <codeblockcopytag>StringPredicate ( variable ) {\n    when &quot;value&quot; then True/False\n    when IsEmpty then True/False\n    otherwise then True/False\n}</codeblockcopytag>\n          \n<div class=\"gatsby-highlight\" data-language=\"page\"><pre class=\"language-page\"><code class=\"language-page\">StringPredicate ( variable ) {\n    when &quot;value&quot; then True/False\n    when IsEmpty then True/False\n    otherwise then True/False\n}</code></pre></div>\n<p>We can have several conditions that will be evaluated in order, and we can always end with the keyword otherwise. The return value of a predicate should always be True or False.</p>\n<p>For example:</p>\n\n          <codeblockcopytag>Group {\n    hidden: StringPredicate ( selectedIdentityUid ){\n        when IsEmpty then True\n               otherwise False\n    }\n}</codeblockcopytag>\n          \n<div class=\"gatsby-highlight\" data-language=\"page\"><pre class=\"language-page\"><code class=\"language-page\">Group {\n    hidden: StringPredicate ( selectedIdentityUid ){\n        when IsEmpty then True\n               otherwise False\n    }\n}</code></pre></div>\n<p>This group will be hidden when the variable selectedIdentityUid is empty.</p>\n<h2 id=\"intpredicate\">IntPredicate</h2>\n<p>The int predicate takes as a parameter one integer variable, parameter or record column. The general structure is :</p>\n\n          <codeblockcopytag>IntPredicate ( variable ) {\n    when InvalidInteger then True/False\n    when = 0 then True/False\n    when &lt; 10 then True/False\n    otherwise True/False\n}</codeblockcopytag>\n          \n<div class=\"gatsby-highlight\" data-language=\"page\"><pre class=\"language-page\"><code class=\"language-page\">IntPredicate ( variable ) {\n    when InvalidInteger then True/False\n    when = 0 then True/False\n    when &lt; 10 then True/False\n    otherwise True/False\n}</code></pre></div>\n<p>We can have several conditions that will be evaluated in order, and we can always end with the keyword otherwise. The return value of a predicate should always be True or False.</p>\n<p>For example:</p>\n\n          <codeblockcopytag>Group {\n    hidden: IntPredicate ( selectedIdentityRecorduid ){\n     when InvalidInteger then True\n     when =0 then True\n     otherwise False\n }\n}</codeblockcopytag>\n          \n<div class=\"gatsby-highlight\" data-language=\"page\"><pre class=\"language-page\"><code class=\"language-page\">Group {\n    hidden: IntPredicate ( selectedIdentityRecorduid ){\n     when InvalidInteger then True\n     when =0 then True\n     otherwise False\n }\n}</code></pre></div>\n<p>This group will be hidden when the variable selectedIdentityRecorduid is an invalid integer or equals 0.</p>\n<h2 id=\"booleanpredicate\">BooleanPredicate</h2>\n<p>The boolean predicate takes as a parameter one boolean variable, parameter or record column. The general structure is :</p>\n<p><code class=\"language-text\">BooleanPredicate( variable )</code></p>\n<p>There are no conditions and the result will be the value of the variable.</p>\n<p>For example:</p>\n\n          <codeblockcopytag>Group {\n    hidden: BooleanPredicate ( showMore )\n}</codeblockcopytag>\n          \n<div class=\"gatsby-highlight\" data-language=\"page\"><pre class=\"language-page\"><code class=\"language-page\">Group {\n    hidden: BooleanPredicate ( showMore )\n}</code></pre></div>\n<p>This group will be hidden when the variable showMore is True.</p>\n<h2 id=\"datepredicate\">DatePredicate</h2>\n<p>The date predicate takes as a parameter one Date variable, parameter or record column. The general structure is :</p>\n\n          <codeblockcopytag>DatePredicate ( variable ) {\n    when DateAfter DateLDAP(date) then True/False\n    otherwise True/False\n}</codeblockcopytag>\n          \n<div class=\"gatsby-highlight\" data-language=\"page\"><pre class=\"language-page\"><code class=\"language-page\">DatePredicate ( variable ) {\n    when DateAfter DateLDAP(date) then True/False\n    otherwise True/False\n}</code></pre></div>\n<p>We can have several conditions that will be evaluated in order, and we can always end with the keyword otherwise. The return value of a predicate should always be True or False.</p>\n<p>The supported keywords for when are: DateAfter, DateBefore, DateBetween, TimeAfter, TimeBefore, TimeBetween.</p>\n<p>For example:</p>\n\n          <codeblockcopytag>Group {\n hidden: DatePredicate (date){\n when DateAfter DateLDAP ( &quot;20161231&quot; ) then True\n otherwise False\n }\n}</codeblockcopytag>\n          \n<div class=\"gatsby-highlight\" data-language=\"page\"><pre class=\"language-page\"><code class=\"language-page\">Group {\n hidden: DatePredicate (date){\n when DateAfter DateLDAP ( &quot;20161231&quot; ) then True\n otherwise False\n }\n}</code></pre></div>\n<p>This group will be hidden when the variable date is after the given date 20161231.</p>\n<h2 id=\"multivaluedpredicate\">MultivaluedPredicate</h2>\n<p>The multivalied predicated can test if a value is contained in a multivalued variable.</p>\n<p>For example:</p>\n\n          <codeblockcopytag>Group {\n    hidden: MultivaluedPredicate ( multivaluedVariable contains &quot;value&quot;)\n}</codeblockcopytag>\n          \n<div class=\"gatsby-highlight\" data-language=\"page\"><pre class=\"language-page\"><code class=\"language-page\">Group {\n    hidden: MultivaluedPredicate ( multivaluedVariable contains &quot;value&quot;)\n}</code></pre></div>\n<p>This group will be hidden when \"value\" is part of the variable multivaluedVariable.</p>\n<h2 id=\"featurepredicate\">FeaturePredicate</h2>\n<p>The feature predicate test if the current user has the given feature. Syntax is bit different:</p>\n<p><code class=\"language-text\">FeaturePredicate feature_id</code></p>\n<p>There are no parenthesis and no conditions. It will be True if the user has the given feature.</p>\n<p>For example:</p>\n\n          <codeblockcopytag>Group {\n hidden: Not FeaturePredicate seeMore\n}</codeblockcopytag>\n          \n<div class=\"gatsby-highlight\" data-language=\"page\"><pre class=\"language-page\"><code class=\"language-page\">Group {\n hidden: Not FeaturePredicate seeMore\n}</code></pre></div>\n<p>This group will be hidden if the user has the feature seeMore.</p>\n<h2 id=\"boolean-operations\">Boolean Operations</h2>\n<p>Before taking a look ad the predicate functions, it is important to know that all Predicate functions will return a boolean value (True/False).<br>\nAll boolean values can be transformed to the opposite value using the keyword Not.</p>\n<p>For example:</p>\n\n          <codeblockcopytag>Group {\n hidden: Not FeaturePredicate seeMore\n}</codeblockcopytag>\n          \n<div class=\"gatsby-highlight\" data-language=\"page\"><pre class=\"language-page\"><code class=\"language-page\">Group {\n hidden: Not FeaturePredicate seeMore\n}</code></pre></div>\n<p>This group will be hidden if the user does not has the feature seeMore.</p>\n<p>It is also possible to combine different Predicate functions together using the AndPredicate and OrPredicate, the structures:</p>\n\n          <codeblockcopytag>AndPredicate {\n    Predicate1\n    Predicate 2\n}\n\nOrPredicate {\n    Predicate1\n    Predicate 2\n}</codeblockcopytag>\n          \n<div class=\"gatsby-highlight\" data-language=\"page\"><pre class=\"language-page\"><code class=\"language-page\">AndPredicate {\n    Predicate1\n    Predicate 2\n}\n\nOrPredicate {\n    Predicate1\n    Predicate 2\n}</code></pre></div>\n<p>For example:</p>\n\n          <codeblockcopytag>Group {\n    hidden: OrPredicate {\n BooleanPredicate( variable1 )\n BooleanPredicate( variable2 )\n    }\n}</codeblockcopytag>\n          \n<div class=\"gatsby-highlight\" data-language=\"page\"><pre class=\"language-page\"><code class=\"language-page\">Group {\n    hidden: OrPredicate {\n BooleanPredicate( variable1 )\n BooleanPredicate( variable2 )\n    }\n}</code></pre></div>\n<p>This group will be hidden when either variable1 is True or variable2 is True.</p>","htmlAst":{"type":"root","children":[{"type":"element","tagName":"h1","properties":{"id":"predicate-functions"},"children":[{"type":"text","value":"Predicate functions"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"In many cases we have some attributes that require Boolean values.\nFor example: hidden or disabled"},{"type":"element","tagName":"br","properties":{},"children":[]},{"type":"text","value":"\nOf course we can always set this value directly to True or False, in to make these functionalities useful, we will need to test the values of variables, parameters or records."},{"type":"element","tagName":"br","properties":{},"children":[]},{"type":"text","value":"\nBeing able to test those values and to specify the conditions that will lead to True or False allows us to implement useful interfaces."}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"For example, we can hide or display a group based on the value of a variable. This variable can be set as the target of a selection widget for instance. This way, we can adjust the interface responding to user interaction."},{"type":"element","tagName":"br","properties":{},"children":[]},{"type":"text","value":"\nThe structures to test values are called Predicates and we have many options depending of the variable type."}]},{"type":"text","value":"\n"},{"type":"element","tagName":"h2","properties":{"id":"stringpredicate"},"children":[{"type":"text","value":"StringPredicate"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"The string predicate takes as a parameter one string variable,  parameter or record column. The general structure is :"}]},{"type":"text","value":"\n\n          "},{"type":"element","tagName":"codeblockcopytag","properties":{},"children":[{"type":"text","value":"StringPredicate ( variable ) {\n    when \"value\" then True/False\n    when IsEmpty then True/False\n    otherwise then True/False\n}"}]},{"type":"text","value":"\n          \n"},{"type":"element","tagName":"div","properties":{"className":["gatsby-highlight"],"dataLanguage":"page"},"children":[{"type":"element","tagName":"pre","properties":{"className":["language-page"]},"children":[{"type":"element","tagName":"code","properties":{"className":["language-page"]},"children":[{"type":"text","value":"StringPredicate ( variable ) {\n    when \"value\" then True/False\n    when IsEmpty then True/False\n    otherwise then True/False\n}"}]}]}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"We can have several conditions that will be evaluated in order, and we can always end with the keyword otherwise. The return value of a predicate should always be True or False."}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"For example:"}]},{"type":"text","value":"\n\n          "},{"type":"element","tagName":"codeblockcopytag","properties":{},"children":[{"type":"text","value":"Group {\n    hidden: StringPredicate ( selectedIdentityUid ){\n        when IsEmpty then True\n               otherwise False\n    }\n}"}]},{"type":"text","value":"\n          \n"},{"type":"element","tagName":"div","properties":{"className":["gatsby-highlight"],"dataLanguage":"page"},"children":[{"type":"element","tagName":"pre","properties":{"className":["language-page"]},"children":[{"type":"element","tagName":"code","properties":{"className":["language-page"]},"children":[{"type":"text","value":"Group {\n    hidden: StringPredicate ( selectedIdentityUid ){\n        when IsEmpty then True\n               otherwise False\n    }\n}"}]}]}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"This group will be hidden when the variable selectedIdentityUid is empty."}]},{"type":"text","value":"\n"},{"type":"element","tagName":"h2","properties":{"id":"intpredicate"},"children":[{"type":"text","value":"IntPredicate"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"The int predicate takes as a parameter one integer variable, parameter or record column. The general structure is :"}]},{"type":"text","value":"\n\n          "},{"type":"element","tagName":"codeblockcopytag","properties":{},"children":[{"type":"text","value":"IntPredicate ( variable ) {\n    when InvalidInteger then True/False\n    when = 0 then True/False\n    when < 10 then True/False\n    otherwise True/False\n}"}]},{"type":"text","value":"\n          \n"},{"type":"element","tagName":"div","properties":{"className":["gatsby-highlight"],"dataLanguage":"page"},"children":[{"type":"element","tagName":"pre","properties":{"className":["language-page"]},"children":[{"type":"element","tagName":"code","properties":{"className":["language-page"]},"children":[{"type":"text","value":"IntPredicate ( variable ) {\n    when InvalidInteger then True/False\n    when = 0 then True/False\n    when < 10 then True/False\n    otherwise True/False\n}"}]}]}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"We can have several conditions that will be evaluated in order, and we can always end with the keyword otherwise. The return value of a predicate should always be True or False."}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"For example:"}]},{"type":"text","value":"\n\n          "},{"type":"element","tagName":"codeblockcopytag","properties":{},"children":[{"type":"text","value":"Group {\n    hidden: IntPredicate ( selectedIdentityRecorduid ){\n     when InvalidInteger then True\n     when =0 then True\n     otherwise False\n }\n}"}]},{"type":"text","value":"\n          \n"},{"type":"element","tagName":"div","properties":{"className":["gatsby-highlight"],"dataLanguage":"page"},"children":[{"type":"element","tagName":"pre","properties":{"className":["language-page"]},"children":[{"type":"element","tagName":"code","properties":{"className":["language-page"]},"children":[{"type":"text","value":"Group {\n    hidden: IntPredicate ( selectedIdentityRecorduid ){\n     when InvalidInteger then True\n     when =0 then True\n     otherwise False\n }\n}"}]}]}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"This group will be hidden when the variable selectedIdentityRecorduid is an invalid integer or equals 0."}]},{"type":"text","value":"\n"},{"type":"element","tagName":"h2","properties":{"id":"booleanpredicate"},"children":[{"type":"text","value":"BooleanPredicate"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"The boolean predicate takes as a parameter one boolean variable, parameter or record column. The general structure is :"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"element","tagName":"code","properties":{"className":["language-text"]},"children":[{"type":"text","value":"BooleanPredicate( variable )"}]}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"There are no conditions and the result will be the value of the variable."}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"For example:"}]},{"type":"text","value":"\n\n          "},{"type":"element","tagName":"codeblockcopytag","properties":{},"children":[{"type":"text","value":"Group {\n    hidden: BooleanPredicate ( showMore )\n}"}]},{"type":"text","value":"\n          \n"},{"type":"element","tagName":"div","properties":{"className":["gatsby-highlight"],"dataLanguage":"page"},"children":[{"type":"element","tagName":"pre","properties":{"className":["language-page"]},"children":[{"type":"element","tagName":"code","properties":{"className":["language-page"]},"children":[{"type":"text","value":"Group {\n    hidden: BooleanPredicate ( showMore )\n}"}]}]}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"This group will be hidden when the variable showMore is True."}]},{"type":"text","value":"\n"},{"type":"element","tagName":"h2","properties":{"id":"datepredicate"},"children":[{"type":"text","value":"DatePredicate"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"The date predicate takes as a parameter one Date variable, parameter or record column. The general structure is :"}]},{"type":"text","value":"\n\n          "},{"type":"element","tagName":"codeblockcopytag","properties":{},"children":[{"type":"text","value":"DatePredicate ( variable ) {\n    when DateAfter DateLDAP(date) then True/False\n    otherwise True/False\n}"}]},{"type":"text","value":"\n          \n"},{"type":"element","tagName":"div","properties":{"className":["gatsby-highlight"],"dataLanguage":"page"},"children":[{"type":"element","tagName":"pre","properties":{"className":["language-page"]},"children":[{"type":"element","tagName":"code","properties":{"className":["language-page"]},"children":[{"type":"text","value":"DatePredicate ( variable ) {\n    when DateAfter DateLDAP(date) then True/False\n    otherwise True/False\n}"}]}]}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"We can have several conditions that will be evaluated in order, and we can always end with the keyword otherwise. The return value of a predicate should always be True or False."}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"The supported keywords for when are: DateAfter, DateBefore, DateBetween, TimeAfter, TimeBefore, TimeBetween."}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"For example:"}]},{"type":"text","value":"\n\n          "},{"type":"element","tagName":"codeblockcopytag","properties":{},"children":[{"type":"text","value":"Group {\n hidden: DatePredicate (date){\n when DateAfter DateLDAP ( \"20161231\" ) then True\n otherwise False\n }\n}"}]},{"type":"text","value":"\n          \n"},{"type":"element","tagName":"div","properties":{"className":["gatsby-highlight"],"dataLanguage":"page"},"children":[{"type":"element","tagName":"pre","properties":{"className":["language-page"]},"children":[{"type":"element","tagName":"code","properties":{"className":["language-page"]},"children":[{"type":"text","value":"Group {\n hidden: DatePredicate (date){\n when DateAfter DateLDAP ( \"20161231\" ) then True\n otherwise False\n }\n}"}]}]}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"This group will be hidden when the variable date is after the given date 20161231."}]},{"type":"text","value":"\n"},{"type":"element","tagName":"h2","properties":{"id":"multivaluedpredicate"},"children":[{"type":"text","value":"MultivaluedPredicate"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"The multivalied predicated can test if a value is contained in a multivalued variable."}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"For example:"}]},{"type":"text","value":"\n\n          "},{"type":"element","tagName":"codeblockcopytag","properties":{},"children":[{"type":"text","value":"Group {\n    hidden: MultivaluedPredicate ( multivaluedVariable contains \"value\")\n}"}]},{"type":"text","value":"\n          \n"},{"type":"element","tagName":"div","properties":{"className":["gatsby-highlight"],"dataLanguage":"page"},"children":[{"type":"element","tagName":"pre","properties":{"className":["language-page"]},"children":[{"type":"element","tagName":"code","properties":{"className":["language-page"]},"children":[{"type":"text","value":"Group {\n    hidden: MultivaluedPredicate ( multivaluedVariable contains \"value\")\n}"}]}]}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"This group will be hidden when \"value\" is part of the variable multivaluedVariable."}]},{"type":"text","value":"\n"},{"type":"element","tagName":"h2","properties":{"id":"featurepredicate"},"children":[{"type":"text","value":"FeaturePredicate"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"The feature predicate test if the current user has the given feature. Syntax is bit different:"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"element","tagName":"code","properties":{"className":["language-text"]},"children":[{"type":"text","value":"FeaturePredicate feature_id"}]}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"There are no parenthesis and no conditions. It will be True if the user has the given feature."}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"For example:"}]},{"type":"text","value":"\n\n          "},{"type":"element","tagName":"codeblockcopytag","properties":{},"children":[{"type":"text","value":"Group {\n hidden: Not FeaturePredicate seeMore\n}"}]},{"type":"text","value":"\n          \n"},{"type":"element","tagName":"div","properties":{"className":["gatsby-highlight"],"dataLanguage":"page"},"children":[{"type":"element","tagName":"pre","properties":{"className":["language-page"]},"children":[{"type":"element","tagName":"code","properties":{"className":["language-page"]},"children":[{"type":"text","value":"Group {\n hidden: Not FeaturePredicate seeMore\n}"}]}]}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"This group will be hidden if the user has the feature seeMore."}]},{"type":"text","value":"\n"},{"type":"element","tagName":"h2","properties":{"id":"boolean-operations"},"children":[{"type":"text","value":"Boolean Operations"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Before taking a look ad the predicate functions, it is important to know that all Predicate functions will return a boolean value (True/False)."},{"type":"element","tagName":"br","properties":{},"children":[]},{"type":"text","value":"\nAll boolean values can be transformed to the opposite value using the keyword Not."}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"For example:"}]},{"type":"text","value":"\n\n          "},{"type":"element","tagName":"codeblockcopytag","properties":{},"children":[{"type":"text","value":"Group {\n hidden: Not FeaturePredicate seeMore\n}"}]},{"type":"text","value":"\n          \n"},{"type":"element","tagName":"div","properties":{"className":["gatsby-highlight"],"dataLanguage":"page"},"children":[{"type":"element","tagName":"pre","properties":{"className":["language-page"]},"children":[{"type":"element","tagName":"code","properties":{"className":["language-page"]},"children":[{"type":"text","value":"Group {\n hidden: Not FeaturePredicate seeMore\n}"}]}]}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"This group will be hidden if the user does not has the feature seeMore."}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"It is also possible to combine different Predicate functions together using the AndPredicate and OrPredicate, the structures:"}]},{"type":"text","value":"\n\n          "},{"type":"element","tagName":"codeblockcopytag","properties":{},"children":[{"type":"text","value":"AndPredicate {\n    Predicate1\n    Predicate 2\n}\n\nOrPredicate {\n    Predicate1\n    Predicate 2\n}"}]},{"type":"text","value":"\n          \n"},{"type":"element","tagName":"div","properties":{"className":["gatsby-highlight"],"dataLanguage":"page"},"children":[{"type":"element","tagName":"pre","properties":{"className":["language-page"]},"children":[{"type":"element","tagName":"code","properties":{"className":["language-page"]},"children":[{"type":"text","value":"AndPredicate {\n    Predicate1\n    Predicate 2\n}\n\nOrPredicate {\n    Predicate1\n    Predicate 2\n}"}]}]}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"For example:"}]},{"type":"text","value":"\n\n          "},{"type":"element","tagName":"codeblockcopytag","properties":{},"children":[{"type":"text","value":"Group {\n    hidden: OrPredicate {\n BooleanPredicate( variable1 )\n BooleanPredicate( variable2 )\n    }\n}"}]},{"type":"text","value":"\n          \n"},{"type":"element","tagName":"div","properties":{"className":["gatsby-highlight"],"dataLanguage":"page"},"children":[{"type":"element","tagName":"pre","properties":{"className":["language-page"]},"children":[{"type":"element","tagName":"code","properties":{"className":["language-page"]},"children":[{"type":"text","value":"Group {\n    hidden: OrPredicate {\n BooleanPredicate( variable1 )\n BooleanPredicate( variable2 )\n    }\n}"}]}]}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"This group will be hidden when either variable1 is True or variable2 is True."}]}],"data":{"quirksMode":false}},"fileAbsolutePath":"/home/runner/work/developer-site/developer-site/.cache/gatsby-source-git/ia/descartes/documentation/igrc-platform/pages/16-predicate-functions.md","frontmatter":{"title":"Predicate Functions"},"headings":[{"id":"predicate-functions","value":"Predicate functions","depth":1},{"id":"stringpredicate","value":"StringPredicate","depth":2},{"id":"intpredicate","value":"IntPredicate","depth":2},{"id":"booleanpredicate","value":"BooleanPredicate","depth":2},{"id":"datepredicate","value":"DatePredicate","depth":2},{"id":"multivaluedpredicate","value":"MultivaluedPredicate","depth":2},{"id":"featurepredicate","value":"FeaturePredicate","depth":2},{"id":"boolean-operations","value":"Boolean Operations","depth":2}]},"toc":null},"pageContext":{"urlPrefix":"ia/descartes","absolutePath":"/home/runner/work/developer-site/developer-site/.cache/gatsby-source-git/ia/descartes/documentation/igrc-platform/pages/16-predicate-functions.md","tocRegex":"/(ia/)(descartes/)?(documentation/)?(igrc-platform/)?(pages/)?(16-predicate-functions.md/)?(TOC.md)/ig","versions":[{"name":"descartes","displayName":"Descartes"}],"currentRepo":{"name":"ia","displayName":"Identity Analytics","description":"This guide provides a high-level overview of Identity Analytics. This documentation includes the user guides, integration guides for Identity Analytics along with the different modules included.","links":[{"text":"SEE DEVELOPER DOCUMENTATION","href":"/ia/descartes/#1"}],"remote":"https://github.com/radiantlogic-v8/documentation-ia-product.git","patterns":["home-pages/**","documentation/**"],"deployBranches":[{"name":"descartes","displayName":"Descartes"}]},"currentRepoWebLink":"https://github.com/radiantlogic-v8/documentation-ia-product","currentVersion":{"name":"descartes","displayName":"Descartes"},"title":"Predicate Functions","description":"Predicate Functions","tocForCurrentSection":{"textElement":"Igrc platform","href":null,"children":[{"textElement":"Add ons","href":"igrc-platform/add-ons/","children":[{"textElement":"Add on creation","href":"igrc-platform/add-ons/add-on-creation","children":[]},{"textElement":"Add on migration","href":"igrc-platform/add-ons/add-on-migration","children":[]}]},{"textElement":"Audit logs","href":"igrc-platform/audit-logs/","children":[{"textElement":"Data collection configuration","href":"igrc-platform/audit-logs/01-data-collection-configuration","children":[]},{"textElement":"Auditlog execution plan","href":"igrc-platform/audit-logs/02-auditlog-execution-plan","children":[]},{"textElement":"Database configuration","href":"igrc-platform/audit-logs/03-database-configuration","children":[]},{"textElement":"Usage","href":"igrc-platform/audit-logs/04-usage","children":[]}]},{"textElement":"Audit rules","href":"igrc-platform/audit-rules/","children":[{"textElement":"Search dimensions","href":"igrc-platform/audit-rules/01-search-dimensions","children":[]},{"textElement":"Advanced concepts","href":"igrc-platform/audit-rules/02-advanced-concepts","children":[]},{"textElement":"Time management","href":"igrc-platform/audit-rules/03-time-management","children":[]},{"textElement":"Best practices","href":"igrc-platform/audit-rules/04-best-practices","children":[]}]},{"textElement":"Business view","href":"igrc-platform/business-view/","children":[{"textElement":"Main concepts","href":"igrc-platform/business-view/01-main-concepts","children":[]},{"textElement":"Business view editor","href":"igrc-platform/business-view/02-business-view-editor","children":[]},{"textElement":"Common features","href":"igrc-platform/business-view/03-common-features","children":[]},{"textElement":"Components","href":"igrc-platform/business-view/04-components","children":[]},{"textElement":"Filter components","href":"igrc-platform/business-view/05-filter-components","children":[]},{"textElement":"Debugging","href":"igrc-platform/business-view/06-debugging","children":[]},{"textElement":"Optimization","href":"igrc-platform/business-view/07-optimization","children":[]}]},{"textElement":"Collect wizard","href":"igrc-platform/collect-wizard/","children":[{"textElement":"Discorvery mapping","href":"igrc-platform/collect-wizard/01-discorvery-mapping","children":[]},{"textElement":"Application model editor","href":"igrc-platform/collect-wizard/02-application-model-editor","children":[]},{"textElement":"Templates","href":"igrc-platform/collect-wizard/03-templates","children":[]}]},{"textElement":"Collector","href":"igrc-platform/collector/","children":[{"textElement":"Engine states","href":"igrc-platform/collector/01-engine-states","children":[]},{"textElement":"Data flow","href":"igrc-platform/collector/02-data-flow","children":[]},{"textElement":"Logs","href":"igrc-platform/collector/03-logs","children":[]},{"textElement":"Components","href":"igrc-platform/collector/04-components/","children":[{"textElement":"Filters","href":"igrc-platform/collector/04-components/filters","children":[]},{"textElement":"Sources","href":"igrc-platform/collector/04-components/sources","children":[]},{"textElement":"Target","href":"igrc-platform/collector/04-components/target","children":[]}]},{"textElement":"Macros and scripts","href":"igrc-platform/collector/05-macros-and-scripts","children":[]},{"textElement":"Sql filtering","href":"igrc-platform/collector/06-sql-filtering","children":[]}]},{"textElement":"Controls","href":"igrc-platform/controls/","children":[{"textElement":"Permission impact","href":"igrc-platform/controls/01-permission-impact","children":[]},{"textElement":"Theoretical rights","href":"igrc-platform/controls/02-theoretical-rights","children":[]},{"textElement":"Default tag","href":"igrc-platform/controls/03-default-tag","children":[]}]},{"textElement":"Dashboards","href":"igrc-platform/dashboards/","children":[{"textElement":"Components","href":"igrc-platform/dashboards/01-components","children":[]},{"textElement":"Publication","href":"igrc-platform/dashboards/02-publication","children":[]},{"textElement":"Advanced configation","href":"igrc-platform/dashboards/03-advanced-configation","children":[]},{"textElement":"Customization","href":"igrc-platform/dashboards/04-customization","children":[]}]},{"textElement":"Data discovery","href":"igrc-platform/data-discovery/","children":[{"textElement":"Basic concepts","href":"igrc-platform/data-discovery/01-basic-concepts","children":[]},{"textElement":"Advanced concepts","href":"igrc-platform/data-discovery/02-advanced-concepts","children":[]}]},{"textElement":"Getting started","href":"igrc-platform/getting-started/","children":[{"textElement":"Timeslots","href":"igrc-platform/getting-started/01-timeslots","children":[]},{"textElement":"Execution plan","href":"igrc-platform/getting-started/02-execution-plan","children":[]},{"textElement":"Default project","href":"igrc-platform/getting-started/03-default-project","children":[]},{"textElement":"Creation configuration","href":"igrc-platform/getting-started/04-creation-configuration","children":[]},{"textElement":"Studio editors","href":"igrc-platform/getting-started/05-studio-editors","children":[]},{"textElement":"Project archives","href":"igrc-platform/getting-started/06-project-archives","children":[]},{"textElement":"Tutorial","href":"igrc-platform/getting-started/07-tutorial","children":[]}]},{"textElement":"Installation and deployment","href":"igrc-platform/installation-and-deployment/","children":[{"textElement":"Batch configuration and usage","href":"igrc-platform/installation-and-deployment/02-batch-configuration-and-usage","children":[]},{"textElement":"Brainwaves web portal","href":"igrc-platform/installation-and-deployment/03-brainwaves-web-portal/","children":[{"textElement":"Deployment","href":"igrc-platform/installation-and-deployment/03-brainwaves-web-portal/01-deployment","children":[]},{"textElement":"Parametrization","href":"igrc-platform/installation-and-deployment/03-brainwaves-web-portal/02-parametrization/","children":[{"textElement":"Basic","href":"igrc-platform/installation-and-deployment/03-brainwaves-web-portal/02-parametrization/01-basic","children":[]},{"textElement":"Ldap","href":"igrc-platform/installation-and-deployment/03-brainwaves-web-portal/02-parametrization/02-ldap","children":[]},{"textElement":"Saml","href":"igrc-platform/installation-and-deployment/03-brainwaves-web-portal/02-parametrization/03-saml/","children":[{"textElement":"Adfs","href":"igrc-platform/installation-and-deployment/03-brainwaves-web-portal/02-parametrization/03-saml/adfs","children":[]},{"textElement":"Gsuite","href":"igrc-platform/installation-and-deployment/03-brainwaves-web-portal/02-parametrization/03-saml/gsuite","children":[]},{"textElement":"Inwebo","href":"igrc-platform/installation-and-deployment/03-brainwaves-web-portal/02-parametrization/03-saml/inwebo","children":[]},{"textElement":"Okta","href":"igrc-platform/installation-and-deployment/03-brainwaves-web-portal/02-parametrization/03-saml/okta","children":[]},{"textElement":"Saml authenticators properties","href":"igrc-platform/installation-and-deployment/03-brainwaves-web-portal/02-parametrization/03-saml/saml-authenticators-properties","children":[]}]},{"textElement":"Http headers","href":"igrc-platform/installation-and-deployment/03-brainwaves-web-portal/02-parametrization/04-http-headers","children":[]}]},{"textElement":"Diagnostic","href":"igrc-platform/installation-and-deployment/03-brainwaves-web-portal/03-diagnostic","children":[]},{"textElement":"Troubleshooting","href":"igrc-platform/installation-and-deployment/03-brainwaves-web-portal/04-troubleshooting","children":[]},{"textElement":"Web portal theme customization","href":"igrc-platform/installation-and-deployment/03-brainwaves-web-portal/05-web-portal-theme-customization/","children":[{"textElement":"Level 1","href":"igrc-platform/installation-and-deployment/03-brainwaves-web-portal/05-web-portal-theme-customization/level-1","children":[]},{"textElement":"Level 2 customization via ss","href":"igrc-platform/installation-and-deployment/03-brainwaves-web-portal/05-web-portal-theme-customization/level-2-customization-via-ss","children":[]},{"textElement":"Level 3 customization via css with resources","href":"igrc-platform/installation-and-deployment/03-brainwaves-web-portal/05-web-portal-theme-customization/level-3-customization-via-css-with-resources","children":[]},{"textElement":"Level 4 customization via scripting","href":"igrc-platform/installation-and-deployment/03-brainwaves-web-portal/05-web-portal-theme-customization/level-4-customization-via-scripting","children":[]}]},{"textElement":"Dedicated instance","href":"igrc-platform/installation-and-deployment/03-brainwaves-web-portal/06-dedicated-instance","children":[]}]},{"textElement":"Brainwave grc certified environments","href":"igrc-platform/installation-and-deployment/04-brainwave-grc-certified-environments","children":[]},{"textElement":"Legacy property files","href":"igrc-platform/installation-and-deployment/05-legacy-property-files","children":[]},{"textElement":"Ssh git connection","href":"igrc-platform/installation-and-deployment/06-ssh-git-connection","children":[]},{"textElement":"Database","href":"igrc-platform/installation-and-deployment/07-database/","children":[{"textElement":"Microsoft integrated authenitcation","href":"igrc-platform/installation-and-deployment/07-database/02-Microsoft-integrated-authenitcation","children":[]},{"textElement":"Index management","href":"igrc-platform/installation-and-deployment/07-database/03-index-management","children":[]},{"textElement":"Schema 35 upgrade procedure","href":"igrc-platform/installation-and-deployment/07-database/04-schema-35-upgrade-procedure/","children":[{"textElement":"Sqlserver","href":"igrc-platform/installation-and-deployment/07-database/04-schema-35-upgrade-procedure/01-sqlserver/","children":[{"textElement":"Large migrations","href":"igrc-platform/installation-and-deployment/07-database/04-schema-35-upgrade-procedure/01-sqlserver/large-migrations","children":[]}]},{"textElement":"Postgresql","href":"igrc-platform/installation-and-deployment/07-database/04-schema-35-upgrade-procedure/02-postgresql","children":[]},{"textElement":"Oracle","href":"igrc-platform/installation-and-deployment/07-database/04-schema-35-upgrade-procedure/03-oracle","children":[]}]},{"textElement":"Clean temporary iap metadata","href":"igrc-platform/installation-and-deployment/07-database/05-clean-temporary-iap-metadata/","children":[]}]}]},{"textElement":"Manager policy","href":"igrc-platform/manager-policy/","children":[]},{"textElement":"Metadata","href":"igrc-platform/metadata/","children":[{"textElement":"Concept","href":"igrc-platform/metadata/01-concept","children":[]},{"textElement":"Use cases","href":"igrc-platform/metadata/02-use-cases","children":[]},{"textElement":"Life cycle","href":"igrc-platform/metadata/03-life-cycle","children":[]},{"textElement":"Editor","href":"igrc-platform/metadata/04-editor","children":[]},{"textElement":"Collect","href":"igrc-platform/metadata/05-collect","children":[]},{"textElement":"Compute","href":"igrc-platform/metadata/06-compute","children":[]},{"textElement":"Workflow","href":"igrc-platform/metadata/07-workflow","children":[]},{"textElement":"Rules views","href":"igrc-platform/metadata/08-rules-views","children":[]},{"textElement":"Review","href":"igrc-platform/metadata/09-review","children":[]},{"textElement":"Examples","href":"igrc-platform/metadata/10-examples","children":[]}]},{"textElement":"Notification rules","href":"igrc-platform/notification-rules/","children":[{"textElement":"Using the editor","href":"igrc-platform/notification-rules/01-using-the-editor","children":[]},{"textElement":"Selecting recipients","href":"igrc-platform/notification-rules/02-selecting-recipients","children":[]},{"textElement":"Macros","href":"igrc-platform/notification-rules/03-macros","children":[]},{"textElement":"Reports as attachments","href":"igrc-platform/notification-rules/04-reports-as-attachments","children":[]},{"textElement":"Notification batch mode","href":"igrc-platform/notification-rules/05-notification-batch-mode","children":[]},{"textElement":"Internationalization of notification rules","href":"igrc-platform/notification-rules/06-internationalization-of-notification-rules","children":[]}]},{"textElement":"Pages","href":"igrc-platform/pages/","children":[{"textElement":"Using the wizard","href":"igrc-platform/pages/01-using-the-wizard","children":[]},{"textElement":"Home pages","href":"igrc-platform/pages/02-home-pages","children":[]},{"textElement":"Parameters","href":"igrc-platform/pages/03-parameters","children":[]},{"textElement":"Data binding","href":"igrc-platform/pages/04-data-binding","children":[]},{"textElement":"Advanced data binding","href":"igrc-platform/pages/05-advanced-data-binding","children":[]},{"textElement":"Variables","href":"igrc-platform/pages/06-variables","children":[]},{"textElement":"Widgets","href":"igrc-platform/pages/07-widgets","children":[]},{"textElement":"Containers widgets","href":"igrc-platform/pages/08-containers-widgets","children":[]},{"textElement":"Display widgets","href":"igrc-platform/pages/09-display-widgets","children":[]},{"textElement":"Selection widgets","href":"igrc-platform/pages/10-selection-widgets","children":[]},{"textElement":"Edition widgets","href":"igrc-platform/pages/11-edition-widgets","children":[]},{"textElement":"Chart widgets","href":"igrc-platform/pages/12-chart-widgets","children":[]},{"textElement":"Iterable widgets","href":"igrc-platform/pages/13-iterable-widgets","children":[]},{"textElement":"Special widgets","href":"igrc-platform/pages/14-special-widgets","children":[]},{"textElement":"Reports in pages","href":"igrc-platform/pages/15-reports-in-pages","children":[]},{"textElement":"Predicate functions","href":"igrc-platform/pages/16-predicate-functions","children":[]},{"textElement":"Mapping functions","href":"igrc-platform/pages/17-mapping-functions","children":[]},{"textElement":"Transform functions","href":"igrc-platform/pages/18-transform-functions","children":[]},{"textElement":"Dialog boxes","href":"igrc-platform/pages/19-dialog-boxes","children":[]},{"textElement":"Events and actions","href":"igrc-platform/pages/20-events-and-actions","children":[]},{"textElement":"Features and roles","href":"igrc-platform/pages/21-features-and-roles/","children":[{"textElement":"Label localisation","href":"igrc-platform/pages/21-features-and-roles/label-localisation","children":[]}]},{"textElement":"Advanced concepts","href":"igrc-platform/pages/22-advanced-concepts","children":[]},{"textElement":"Page fragments","href":"igrc-platform/pages/23-page-fragments","children":[]},{"textElement":"Cross table","href":"igrc-platform/pages/24-cross-table","children":[]},{"textElement":"Internationalisation","href":"igrc-platform/pages/25-internationalisation","children":[]},{"textElement":"Accessibility","href":"igrc-platform/pages/26-accessibility","children":[]},{"textElement":"Images and colors","href":"igrc-platform/pages/27-images-and-colors","children":[]},{"textElement":"Webportal features","href":"igrc-platform/pages/28-webportal-features/","children":[{"textElement":"Detail pages","href":"igrc-platform/pages/28-webportal-features/01-detail-pages","children":[]},{"textElement":"General menu","href":"igrc-platform/pages/28-webportal-features/02-general-menu","children":[]},{"textElement":"Search pages","href":"igrc-platform/pages/28-webportal-features/03-search-pages","children":[]},{"textElement":"Analytics section","href":"igrc-platform/pages/28-webportal-features/04-analytics-section","children":[]}]}]},{"textElement":"Reconciliation","href":"igrc-platform/reconciliation/","children":[{"textElement":"Reconciliation policies","href":"igrc-platform/reconciliation/01-reconciliation-policies","children":[]}]},{"textElement":"Reports","href":"igrc-platform/reports/","children":[{"textElement":"Advanced concepts","href":"igrc-platform/reports/01-advanced-concepts","children":[]},{"textElement":"Best practice","href":"igrc-platform/reports/02-best-practice","children":[]}]},{"textElement":"Review wizard","href":"igrc-platform/review-wizard/","children":[{"textElement":"Generation","href":"igrc-platform/review-wizard/01-generation","children":[]},{"textElement":"Structure","href":"igrc-platform/review-wizard/02-structure","children":[]},{"textElement":"Editor","href":"igrc-platform/review-wizard/03-editor","children":[]},{"textElement":"Build","href":"igrc-platform/review-wizard/04-build","children":[]},{"textElement":"Migration","href":"igrc-platform/review-wizard/05-migration","children":[]}]},{"textElement":"Silos","href":"igrc-platform/silos/","children":[]},{"textElement":"Smart search","href":"igrc-platform/smart-search/","children":[]},{"textElement":"Technical configuration","href":"igrc-platform/technical-configuration/","children":[]},{"textElement":"Theoretical rights","href":"igrc-platform/theoretical-rights/","children":[]},{"textElement":"Timeslots and execution plan","href":"igrc-platform/timeslots-and-execution-plan/","children":[{"textElement":"Collect and silos","href":"igrc-platform/timeslots-and-execution-plan/01-collect-and-silos/","children":[{"textElement":"Dependances","href":"igrc-platform/timeslots-and-execution-plan/01-collect-and-silos/01-dependances","children":[]},{"textElement":"Silo execution plan","href":"igrc-platform/timeslots-and-execution-plan/01-collect-and-silos/02-silo-execution-plan","children":[]},{"textElement":"Iteration","href":"igrc-platform/timeslots-and-execution-plan/01-collect-and-silos/03-iteration","children":[]},{"textElement":"Dynamically change silos name","href":"igrc-platform/timeslots-and-execution-plan/01-collect-and-silos/04-dynamically-change-silos-name","children":[]},{"textElement":"Using silo contants","href":"igrc-platform/timeslots-and-execution-plan/01-collect-and-silos/05-using-silo-contants","children":[]},{"textElement":"Using silos within the ledger","href":"igrc-platform/timeslots-and-execution-plan/01-collect-and-silos/06-using-silos-within-the-ledger","children":[]},{"textElement":"Input file validation","href":"igrc-platform/timeslots-and-execution-plan/01-collect-and-silos/07-input-file-validation","children":[]}]},{"textElement":"Purge of timeslots","href":"igrc-platform/timeslots-and-execution-plan/02-purge-of-timeslots","children":[]}]},{"textElement":"Views","href":"igrc-platform/views/","children":[{"textElement":"Managing attributes","href":"igrc-platform/views/01-managing-attributes","children":[]},{"textElement":"Sorting the results","href":"igrc-platform/views/02-sorting-the-results","children":[]},{"textElement":"Configuring joins","href":"igrc-platform/views/03-configuring-joins","children":[]},{"textElement":"Filtering results","href":"igrc-platform/views/04-filtering-results","children":[]},{"textElement":"Advanced concepts","href":"igrc-platform/views/05-advanced-concepts","children":[]},{"textElement":"Tips and best practice","href":"igrc-platform/views/06-tips-and-best-practice","children":[]},{"textElement":"Standard views","href":"igrc-platform/views/07-standard-views","children":[]}]},{"textElement":"Workflow","href":"igrc-platform/workflow/","children":[{"textElement":"Workflow configuration","href":"igrc-platform/workflow/01-workflow-configuration","children":[]},{"textElement":"Workflow editor user guide","href":"igrc-platform/workflow/02-workflow-editor-user-guide","children":[]},{"textElement":"Roles","href":"igrc-platform/workflow/03-roles","children":[]},{"textElement":"Variables","href":"igrc-platform/workflow/04-variables","children":[]},{"textElement":"Manual tasks","href":"igrc-platform/workflow/05-manual-tasks","children":[]},{"textElement":"Iterations and subprocesses","href":"igrc-platform/workflow/06-iterations-and-subprocesses","children":[]},{"textElement":"Email notifications","href":"igrc-platform/workflow/07-email-notifications","children":[]},{"textElement":"Time management","href":"igrc-platform/workflow/08-time-management","children":[]},{"textElement":"Tickets and workflows","href":"igrc-platform/workflow/09-tickets-and-workflows","children":[]},{"textElement":"Tickets","href":"igrc-platform/workflow/10-tickets","children":[]},{"textElement":"Components","href":"igrc-platform/workflow/11-components","children":[]},{"textElement":"Debugging","href":"igrc-platform/workflow/12-debugging","children":[]},{"textElement":"Exception management","href":"igrc-platform/workflow/13-exception-management","children":[]},{"textElement":"Workflows and timeslots","href":"igrc-platform/workflow/14-workflows-and-timeslots","children":[]},{"textElement":"Running campaigns","href":"igrc-platform/workflow/15-running-campaigns","children":[]}]}]}}},"staticQueryHashes":["63159454"],"slicesMap":{"footer":"footer","header":"header"}}