{"version":3,"file":"component---src-templates-404-js-095822805066e2055252.js","mappings":"sKAWA,SAASA,EAAGC,GAAoC,IAADC,EAAAC,EAAA,IAAlC,YAAEC,EAAW,MAAEC,EAAK,SAAEC,GAAUL,EAC3C,MAAM,KAAEM,IAASC,EAAAA,EAAAA,gBAAe,YAc1BC,EAAkBL,GAAeG,EAAKG,aAAaN,YACnDO,EAAgC,QAApBT,EAAGK,EAAKG,oBAAY,IAAAR,OAAA,EAAjBA,EAAmBG,MAExC,OACEO,EAAAA,cAAAA,EAAAA,SAAA,KACEA,EAAAA,cAAA,aACGD,EAAkBN,EAAK,KAAIA,GAAS,KAAG,IAAIM,EAAiBN,GAE/DO,EAAAA,cAAA,QAAMC,KAAK,cAAcC,QAASL,IAClCG,EAAAA,cAAA,QAAMG,SAAS,WAAWD,QAAST,IACnCO,EAAAA,cAAA,QAAMG,SAAS,iBAAiBD,QAASL,IACzCG,EAAAA,cAAA,QAAMG,SAAS,UAAUD,QAAQ,YACjCF,EAAAA,cAAA,QAAMC,KAAK,eAAeC,QAAQ,YAClCF,EAAAA,cAAA,QAAMC,KAAK,kBAAkBC,SAA0B,QAAjBX,EAAAI,EAAKG,oBAAY,IAAAP,OAAA,EAAjBA,EAAmBa,SAAM,KAC/DJ,EAAAA,cAAA,QAAMC,KAAK,gBAAgBC,QAAST,IACpCO,EAAAA,cAAA,QAAMC,KAAK,sBAAsBC,QAASL,IACzCH,EAGP,CAEAN,EAAIiB,aAAe,CACjBb,YAAY,IAQd,K,0IC/CA,MAkCac,EAAOA,IAAMN,EAAAA,cAACZ,EAAAA,EAAG,CAACK,MAAM,mBAarC,UA/CqBJ,IAAyB,IAAxB,KAAEkB,EAAI,SAAEC,GAAUnB,EACtC,MAAMoB,GAAWC,EAAAA,EAAAA,YAAWC,EAAAA,IAU5B,OARAC,EAAAA,EAAAA,YAAU,KACRH,EAAS,CAAEI,KAAM,8BAA+BC,QAASN,IACzDC,EAAS,CACPI,KAAM,0BACNC,QAAS,CAAEN,SAAUA,IACrB,GACD,CAACA,IAGFR,EAAAA,cAACe,EAAAA,EAAM,CAACC,YAAaT,EAAKU,QAAST,SAAUA,GAC3CR,EAAAA,cAACkB,EAAAA,GAAG,CACFC,aAAa,aACbC,EAAG,CAAEC,KAAM,EAAGC,GAAI,EAAGC,GAAI,IACzBC,GAAI,CAAEH,KAAM,EAAGC,GAAI,GAAIC,GAAI,KAE3BvB,EAAAA,cAACkB,EAAAA,GAAG,KACFlB,EAAAA,cAACyB,EAAAA,EAAO,CAACC,GAAG,KAAKC,KAAK,KAAKC,MAAM,UAC9B,IAAI,cAIT5B,EAAAA,cAACkB,EAAAA,GAAG,KACFlB,EAAAA,cAAC6B,EAAAA,EAAI,CAACC,SAAS,MAAK,+DAKjB,C,sHC9BTL,GAAU,QAAW,SAAkBM,EAAOC,GAChD,MAAMC,GAAS,QAAe,UAAWF,IACnC,UAAEG,KAAcC,IAAS,QAAiBJ,GAChD,OAAuB,IAAAK,KACrB,IAAOC,GACP,CACEL,MACAE,WAAW,IAAAI,IAAG,iBAAkBP,EAAMG,cACnCC,EACHI,MAAON,GAGb,IACAR,EAAQe,YAAc,S","sources":["webpack://radiant-logic-documentation/./src/components/seo.js","webpack://radiant-logic-documentation/./src/templates/404.js","webpack://radiant-logic-documentation/./node_modules/@chakra-ui/layout/dist/chunk-B2MGPQRJ.mjs"],"sourcesContent":["/**\n * SEO component that queries for data with\n *  Gatsby's useStaticQuery React hook\n *\n * See: https://www.gatsbyjs.com/docs/use-static-query/\n */\n\nimport * as React from \"react\"\nimport PropTypes from \"prop-types\"\nimport { useStaticQuery, graphql } from \"gatsby\"\n\nfunction Seo({ description, title, children }) {\n  const { site } = useStaticQuery(\n    graphql`\n      query {\n        site {\n          siteMetadata {\n            title\n            description\n            author\n          }\n        }\n      }\n    `\n  )\n\n  const metaDescription = description || site.siteMetadata.description\n  const defaultTitle = site.siteMetadata?.title\n\n  return (\n    <>\n      <title>\n        {defaultTitle ? `${title} ${title && \"|\"} ${defaultTitle}` : title}\n      </title>\n      <meta name=\"description\" content={metaDescription} />\n      <meta property=\"og:title\" content={title} />\n      <meta property=\"og:description\" content={metaDescription} />\n      <meta property=\"og:type\" content=\"website\" />\n      <meta name=\"twitter:card\" content=\"summary\" />\n      <meta name=\"twitter:creator\" content={site.siteMetadata?.author || ``} />\n      <meta name=\"twitter:title\" content={title} />\n      <meta name=\"twitter:description\" content={metaDescription} />\n      {children}\n    </>\n  )\n}\n\nSeo.defaultProps = {\n  description: ``,\n}\n\nSeo.propTypes = {\n  description: PropTypes.string,\n  title: PropTypes.string.isRequired,\n}\n\nexport default Seo\n","import * as React from \"react\"\n\nimport Layout from \"../components/layout\"\nimport Seo from \"../components/seo\"\nimport { Box, Heading, Text } from \"@chakra-ui/react\"\nimport { useContext, useEffect } from \"react\"\nimport { GlobalDispatchContext } from \"../context/globalContextProvider\"\nimport { graphql } from \"gatsby\"\n\nconst NotFoundPage = ({ data, location }) => {\n  const dispatch = useContext(GlobalDispatchContext)\n\n  useEffect(() => {\n    dispatch({ type: \"UPDATE_SELECTED_API_VERSION\", payload: location })\n    dispatch({\n      type: \"UPDATE_CURRENT_LOCATION\",\n      payload: { location: location },\n    })\n  }, [location])\n\n  return (\n    <Layout tocContents={data.rootToc} location={location}>\n      <Box\n        alignContent=\"flex-start\"\n        p={{ base: 4, md: 8, lg: 10 }}\n        mt={{ base: 8, md: 10, lg: 12 }}\n      >\n        <Box>\n          <Heading as=\"h1\" size=\"xl\" color=\"rlBlue\">\n            {\" \"}\n            Not Found\n          </Heading>\n        </Box>\n        <Box>\n          <Text fontSize=\"lg\">\n            Sorry, but you are looking for something that isn&#39;t here.\n          </Text>\n        </Box>\n      </Box>\n    </Layout>\n  )\n}\n\nexport const Head = () => <Seo title=\"404: Not Found\" />\n\nexport const query = graphql`\n  query ($rootTocRegex: String!) {\n    rootToc: markdownRemark(fileAbsolutePath: { regex: $rootTocRegex }) {\n      fileAbsolutePath\n      frontmatter {\n        title\n      }\n      htmlAst\n    }\n  }\n`\nexport default NotFoundPage\n","// src/heading.tsx\nimport {\n  chakra,\n  forwardRef,\n  omitThemingProps,\n  useStyleConfig\n} from \"@chakra-ui/system\";\nimport { cx } from \"@chakra-ui/shared-utils\";\nimport { jsx } from \"react/jsx-runtime\";\nvar Heading = forwardRef(function Heading2(props, ref) {\n  const styles = useStyleConfig(\"Heading\", props);\n  const { className, ...rest } = omitThemingProps(props);\n  return /* @__PURE__ */ jsx(\n    chakra.h2,\n    {\n      ref,\n      className: cx(\"chakra-heading\", props.className),\n      ...rest,\n      __css: styles\n    }\n  );\n});\nHeading.displayName = \"Heading\";\n\nexport {\n  Heading\n};\n"],"names":["Seo","_ref","_site$siteMetadata","_site$siteMetadata2","description","title","children","site","useStaticQuery","metaDescription","siteMetadata","defaultTitle","React","name","content","property","author","defaultProps","Head","data","location","dispatch","useContext","GlobalDispatchContext","useEffect","type","payload","Layout","tocContents","rootToc","Box","alignContent","p","base","md","lg","mt","Heading","as","size","color","Text","fontSize","props","ref","styles","className","rest","jsx","h2","cx","__css","displayName"],"sourceRoot":""}