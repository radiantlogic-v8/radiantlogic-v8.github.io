{"version":3,"file":"component---src-templates-javadoc-page-js-a6895ab9300246a36a30.js","mappings":"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","sources":["webpack://radiant-logic-documentation/./node_modules/core-js/internals/get-substitution.js","webpack://radiant-logic-documentation/./node_modules/core-js/modules/es.string.replace-all.js","webpack://radiant-logic-documentation/./node_modules/core-js/modules/esnext.string.replace-all.js","webpack://radiant-logic-documentation/./src/templates/javadoc-page.js"],"sourcesContent":["var uncurryThis = require('../internals/function-uncurry-this');\nvar toObject = require('../internals/to-object');\n\nvar floor = Math.floor;\nvar charAt = uncurryThis(''.charAt);\nvar replace = uncurryThis(''.replace);\nvar stringSlice = uncurryThis(''.slice);\nvar SUBSTITUTION_SYMBOLS = /\\$([$&'`]|\\d{1,2}|<[^>]*>)/g;\nvar SUBSTITUTION_SYMBOLS_NO_NAMED = /\\$([$&'`]|\\d{1,2})/g;\n\n// `GetSubstitution` abstract operation\n// https://tc39.es/ecma262/#sec-getsubstitution\nmodule.exports = function (matched, str, position, captures, namedCaptures, replacement) {\n  var tailPos = position + matched.length;\n  var m = captures.length;\n  var symbols = SUBSTITUTION_SYMBOLS_NO_NAMED;\n  if (namedCaptures !== undefined) {\n    namedCaptures = toObject(namedCaptures);\n    symbols = SUBSTITUTION_SYMBOLS;\n  }\n  return replace(replacement, symbols, function (match, ch) {\n    var capture;\n    switch (charAt(ch, 0)) {\n      case '$': return '$';\n      case '&': return matched;\n      case '`': return stringSlice(str, 0, position);\n      case \"'\": return stringSlice(str, tailPos);\n      case '<':\n        capture = namedCaptures[stringSlice(ch, 1, -1)];\n        break;\n      default: // \\d\\d?\n        var n = +ch;\n        if (n === 0) return match;\n        if (n > m) {\n          var f = floor(n / 10);\n          if (f === 0) return match;\n          if (f <= m) return captures[f - 1] === undefined ? charAt(ch, 1) : captures[f - 1] + charAt(ch, 1);\n          return match;\n        }\n        capture = captures[n - 1];\n    }\n    return capture === undefined ? '' : capture;\n  });\n};\n","'use strict';\nvar $ = require('../internals/export');\nvar call = require('../internals/function-call');\nvar uncurryThis = require('../internals/function-uncurry-this');\nvar requireObjectCoercible = require('../internals/require-object-coercible');\nvar isCallable = require('../internals/is-callable');\nvar isRegExp = require('../internals/is-regexp');\nvar toString = require('../internals/to-string');\nvar getMethod = require('../internals/get-method');\nvar getRegExpFlags = require('../internals/regexp-get-flags');\nvar getSubstitution = require('../internals/get-substitution');\nvar wellKnownSymbol = require('../internals/well-known-symbol');\nvar IS_PURE = require('../internals/is-pure');\n\nvar REPLACE = wellKnownSymbol('replace');\nvar $TypeError = TypeError;\nvar indexOf = uncurryThis(''.indexOf);\nvar replace = uncurryThis(''.replace);\nvar stringSlice = uncurryThis(''.slice);\nvar max = Math.max;\n\nvar stringIndexOf = function (string, searchValue, fromIndex) {\n  if (fromIndex > string.length) return -1;\n  if (searchValue === '') return fromIndex;\n  return indexOf(string, searchValue, fromIndex);\n};\n\n// `String.prototype.replaceAll` method\n// https://tc39.es/ecma262/#sec-string.prototype.replaceall\n$({ target: 'String', proto: true }, {\n  replaceAll: function replaceAll(searchValue, replaceValue) {\n    var O = requireObjectCoercible(this);\n    var IS_REG_EXP, flags, replacer, string, searchString, functionalReplace, searchLength, advanceBy, replacement;\n    var position = 0;\n    var endOfLastMatch = 0;\n    var result = '';\n    if (searchValue != null) {\n      IS_REG_EXP = isRegExp(searchValue);\n      if (IS_REG_EXP) {\n        flags = toString(requireObjectCoercible(getRegExpFlags(searchValue)));\n        if (!~indexOf(flags, 'g')) throw $TypeError('`.replaceAll` does not allow non-global regexes');\n      }\n      replacer = getMethod(searchValue, REPLACE);\n      if (replacer) {\n        return call(replacer, searchValue, O, replaceValue);\n      } else if (IS_PURE && IS_REG_EXP) {\n        return replace(toString(O), searchValue, replaceValue);\n      }\n    }\n    string = toString(O);\n    searchString = toString(searchValue);\n    functionalReplace = isCallable(replaceValue);\n    if (!functionalReplace) replaceValue = toString(replaceValue);\n    searchLength = searchString.length;\n    advanceBy = max(1, searchLength);\n    position = stringIndexOf(string, searchString, 0);\n    while (position !== -1) {\n      replacement = functionalReplace\n        ? toString(replaceValue(searchString, position, string))\n        : getSubstitution(searchString, string, position, [], undefined, replaceValue);\n      result += stringSlice(string, endOfLastMatch, position) + replacement;\n      endOfLastMatch = position + searchLength;\n      position = stringIndexOf(string, searchString, position + advanceBy);\n    }\n    if (endOfLastMatch < string.length) {\n      result += stringSlice(string, endOfLastMatch);\n    }\n    return result;\n  }\n});\n","// TODO: Remove from `core-js@4`\nrequire('../modules/es.string.replace-all');\n","import React, { useContext, useEffect } from \"react\"\r\nimport { graphql } from \"gatsby\"\r\nimport Layout from \"../components/layout\"\r\nimport \"../styles/javadoc.css\"\r\nimport { Box } from \"@chakra-ui/react\"\r\nimport { GlobalDispatchContext } from \"../context/globalContextProvider\"\r\nimport useApiVersioning from \"../hooks/useApiVersioning\"\r\nconst JavadocPage = ({ data, location }) => {\r\n  const { selectedApiVersion } = useApiVersioning()\r\n  const generated = data.allHtmlContent.edges[0].node.content\r\n    .replaceAll(/(\\.\\.\\/)+/g, \"/\")\r\n    .replaceAll(\".html\", \"\")\r\n    .replaceAll(\r\n      /href=\"\\/?(?!#)/g,\r\n      `href=\"/${\r\n        selectedApiVersion?.versionPrefix === \"\"\r\n          ? \"\"\r\n          : selectedApiVersion?.versionPrefix + \"/\"\r\n      }javadoc/`\r\n    )\r\n  const dispatch = useContext(GlobalDispatchContext)\r\n\r\n  useEffect(() => {\r\n    dispatch({ type: \"UPDATE_SELECTED_API_VERSION\", payload: location })\r\n    dispatch({\r\n      type: \"UPDATE_CURRENT_LOCATION\",\r\n      payload: { location: location },\r\n    })\r\n  }, [location])\r\n\r\n  return (\r\n    <Layout tocContents={data.rootToc}>\r\n      <Box w=\"100%\" dangerouslySetInnerHTML={{ __html: generated }} />\r\n    </Layout>\r\n  )\r\n}\r\n\r\nexport const query = graphql`\r\n  query ($name: String!, $rootTocRegex: String!) {\r\n    allHtmlContent(filter: { name: { eq: $name } }) {\r\n      edges {\r\n        node {\r\n          name\r\n          content\r\n        }\r\n      }\r\n    }\r\n    rootToc: markdownRemark(fileAbsolutePath: { regex: $rootTocRegex }) {\r\n      fileAbsolutePath\r\n      frontmatter {\r\n        title\r\n      }\r\n      htmlAst\r\n    }\r\n  }\r\n`\r\n\r\nexport default JavadocPage\r\n"],"names":["uncurryThis","toObject","floor","Math","charAt","replace","stringSlice","slice","SUBSTITUTION_SYMBOLS","SUBSTITUTION_SYMBOLS_NO_NAMED","module","exports","matched","str","position","captures","namedCaptures","replacement","tailPos","length","m","symbols","undefined","match","ch","capture","n","f","$","call","requireObjectCoercible","isCallable","isRegExp","toString","getMethod","getRegExpFlags","getSubstitution","wellKnownSymbol","IS_PURE","REPLACE","$TypeError","TypeError","indexOf","max","stringIndexOf","string","searchValue","fromIndex","target","proto","replaceAll","replaceValue","IS_REG_EXP","flags","replacer","searchString","functionalReplace","searchLength","advanceBy","O","this","endOfLastMatch","result","data","location","selectedApiVersion","useApiVersioning","generated","allHtmlContent","edges","node","content","versionPrefix","dispatch","useContext","GlobalDispatchContext","useEffect","type","payload","tocContents","rootToc","w","dangerouslySetInnerHTML","__html"],"sourceRoot":""}